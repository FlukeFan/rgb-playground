<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>PresentationFramework</name>
	</assembly>
	<members>
		<member name="N:Microsoft.Win32">
			<summary>Contains classes that wrap Win32 common dialogs and components for use in Windows Presentation Foundation (WPF) controls.</summary>
		</member>
		<member name="T:Microsoft.Win32.CommonDialog">
			<summary>An abstract base class for displaying common Win32 dialogs.</summary>
		</member>
		<member name="M:Microsoft.Win32.CommonDialog.#ctor">
			<summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
		</member>
		<member name="M:Microsoft.Win32.CommonDialog.CheckPermissionsToShowDialog">
			<summary>Determines whether sufficient permissions for displaying a dialog exist.</summary>
			<exception cref="T:System.Security.SecurityException">if sufficient permissions do not exist to display a dialog.</exception>
		</member>
		<member name="M:Microsoft.Win32.CommonDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
			<summary>Defines the common dialog box hook procedure that is overridden to add specific functionality to a common dialog box.</summary>
			<returns>Always returns <see cref="F:System.IntPtr.Zero"></see>.</returns>
			<param name="lParam">Parameters for dialog actions.</param>
			<param name="hwnd">Window handle for the Win32 dialog.</param>
			<param name="msg">Windows message to be processed by the Win32 dialog.</param>
			<param name="wParam">Parameters for dialog actions.</param>
		</member>
		<member name="M:Microsoft.Win32.CommonDialog.Reset">
			<summary>When overridden in a derived class, resets the properties of a common dialog to their default values.</summary>
		</member>
		<member name="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)">
			<summary>When overridden in a derived class, is called to display a particular type of Win32 common dialog.</summary>
			<returns>If the user clicks the OK button of the dialog that is displayed (eg <see cref="T:Microsoft.Win32.OpenFileDialog"></see>, <see cref="T:Microsoft.Win32.SaveFileDialog"></see>), true is returned; otherwise, false.</returns>
			<param name="hwndOwner">Handle to the window that owns the dialog box. </param>
		</member>
		<member name="M:Microsoft.Win32.CommonDialog.ShowDialog">
			<summary>Displays a common dialog.</summary>
			<returns>If the user clicks the OK button of the dialog that is displayed (eg <see cref="T:Microsoft.Win32.OpenFileDialog"></see>, <see cref="T:Microsoft.Win32.SaveFileDialog"></see>), true is returned; otherwise, false.</returns>
		</member>
		<member name="M:Microsoft.Win32.CommonDialog.ShowDialog(System.Windows.Window)">
			<summary>Displays a common dialog.</summary>
			<returns>If the user clicks the OK button of the dialog that is displayed (eg <see cref="T:Microsoft.Win32.OpenFileDialog"></see>, <see cref="T:Microsoft.Win32.SaveFileDialog"></see>), true is returned; otherwise, false.</returns>
			<param name="owner">Handle to the window that owns the dialog. </param>
		</member>
		<member name="P:Microsoft.Win32.CommonDialog.Tag">
			<summary>Gets or sets an object associated with the dialog. This provides the ability to attach an arbitrary object to the dialog.</summary>
			<returns>A <see cref="T:System.Object"></see> that is attached or associated with a dialog.</returns>
		</member>
		<member name="T:Microsoft.Win32.FileDialog">
			<summary>An abstract base class that encapsulates functionality that is common to file dialogs, including <see cref="T:Microsoft.Win32.OpenFileDialog"></see> and <see cref="T:Microsoft.Win32.SaveFileDialog"></see>.</summary>
		</member>
		<member name="M:Microsoft.Win32.FileDialog.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.FileDialog"></see> class.</summary>
		</member>
		<member name="E:Microsoft.Win32.FileDialog.FileOk">
			<summary>Occurs when the user selects a filename by either clicking the Open button of the <see cref="T:Microsoft.Win32.OpenFileDialog"></see> or the Save button of the <see cref="T:Microsoft.Win32.SaveFileDialog"></see>.</summary>
		</member>
		<member name="M:Microsoft.Win32.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
			<summary>Defines the common file dialog hook procedure that is overridden to add common functionality to a file dialog.</summary>
			<returns>Returns <see cref="F:System.IntPtr.Zero"></see> to indicate success; otherwise, a non-zero value is returned to indicate failure.</returns>
			<param name="lParam">Parameters for dialog actions.</param>
			<param name="hwnd">Window handle for the Win32 dialog.</param>
			<param name="msg">Message to be processed by the Win32 dialog.</param>
			<param name="wParam">Parameters for dialog actions.</param>
		</member>
		<member name="M:Microsoft.Win32.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)">
			<summary>Raises the <see cref="E:Microsoft.Win32.FileDialog.FileOk"></see> event.</summary>
			<param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:Microsoft.Win32.FileDialog.Reset">
			<summary>Sets all properties of a file dialog back to their initial values.</summary>
		</member>
		<member name="M:Microsoft.Win32.FileDialog.RunDialog(System.IntPtr)">
			<summary><see cref="M:Microsoft.Win32.CommonDialog.RunDialog(System.IntPtr)"></see> is called to display a file dialog in a derived class, such as <see cref="T:Microsoft.Win32.OpenFileDialog"></see> and <see cref="T:Microsoft.Win32.SaveFileDialog"></see>.</summary>
			<returns>If the user clicks the OK button of the dialog that is displayed (eg <see cref="T:Microsoft.Win32.OpenFileDialog"></see>, <see cref="T:Microsoft.Win32.SaveFileDialog"></see>), true is returned; otherwise, false.</returns>
			<param name="hwndOwner">Handle to the window that owns the dialog. </param>
		</member>
		<member name="M:Microsoft.Win32.FileDialog.ToString">
			<summary>Returns a string that represents a file dialog.</summary>
			<returns>A <see cref="T:System.String"></see> representation of <see cref="T:Microsoft.Win32.FileDialog"></see> that contains the full pathname for any files selected from either <see cref="T:Microsoft.Win32.OpenFileDialog"></see>, <see cref="T:Microsoft.Win32.SaveFileDialog"></see>.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.AddExtension">
			<summary>Gets or sets a value indicating whether a file dialog automatically adds an extension to a filename if the user omits an extension.</summary>
			<returns>true if extensions are added; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.CheckFileExists">
			<summary>Gets or sets a value indicating whether a file dialog displays a warning if the user specifies a filename that does not exist.</summary>
			<returns>true if warnings are displayed; otherwise, false. The default in this base class is false.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.CheckPathExists">
			<summary>Gets or sets a value that specifies whether warnings are displayed if the user types invalid paths and filenames.</summary>
			<returns>true if warnings are displayed; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.DefaultExt">
			<summary>Gets or sets a value that specifies the default extension string to use to filter the list of files that are displayed.</summary>
			<returns>The default extension string. The default is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.DereferenceLinks">
			<summary>Gets or sets a value indicating whether a file dialog returns either the location of the file referenced by a shortcut or the location of the shortcut file (.lnk).</summary>
			<returns>true to return the location referenced; false to return the shortcut location. The default is false.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.FileName">
			<summary>Gets or sets a string containing the full path of the file selected in a file dialog.</summary>
			<returns>A <see cref="T:System.String"></see> that is the full path of the file selected in the file dialog. The default is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.FileNames">
			<summary>Gets an array that contains one filename for each selected file.</summary>
			<returns>An array of <see cref="T:System.String"></see> that contains one filename for each selected file. The default is an array with a single item whose value is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.Filter">
			<summary>Gets or sets the current filename filter string, which determines the choices that appear in the "Save as file type" or "Files of type" box at the bottom of a file dialog.</summary>
			<returns>A <see cref="T:System.String"></see> that contains the filter. The default is <see cref="F:System.String.Empty"></see>.</returns>
			<exception cref="T:System.ArgumentException">if the filter string is invalid.</exception>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.FilterIndex">
			<summary>Gets or sets the index of the filter currently selected in a file dialog.</summary>
			<returns>The <see cref="T:System.Int32"></see> that is the index of the selected filter. The default is 1.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.InitialDirectory">
			<summary>Gets or sets the initial directory that is displayed by a file dialog.</summary>
			<returns>A <see cref="T:System.String"></see> that contains the initial directory. The default is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.Options">
			<summary>Gets the Win32 common file dialog flags that are used by file dialogs for initialization.</summary>
			<returns>A <see cref="T:System.Int32"></see> that contains the Win32 common file dialog flags that are used by file dialogs for initialization.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.RestoreDirectory">
			<summary>Gets or sets a value that causes a file dialog to restore its current directory to the original value before a user changes directory to search for files.</summary>
			<returns>true if directory should be restored after a search; false to use whatever directory string remained from search. The default is false.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.SafeFileName">
			<summary>Gets a string that only contains the filename for the selected file.</summary>
			<returns>A <see cref="T:System.String"></see> that only contains the filename for the selected file. The default is <see cref="F:System.String.Empty"></see>, which is also the value when either no file is selected or a directory is selected.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.SafeFileNames">
			<summary>Gets an array that contains one safe file name for each selected file.</summary>
			<returns>An array of <see cref="T:System.String"></see> that contains one safe file name for each selected file. The default is an array with a single item whose value is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.Title">
			<summary>Gets or sets the text that appears in the title bar of a file dialog.</summary>
			<returns>A <see cref="T:System.String"></see> that is the text that appears in the title bar of a file dialog. The default is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:Microsoft.Win32.FileDialog.ValidateNames">
			<summary>Gets or sets a value indicating whether the dialog accepts only valid Win32 filenames.</summary>
			<returns>true if warnings will be shown when an invalid filename is provided; otherwise, false. The default is false.</returns>
		</member>
		<member name="T:Microsoft.Win32.OpenFileDialog">
			<summary>Represents a common dialog box that allows a user to specify a filename for one or more files to open. This class cannot be inherited.</summary>
		</member>
		<member name="M:Microsoft.Win32.OpenFileDialog.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.OpenFileDialog"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Win32.OpenFileDialog.OpenFile">
			<summary>Opens a read-only stream for the file that is selected by the user using <see cref="T:Microsoft.Win32.OpenFileDialog"></see>.</summary>
			<returns>A new <see cref="T:System.IO.Stream"></see> that contains the selected file.</returns>
			<exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
		</member>
		<member name="M:Microsoft.Win32.OpenFileDialog.OpenFiles">
			<summary>Creates an array that contains one read-only stream for each file selected by the user using <see cref="T:Microsoft.Win32.OpenFileDialog"></see>.</summary>
			<returns>An array of multiple new <see cref="T:System.IO.Stream"></see> objects that contain the selected files.</returns>
			<exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
		</member>
		<member name="M:Microsoft.Win32.OpenFileDialog.Reset">
			<summary>Resets all <see cref="T:Microsoft.Win32.OpenFileDialog"></see> properties to their default values.</summary>
		</member>
		<member name="P:Microsoft.Win32.OpenFileDialog.Multiselect">
			<summary>Gets or sets an option indicating whether <see cref="T:Microsoft.Win32.OpenFileDialog"></see> allows users to select multiple files.</summary>
			<returns>true if multiple selections are allowed; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.Win32.OpenFileDialog.ReadOnlyChecked">
			<summary>Gets or sets a value indicating whether the read-only check box displayed by <see cref="T:Microsoft.Win32.OpenFileDialog"></see> is selected.</summary>
			<returns>true if the checkbox is selected; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.Win32.OpenFileDialog.ShowReadOnly">
			<summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.OpenFileDialog"></see> contains a read-only check box.</summary>
			<returns>true if the checkbox is displayed; otherwise, false. The default is false.</returns>
		</member>
		<member name="T:Microsoft.Win32.SaveFileDialog">
			<summary>Represents a common dialog that allows the user to specify a filename to save a file as. <see cref="T:Microsoft.Win32.SaveFileDialog"></see> cannot be used by an application that is executing under partial trust.</summary>
		</member>
		<member name="M:Microsoft.Win32.SaveFileDialog.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.Win32.SaveFileDialog"></see> class.</summary>
		</member>
		<member name="M:Microsoft.Win32.SaveFileDialog.OpenFile">
			<summary>Creates a read-write file stream for the filename selected by the user using <see cref="T:Microsoft.Win32.SaveFileDialog"></see>.</summary>
			<returns>A new <see cref="T:System.IO.Stream"></see> that contains the selected file.</returns>
			<exception cref="T:System.InvalidOperationException">No files were selected in the dialog.</exception>
		</member>
		<member name="M:Microsoft.Win32.SaveFileDialog.Reset">
			<summary>Resets all <see cref="T:Microsoft.Win32.SaveFileDialog"></see> properties to their default values.</summary>
		</member>
		<member name="P:Microsoft.Win32.SaveFileDialog.CreatePrompt">
			<summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.SaveFileDialog"></see> prompts the user for permission to create a file if the user specifies a file that does not exist.</summary>
			<returns>true if dialog should prompt prior to saving to a filename that did not previously exist; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:Microsoft.Win32.SaveFileDialog.OverwritePrompt">
			<summary>Gets or sets a value indicating whether <see cref="T:Microsoft.Win32.SaveFileDialog"></see> displays a warning if the user specifies the name of a file that already exists.</summary>
			<returns>true if dialog should prompt prior to saving over a filename that previously existed; otherwise, false. The default is true.</returns>
		</member>
		<member name="T:System.ComponentModel.DesignerProperties">
			<summary>Provides attached properties used to communicate with a designer.</summary>
		</member>
		<member name="F:System.ComponentModel.DesignerProperties.IsInDesignModeProperty">
			<summary>Identifies the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"></see> dependency property.</summary>
		</member>
		<member name="M:System.ComponentModel.DesignerProperties.GetIsInDesignMode(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"></see> attached property for the specified <see cref="T:System.Windows.UIElement"></see>.</summary>
			<returns>The <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"></see> property value for the element.</returns>
			<param name="element">The element from which the property value is read.</param>
			<exception cref="T:System.InvalidOperationException">element is null.</exception>
		</member>
		<member name="M:System.ComponentModel.DesignerProperties.SetIsInDesignMode(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.ComponentModel.DesignerProperties.IsInDesignMode"></see> attached property to a specified element. </summary>
			<param name="element">The element to which the attached property is written.</param>
			<param name="value">The needed <see cref="T:System.Boolean"></see> value.</param>
			<exception cref="T:System.InvalidOperationException">element is null.</exception>
		</member>
		<member name="P:System.ComponentModel.DesignerProperties.IsInDesignMode">
			<summary>Gets or sets whether a <see cref="T:System.Windows.DependencyObject"></see> is running in the context of a designer.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that indicates whether a <see cref="T:System.Windows.DependencyObject"></see> is running in the context of a designer.</returns>
		</member>
		<member name="N:System.Windows">
			<summary>Provides several important Windows Presentation Foundation (WPF) base element classes, various classes that support the WPF property system and event logic, and other types that are more broadly consumed by WPF core and framework.</summary>
		</member>
		<member name="T:System.Windows.Application">
			<summary>Encapsulates a Windows Presentation Foundation (WPF) application. </summary>
		</member>
		<member name="M:System.Windows.Application.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Application"></see> class.</summary>
			<exception cref="T:System.InvalidOperationException">More than one instance of the <see cref="T:System.Windows.Application"></see> class is created per <see cref="T:System.AppDomain"></see>.</exception>
		</member>
		<member name="E:System.Windows.Application.Activated">
			<summary>Occurs when an application becomes the foreground application.</summary>
		</member>
		<member name="E:System.Windows.Application.Deactivated">
			<summary>Occurs when an application stops being the foreground application.</summary>
		</member>
		<member name="E:System.Windows.Application.DispatcherUnhandledException">
			<summary>Occurs when an exception is raised by the application but not handled.</summary>
		</member>
		<member name="E:System.Windows.Application.Exit">
			<summary>Occurs just before an application shuts down, and cannot be canceled.</summary>
		</member>
		<member name="E:System.Windows.Application.FragmentNavigation">
			<summary>Occurs when a navigator in the application begins navigation to a content fragment, Navigation occurs immediately if the desired fragment is in the current content, or after the source XAML content has been loaded if the desired fragment is in different content.</summary>
		</member>
		<member name="E:System.Windows.Application.LoadCompleted">
			<summary>Occurs when content that was navigated to by a navigator in the application has been loaded, parsed, and has begun rendering.</summary>
		</member>
		<member name="E:System.Windows.Application.Navigated">
			<summary>Occurs when the content that is being navigated to by a navigator in the application has been found, although it may not have completed loading.</summary>
		</member>
		<member name="E:System.Windows.Application.Navigating">
			<summary>Occurs when a new navigation is requested by a navigator in the application.</summary>
		</member>
		<member name="E:System.Windows.Application.NavigationFailed">
			<summary>Occurs when an error is raised while a navigator in the application is navigating to the requested content.</summary>
		</member>
		<member name="E:System.Windows.Application.NavigationProgress">
			<summary>Occurs periodically during a download that is being managed by a navigator in the application to provide navigation progress information.</summary>
		</member>
		<member name="E:System.Windows.Application.NavigationStopped">
			<summary>Occurs when the StopLoading method of a navigator in the application is called, or when a new navigation is requested by a navigator while a current navigation is in progress.</summary>
		</member>
		<member name="E:System.Windows.Application.SessionEnding">
			<summary>Occurs when the user ends the Windows session by logging off or shutting down the operating system.</summary>
		</member>
		<member name="E:System.Windows.Application.Startup">
			<summary>Occurs when the <see cref="M:System.Windows.Application.Run"></see> method of the <see cref="T:System.Windows.Application"></see> object is called.</summary>
		</member>
		<member name="M:System.Windows.Application.FindResource(System.Object)">
			<summary>Searches for a user interface (UI) resource, such as a <see cref="T:System.Windows.Style"></see> or <see cref="T:System.Windows.Media.Brush"></see>, with the specified key, and raises an exception if the requested resource is not found (see Resources Overview).</summary>
			<returns>The requested resource object. If the requested resource is not found, <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException"></see> is raised.</returns>
			<param name="resourceKey">The name of the resource to find.</param>
			<exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">The resource cannot be found.</exception>
		</member>
		<member name="M:System.Windows.Application.GetContentStream(System.Uri)">
			<summary>Returns a resource stream for a content data file that is located at the specified <see cref="T:System.Uri"></see> (see Windows Presentation Foundation Application Data Files).</summary>
			<returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo"></see> that contains a content data file that is located at the specified <see cref="T:System.Uri"></see>. If a loose resource is not found, null is returned.</returns>
			<param name="uriContent">The relative <see cref="T:System.Uri"></see> that maps to a loose resource.</param>
			<exception cref="T:System.ArgumentException">The <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)"></see> is an absolute <see cref="T:System.Uri"></see>.</exception>
			<exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)"></see> is null.</exception>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString"></see> property of the <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetContentStream(System.Uri)"></see> is null.</exception>
		</member>
		<member name="M:System.Windows.Application.GetCookie(System.Uri)">
			<summary>Retrieves a cookie for the location specified by a <see cref="T:System.Uri"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> value, if the cookie exists; otherwise, a <see cref="T:System.ComponentModel.Win32Exception"></see> is raised.</returns>
			<param name="uri">The <see cref="T:System.Uri"></see> that specifies the location for which a cookie was created.</param>
			<exception cref="T:System.ComponentModel.Win32Exception">A Win32 error is raised by InternetGetCookie (called by <see cref="M:System.Windows.Application.GetCookie(System.Uri)"></see>) if a problem occurs when attempting to retrieve the specified cookie.</exception>
			<exception cref="T:System.InvalidOperationException">Application is hosted inside an HTMLIFrame.</exception>
		</member>
		<member name="M:System.Windows.Application.GetRemoteStream(System.Uri)">
			<summary>Returns a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri"></see> (see Windows Presentation Foundation Application Data Files).</summary>
			<returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo"></see> that contains a resource stream for a site-of-origin data file that is located at the specified <see cref="T:System.Uri"></see>. If the loose resource is not found, null is returned.</returns>
			<param name="uriRemote">The <see cref="T:System.Uri"></see> that maps to a loose resource at the site of origin.</param>
			<exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)"></see> is null.</exception>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString"></see> property of the <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)"></see> is null.</exception>
			<exception cref="T:System.ArgumentException">The <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetRemoteStream(System.Uri)"></see> is either not relative, or is absolute but not in the pack://siteoforigin:,,,/ form.</exception>
		</member>
		<member name="M:System.Windows.Application.GetResourceStream(System.Uri)">
			<summary>Returns a resource stream for a resource data file that is located at the specified <see cref="T:System.Uri"></see> (see Windows Presentation Foundation Application Data Files).</summary>
			<returns>A <see cref="T:System.Windows.Resources.StreamResourceInfo"></see> that contains a resource stream for resource data file that is located at the specified <see cref="T:System.Uri"></see>. If the resource located at the specified <see cref="T:System.Uri"></see> is not found, null is returned.</returns>
			<param name="uriResource">The <see cref="T:System.Uri"></see> that maps to an embedded resource.</param>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString"></see> property of the <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)"></see> is null.</exception>
			<exception cref="T:System.ArgumentNullException">The <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)"></see> is null.</exception>
			<exception cref="T:System.ArgumentException">The <see cref="T:System.Uri"></see> that is passed to <see cref="M:System.Windows.Application.GetResourceStream(System.Uri)"></see> is either not relative, or is absolute but not in the pack://application:,,,/ form.</exception>
		</member>
		<member name="M:System.Windows.Application.LoadComponent(System.Uri)">
			<summary>Loads a XAML file that is located at the specified uniform resource identifier (URI), and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
			<param name="resourceLocato r">A <see cref="T:System.Uri"></see> that maps to a relative XAML file.</param>
			<exception cref="T:System.ArgumentException">The resourceLocator is an absolute URI.</exception>
			<exception cref="T:System.Exception">The file is not a XAML file.</exception>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString"></see> property of the resourceLocator<see cref="T:System.Uri"></see> parameter is null.</exception>
			<exception cref="T:System.ArgumentNullException">resourceLocator is null.</exception>
		</member>
		<member name="M:System.Windows.Application.LoadComponent(System.Object,System.Uri)">
			<summary>Loads a XAML file that is located at the specified uniform resource identifier (URI) and converts it to an instance of the object that is specified by the root element of the XAML file.</summary>
			<param name="resourceLocator">A <see cref="T:System.Uri"></see> that maps to a relative XAML file.</param>
			<param name="component">An object of the same type as the root element of the XAML file.</param>
			<exception cref="T:System.ArgumentException">The resourceLocator is an absolute URI.</exception>
			<exception cref="T:System.Exception">component is of a type that does not match the root element of the XAML file.</exception>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Uri.OriginalString"></see> property of the resourceLocator<see cref="T:System.Uri"></see> parameter is null.</exception>
			<exception cref="T:System.ArgumentNullException">component is null.</exception>
			<exception cref="T:System.ArgumentNullException">resourceLocator is null.</exception>
		</member>
		<member name="M:System.Windows.Application.OnActivated(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.Activated"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
		</member>
		<member name="M:System.Windows.Application.OnDeactivated(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.Deactivated"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnExit(System.Windows.ExitEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.Exit"></see> event.</summary>
			<param name="e">An <see cref="T:System.Windows.ExitEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnFragmentNavigation(System.Windows.Navigation.FragmentNavigationEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.FragmentNavigation"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.FragmentNavigationEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnLoadCompleted(System.Windows.Navigation.NavigationEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.LoadCompleted"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.NavigationEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnNavigated(System.Windows.Navigation.NavigationEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.Navigated"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.NavigationEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnNavigating(System.Windows.Navigation.NavigatingCancelEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.Navigating"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.NavigatingCancelEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnNavigationFailed(System.Windows.Navigation.NavigationFailedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.NavigationFailed"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.NavigationFailedEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnNavigationProgress(System.Windows.Navigation.NavigationProgressEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.NavigationProgress"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.NavigationProgressEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnNavigationStopped(System.Windows.Navigation.NavigationEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.NavigationStopped"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.NavigationEventArgs"></see> that contains the event data. </param>
		</member>
		<member name="M:System.Windows.Application.OnSessionEnding(System.Windows.SessionEndingCancelEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.SessionEnding"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.SessionEndingCancelEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.OnStartup(System.Windows.StartupEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Application.Startup"></see> event.</summary>
			<param name="e">A <see cref="T:System.Windows.StartupEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Application.Run">
			<summary>Starts a Windows Presentation Foundation (WPF) application.</summary>
			<returns>The <see cref="T:System.Int32"></see> application exit code that is returned to the operating system when the application shuts down. By default, the exit code value is 0.</returns>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Application.Run"></see> is called from a browser-hosted application eg an XAML browser application (XBAP).</exception>
		</member>
		<member name="M:System.Windows.Application.Run(System.Windows.Window)">
			<summary>Starts a Windows Presentation Foundation (WPF) application and opens the specified window.</summary>
			<returns>The <see cref="T:System.Int32"></see> application exit code that is returned to the operating system when the application shuts down. By default, the exit code value is 0.</returns>
			<param name="window">A <see cref="T:System.Windows.Window"></see> that opens automatically when an application starts.</param>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Application.Run"></see> is called from a browser-hosted application eg an XAML browser application (XBAP).</exception>
		</member>
		<member name="M:System.Windows.Application.SetCookie(System.Uri,System.String)">
			<summary>Creates a cookie for the location specified by a <see cref="T:System.Uri"></see>.</summary>
			<param name="uri">The <see cref="T:System.Uri"></see> that specifies the location for which the cookie should be created.</param>
			<param name="value">The <see cref="T:System.String"></see> that contains the cookie data.</param>
			<exception cref="T:System.InvalidOperationException">Application is hosted inside an HTMLIFrame.</exception>
			<exception cref="T:System.ComponentModel.Win32Exception">A Win32 error is raised by InternetSetCookie (called by <see cref="M:System.Windows.Application.SetCookie(System.Uri,System.String)"></see>) if a problem occurs when attempting to create the specified cookie.</exception>
		</member>
		<member name="M:System.Windows.Application.Shutdown">
			<summary>Shuts down an application.</summary>
		</member>
		<member name="M:System.Windows.Application.Shutdown(System.Int32)">
			<summary>Shuts down an application that returns the specified exit code to the operating system.</summary>
			<param name="exitCode">An <see cref="T:System.Int32"></see> value that represents the exit code for an application. The default exit code is 0.</param>
		</member>
		<member name="M:System.Windows.Application.TryFindResource(System.Object)">
			<summary>Searches for the specified resource.</summary>
			<returns>The requested resource object. If the requested resource is not found, a null reference is returned.</returns>
			<param name="resourceKey">The name of the resource to find.</param>
		</member>
		<member name="P:System.Windows.Application.Current">
			<summary>Gets the <see cref="T:System.Windows.Application"></see> object for the current <see cref="T:System.AppDomain"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Application"></see> object for the current <see cref="T:System.AppDomain"></see>.</returns>
		</member>
		<member name="P:System.Windows.Application.MainWindow">
			<summary>Gets or sets the main window of the application.</summary>
			<returns>A <see cref="T:System.Windows.Window"></see> that is designated as the main application window.</returns>
			<exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Application.MainWindow"></see> is set from an application that's hosted in a browser, such as an XAML browser applications (XBAPs).</exception>
		</member>
		<member name="P:System.Windows.Application.Properties">
			<summary>Gets a collection of application-scope properties.</summary>
			<returns>An <see cref="T:System.Collections.IDictionary"></see> that contains the application-scope properties.</returns>
		</member>
		<member name="P:System.Windows.Application.Resources">
			<summary>Gets or sets a collection of application-scope resources, such as styles and brushes.</summary>
			<returns>A <see cref="T:System.Windows.ResourceDictionary"></see> object that contains zero or more application-scope resources.</returns>
		</member>
		<member name="P:System.Windows.Application.ShutdownMode">
			<summary>Gets or sets the condition that causes the <see cref="M:System.Windows.Application.Shutdown"></see> method to be called.</summary>
			<returns>A <see cref="T:System.Windows.ShutdownMode"></see> enumeration value. The default value is <see cref="F:System.Windows.ShutdownMode.OnLastWindowClose"></see>.</returns>
		</member>
		<member name="P:System.Windows.Application.StartupUri">
			<summary>Gets or sets a UI that is automatically shown when an application starts.</summary>
			<returns>A <see cref="T:System.Uri"></see> that refers to the UI that automatically opens when an application starts.</returns>
			<exception cref="T:System.ArgumentNullException"><see cref="P:System.Windows.Application.StartupUri"></see> is set with a value of null.</exception>
		</member>
		<member name="P:System.Windows.Application.Windows">
			<summary>Gets the instantiated windows in an application. </summary>
			<returns>A <see cref="T:System.Windows.WindowCollection"></see> that contains references to all window objects in the current <see cref="T:System.AppDomain"></see>.</returns>
		</member>
		<member name="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
			<summary>Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</summary>
		</member>
		<member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute"></see> class.</summary>
		</member>
		<member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)">
			<summary>Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute"></see> .NET Framework attribute is equal to a specified object.</summary>
			<returns>true if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute"></see> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute"></see>; otherwise, false.</returns>
			<param name="obj">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute"></see> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute"></see>.</param>
		</member>
		<member name="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode">
			<summary>Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute"></see> .NET Framework attribute.</summary>
			<returns>An unsigned 32-bit integer value.</returns>
		</member>
		<member name="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants">
			<summary>Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  .NET Framework attribute is applied.</summary>
			<returns>true if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property. false if the attached property is only browsable for immediate child elements of a parent element that owns the attached property. The default is false.</returns>
		</member>
		<member name="T:System.Windows.BaseValueSource">
			<summary>Identifies the property system source of a particular dependency property value.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.Default">
			<summary>Source is the default value, as defined by property metadata. </summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.DefaultStyle">
			<summary>Source is the default style for the current theme. </summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.DefaultStyleTrigger">
			<summary>Source is a trigger-based value from within the default style for the current theme.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.ImplicitStyleReference">
			<summary>Source is an implicit style reference (style was based on detected type or based type).</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.Inherited">
			<summary>Source is a value through property value inheritance.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.Local">
			<summary>Source is a locally set value.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.ParentTemplate">
			<summary>Source is based on a parent template being used by an element.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.ParentTemplateTrigger">
			<summary>Source is a trigger-based value from a parent template that created the element.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.Style">
			<summary>Source is from a style setter of an explicit style.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.StyleTrigger">
			<summary>Source is a trigger-based value from an explicit style.</summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.TemplateTrigger">
			<summary>Source is a trigger-based value in the template. </summary>
		</member>
		<member name="F:System.Windows.BaseValueSource.Unknown">
			<summary>Source is not known. This is the default value.</summary>
		</member>
		<member name="T:System.Windows.ColorConvertedBitmapExtension">
			<summary>Implements a markup extension that enables <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap"></see> creation. A <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap"></see> does not have a embedded profile, the profile instead being based on source and destination values.</summary>
		</member>
		<member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ColorConvertedBitmapExtension"></see> class.</summary>
		</member>
		<member name="M:System.Windows.ColorConvertedBitmapExtension.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ColorConvertedBitmapExtension"></see> class.</summary>
			<param name="image">A string that is parsed to determine three URIs: image source, source color context, and destination color context.</param>
		</member>
		<member name="M:System.Windows.ColorConvertedBitmapExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.ColorConvertedBitmapExtension"></see>, this is the completed <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Media.Imaging.ColorConvertedBitmap"></see> based on the values passed to the constructor.</returns>
			<param name="serviceProvider">An object that can provide services for the markup extension. This service is expected to provide results for <see cref="T:System.Windows.Markup.IUriContext"></see>.</param>
		</member>
		<member name="T:System.Windows.ColumnSpaceDistribution">
			<summary>Describes how to distribute space in columnated flow content.</summary>
		</member>
		<member name="F:System.Windows.ColumnSpaceDistribution.Between">
			<summary>Space is distributed evenly between all columns.</summary>
		</member>
		<member name="F:System.Windows.ColumnSpaceDistribution.Left">
			<summary>Space is distributed before the first column.</summary>
		</member>
		<member name="F:System.Windows.ColumnSpaceDistribution.Right">
			<summary>Space is distributed after the last column.</summary>
		</member>
		<member name="T:System.Windows.ComponentResourceKey">
			<summary>Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</summary>
		</member>
		<member name="M:System.Windows.ComponentResourceKey.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ComponentResourceKey"></see> class.</summary>
		</member>
		<member name="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
			<summary>Initializes a new instance of a <see cref="T:System.Windows.ComponentResourceKey"></see> with a specified <see cref="T:System.Type"></see> and <see cref="P:System.Windows.ComponentResourceKey.ResourceId"></see>. </summary>
			<param name="targetType">Specifies the type that defines the resource key.</param>
			<param name="id">Specifies a unique ID to differentiate this key from others associated with this type.</param>
		</member>
		<member name="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
			<summary>Determines whether the provided object is equal to the current <see cref="T:System.Windows.ComponentResourceKey"></see>. </summary>
			<returns>true if the objects are equal; otherwise, false.</returns>
			<param name="o">Object to compare with the current <see cref="T:System.Windows.ComponentResourceKey"></see>.</param>
		</member>
		<member name="M:System.Windows.ComponentResourceKey.GetHashCode">
			<summary>Returns a hash code for this <see cref="T:System.Windows.ComponentResourceKey"></see>. </summary>
			<returns>A signed 32-bit integer value.</returns>
		</member>
		<member name="M:System.Windows.ComponentResourceKey.ToString">
			<summary>Gets the string representation of a <see cref="T:System.Windows.ComponentResourceKey"></see>. </summary>
			<returns>The string representation.</returns>
		</member>
		<member name="P:System.Windows.ComponentResourceKey.Assembly">
			<summary>Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</summary>
			<returns>The retrieved assembly, as a reflection class.</returns>
		</member>
		<member name="P:System.Windows.ComponentResourceKey.ResourceId">
			<summary>Gets or sets a unique identifier (ID) to differentiate this key from others associated with this type.</summary>
			<returns>A unique identifier. Typically this is a string.</returns>
		</member>
		<member name="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
			<summary>Gets or sets the Type that defines the resource key.</summary>
			<returns>The type that defines the resource key.</returns>
		</member>
		<member name="T:System.Windows.Condition">
			<summary>Represents a condition for the <see cref="T:System.Windows.MultiTrigger"></see> and the <see cref="T:System.Windows.MultiDataTrigger"></see>, which apply changes to property values based on a set of conditions. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Condition.#ctor">
			<summary>Initializes a new instance of the Condition class. </summary>
		</member>
		<member name="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Condition"></see> class. </summary>
			<param name="binding">The binding that specifies the property of the condition.</param>
			<param name="conditionValue">The value of the condition.</param>
		</member>
		<member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)">
			<summary>Initializes a new instance of the Condition class with the specified property and value. This constructor performs parameter validation. </summary>
			<param name="conditionProperty">The property of the condition.</param>
			<param name="conditionValue">The value of the condition.</param>
		</member>
		<member name="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
			<summary>Initializes a new instance of the Condition class with the specified property, value, and the name of the source object.</summary>
			<param name="sourceName">x:Name of the object with the conditionProperty.</param>
			<param name="conditionProperty">The property of the condition.</param>
			<param name="conditionValue">The value of the condition.</param>
		</member>
		<member name="P:System.Windows.Condition.Binding">
			<summary>Gets or sets the binding that specifies the property of the condition. This is only applicable to <see cref="T:System.Windows.MultiDataTrigger"></see> objects.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Condition.Property">
			<summary>Gets or sets the property of the condition. This is only applicable to <see cref="T:System.Windows.MultiTrigger"></see> objects.</summary>
			<returns>A <see cref="T:System.Windows.DependencyProperty"></see> that specifies the property of the condition. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Condition.SourceName">
			<summary>Gets or sets the name of the object with the property that causes the associated setters to be applied. This is only applicable to <see cref="T:System.Windows.MultiTrigger"></see> objects.</summary>
			<returns>The default property is null. If this property is null, then the property of the object being styled causes the associated setters to be applied.</returns>
			<exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Condition"></see> is in use, it cannot be modified.</exception>
		</member>
		<member name="P:System.Windows.Condition.Value">
			<summary>Gets or sets the value of the condition.</summary>
			<returns>The <see cref="P:System.Windows.Condition.Value"></see> property cannot be null for a given <see cref="T:System.Windows.Condition"></see>.See also the Exceptions section. The default value is null.</returns>
			<exception cref="T:System.ArgumentException"><see cref="T:System.Windows.Markup.MarkupExtension"></see>s are not supported.</exception>
			<exception cref="T:System.ArgumentException">Expressions are not supported.</exception>
		</member>
		<member name="T:System.Windows.ConditionCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Condition"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.ConditionCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ConditionCollection"></see> class.</summary>
		</member>
		<member name="P:System.Windows.ConditionCollection.IsSealed">
			<summary>Gets a value that indicates whether this trigger is read-only and cannot be changed .</summary>
			<returns>true if the trigger is read-only; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.CornerRadius">
			<summary> Represents the radii of a rectangle's corners. </summary>
		</member>
		<member name="M:System.Windows.CornerRadius.#ctor(System.Double)">
			<summary>  Initializes a new instance of the <see cref="T:System.Windows.CornerRadius"></see> class with a specified uniform radius value for every corner or the rectangle. </summary>
			<param name="uniformRadius">The radius value applied to every corner of the rectangle.</param>
		</member>
		<member name="M:System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)">
			<summary>  Initializes a new instance of the <see cref="T:System.Windows.CornerRadius"></see> class with the specified radius values for each corner or the rectangle. </summary>
			<param name="bottomLeft">Radius of the bottom left corner.</param>
			<param name="bottomRight">Radius of the bottom right corner.</param>
			<param name="topRight">Radius of the top right corner.</param>
			<param name="topLeft">Radius of the top left corner.</param>
		</member>
		<member name="M:System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)">
			<summary>Compares two <see cref="T:System.Windows.CornerRadius"></see> structures for equality.</summary>
			<param name="cornerRadius">The <see cref="T:System.Windows.CornerRadius"></see> to compare to this <see cref="T:System.Windows.CornerRadius"></see>.</param>
		</member>
		<member name="M:System.Windows.CornerRadius.Equals(System.Object)">
			<summary>Determines whether the specified Object is a <see cref="T:System.Windows.CornerRadius"></see> and whether it contains the same corner radius values as this <see cref="T:System.Windows.CornerRadius"></see>. </summary>
			<returns>true if obj is a <see cref="T:System.Windows.CornerRadius"></see> and contains the same corner radius values as this <see cref="T:System.Windows.CornerRadius"></see>; otherwise, false.</returns>
			<param name="obj">The Object to compare.</param>
		</member>
		<member name="M:System.Windows.CornerRadius.GetHashCode">
			<summary>Returns the hash code for this <see cref="T:System.Windows.CornerRadius"></see>. </summary>
			<returns>The hash code for this <see cref="T:System.Windows.CornerRadius"></see> structure.</returns>
		</member>
		<member name="M:System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
			<summary>Overloaded operator that compares two <see cref="T:System.Windows.CornerRadius"></see> structures for equality.</summary>
			<returns>true if cr1 and cr2 have equal values for all corners (same values for <see cref="P:System.Windows.CornerRadius.TopLeft"></see>, <see cref="P:System.Windows.CornerRadius.TopRight"></see>, <see cref="P:System.Windows.CornerRadius.BottomLeft"></see>, <see cref="P:System.Windows.CornerRadius.BottomRight"></see>); false if cr1 and cr2 have different values for one or more corners.</returns>
			<param name="cr2">The second <see cref="T:System.Windows.CornerRadius"></see> to compare.</param>
			<param name="cr1">The first <see cref="T:System.Windows.CornerRadius"></see> to compare.</param>
		</member>
		<member name="M:System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)">
			<summary> Overloaded operator that compares two <see cref="T:System.Windows.CornerRadius"></see> structures for inequality. </summary>
			<returns>true if cr1 and cr2 have different values for one or more corners (different values for <see cref="P:System.Windows.CornerRadius.TopLeft"></see>, <see cref="P:System.Windows.CornerRadius.TopRight"></see>, <see cref="P:System.Windows.CornerRadius.BottomLeft"></see>, <see cref="P:System.Windows.CornerRadius.BottomRight"></see>); false if cr1 and cr2 have identical corners.</returns>
			<param name="cr2">The second <see cref="T:System.Windows.CornerRadius"></see> to compare.</param>
			<param name="cr1">The first <see cref="T:System.Windows.CornerRadius"></see> to compare.</param>
		</member>
		<member name="M:System.Windows.CornerRadius.ToString">
			<summary>Converts the current value of a <see cref="T:System.Windows.CornerRadius"></see> to a <see cref="T:System.String"></see>. </summary>
			<returns>A string representation of the <see cref="T:System.Windows.CornerRadius"></see>.</returns>
		</member>
		<member name="P:System.Windows.CornerRadius.BottomLeft">
			<summary> Gets or sets the radius of the bottom left corner. </summary>
			<returns>The radius of the bottom left corner. The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.CornerRadius.BottomRight">
			<summary> Gets or sets the radius of the bottom right corner. </summary>
			<returns>The radius of the bottom right corner. The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.CornerRadius.TopLeft">
			<summary> Gets or sets the radius of the top left corner. </summary>
			<returns>The radius of the top left corner. The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.CornerRadius.TopRight">
			<summary> Gets or sets the radius of the top right corner. </summary>
			<returns>The radius of the top right corner. The default value is 0.</returns>
		</member>
		<member name="T:System.Windows.CornerRadiusConverter">
			<summary>Converts instances of other types to and from a <see cref="T:System.Windows.CornerRadius"></see>. </summary>
		</member>
		<member name="M:System.Windows.CornerRadiusConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.CornerRadiusConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.CornerRadiusConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Indicates whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.CornerRadius"></see>. </summary>
			<returns>true if object of the specified type can be converted to a <see cref="T:System.Windows.CornerRadius"></see>; otherwise, false.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="sourceType">The source <see cref="T:System.Type"></see> that is being queried for conversion support.</param>
		</member>
		<member name="M:System.Windows.CornerRadiusConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether instances of <see cref="T:System.Windows.CornerRadius"></see> can be converted to the specified type. </summary>
			<returns>true if instances of <see cref="T:System.Windows.CornerRadius"></see> can be converted to destinationType; otherwise, false.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="destinationType">The desired type this <see cref="T:System.Windows.CornerRadius"></see> is being evaluated to be converted to.</param>
		</member>
		<member name="M:System.Windows.CornerRadiusConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts the specified object to a <see cref="T:System.Windows.CornerRadius"></see>.</summary>
			<returns>The <see cref="T:System.Windows.CornerRadius"></see> created from converting source.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="cultureInfo">Describes the CultureInfo of the type being converted.</param>
			<param name="source">The object being converted.</param>
			<exception cref="T:System.ArgumentNullException">Thrown if the example object is null.</exception>
			<exception cref="T:System.ArgumentException">Thrown if the example object is not null and is not a valid type which can be converted to a <see cref="T:System.Windows.CornerRadius"></see>.</exception>
		</member>
		<member name="M:System.Windows.CornerRadiusConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts the specified <see cref="T:System.Windows.CornerRadius"></see> to the specified type.</summary>
			<returns>The object created from converting this <see cref="T:System.Windows.CornerRadius"></see>.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="destinationType">The type to convert the <see cref="T:System.Windows.CornerRadius"></see> to.</param>
			<param name="cultureInfo">Describes the CultureInfo of the type being converted.</param>
			<param name="value">The <see cref="T:System.Windows.CornerRadius"></see> to convert.</param>
			<exception cref="T:System.ArgumentNullException">Thrown if the example object is null.</exception>
			<exception cref="T:System.ArgumentException">Thrown if the example object is not null and is not a <see cref="T:System.Windows.Media.Brush"></see>, or if the destinationType is not one of the valid destination types.</exception>
		</member>
		<member name="T:System.Windows.DataTemplate">
			<summary>Describes the visual structure of a data object.</summary>
		</member>
		<member name="M:System.Windows.DataTemplate.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplate"></see> class.</summary>
		</member>
		<member name="M:System.Windows.DataTemplate.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplate"></see> class with the specified <see cref="P:System.Windows.DataTemplate.DataType"></see> property.</summary>
			<param name="dataType">If the template is intended for object data, this is the Type name of the data object. To refer to the Type name of the class, use the x:Type Markup Extension. If the template is intended for XML data, this is the string that represents the tag name of the data.</param>
		</member>
		<member name="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
			<summary>Checks the templated parent against a set of rules.</summary>
			<param name="templatedParent">The element this template is applied to.</param>
		</member>
		<member name="P:System.Windows.DataTemplate.DataType">
			<summary>Gets or sets the type for which this <see cref="T:System.Windows.DataTemplate"></see> is intended. </summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.DataTemplate.Triggers">
			<summary>Gets a collection of triggers that apply property values or perform actions based on one or more conditions.</summary>
			<returns>A collection of trigger objects. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.DataTemplateKey">
			<summary>Represents the resource key for the <see cref="T:System.Windows.DataTemplate"></see> class.</summary>
		</member>
		<member name="M:System.Windows.DataTemplateKey.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplateKey"></see> class.</summary>
		</member>
		<member name="M:System.Windows.DataTemplateKey.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DataTemplateKey"></see> class with the specified type.</summary>
			<param name="dataType">The type for which this template is designed. This is either a <see cref="T:System.Type"></see> (to indicate that the <see cref="T:System.Windows.DataTemplate"></see> is used to display items of the given type), or a string (to indicate that the <see cref="T:System.Windows.DataTemplate"></see> is used to display <see cref="T:System.Xml.XmlNode"></see> elements with the given tag name).</param>
		</member>
		<member name="T:System.Windows.DataTrigger">
			<summary>Represents a trigger that applies property values or performs actions when the bound data meets a specified condition.</summary>
		</member>
		<member name="M:System.Windows.DataTrigger.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DataTrigger"></see> class.</summary>
		</member>
		<member name="M:System.Windows.DataTrigger.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.DataTrigger.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.DataTrigger.Binding">
			<summary>Gets or sets the binding that produces the property value of the data object.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.DataTrigger.Setters">
			<summary>Gets a collection of <see cref="T:System.Windows.Setter"></see> objects, which describe the property values to apply when the data item meets the specified condition.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.DataTrigger.Value">
			<summary>Gets or sets the value to be compared with the property value of the data object.</summary>
			<returns>The default value is null. See also the Exceptions section.</returns>
			<exception cref="T:System.ArgumentException">Only load-time <see cref="T:System.Windows.Markup.MarkupExtension"></see>s are supported.</exception>
			<exception cref="T:System.ArgumentException">Expressions are not supported. Bindings are not supported.</exception>
		</member>
		<member name="T:System.Windows.DependencyPropertyHelper">
			<summary>Provides a single helper method (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)"></see>) that reports the property system source for the effective value of a dependency property.</summary>
		</member>
		<member name="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Returns a structure that reports various metadata and property system characteristics of a specified dependency property.on a particular <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<returns>A <see cref="T:System.Windows.ValueSource"></see> structure that reports the specific information.</returns>
			<param name="dependencyObject">The element that contains the dependencyProperty to report information for.</param>
			<param name="dependencyProperty">The identifier for the dependency property to report information for.</param>
		</member>
		<member name="T:System.Windows.DialogResultConverter">
			<summary>Converts the <see cref="P:System.Windows.Window.DialogResult"></see> property, which is a <see cref="T:System.Nullable`1"></see> value of type <see cref="T:System.Boolean"></see>, to and from other types.</summary>
		</member>
		<member name="M:System.Windows.DialogResultConverter.#ctor">
			<summary>Initializes a <see cref="T:System.Windows.DialogResultConverter"></see> object.</summary>
		</member>
		<member name="M:System.Windows.DialogResultConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary><see cref="T:System.Windows.DialogResultConverter"></see> does not support converting from other types to <see cref="P:System.Windows.Window.DialogResult"></see> (a <see cref="T:System.Nullable`1"></see> value of type <see cref="T:System.Boolean"></see>).</summary>
			<returns>A <see cref="T:System.Boolean"></see> that always returns false.</returns>
			<param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
			<param name="sourceType">A <see cref="T:System.Type"></see> that represents the type to convert from.</param>
		</member>
		<member name="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary><see cref="T:System.Windows.DialogResultConverter"></see> does not support converting from <see cref="P:System.Windows.Window.DialogResult"></see> (a <see cref="T:System.Nullable`1"></see> value of type <see cref="T:System.Boolean"></see>) to other types.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that always returns false.</returns>
			<param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
			<param name="sourceType">A <see cref="T:System.Type"></see> that represents the type to convert to.</param>
		</member>
		<member name="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary><see cref="T:System.Windows.DialogResultConverter"></see> does not support converting from <see cref="P:System.Windows.Window.DialogResult"></see> (a <see cref="T:System.Nullable`1"></see> value of type <see cref="T:System.Boolean"></see>) to other types.</summary>
			<param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
			<param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture. If a null reference is passed, the current culture is assumed.</param>
			<param name="source">The <see cref="T:System.Object"></see> to convert.</param>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.DialogResultConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)"></see> is called.</exception>
		</member>
		<member name="M:System.Windows.DialogResultConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary><see cref="T:System.Windows.DialogResultConverter"></see> does not support converting from other types to <see cref="P:System.Windows.Window.DialogResult"></see> (a <see cref="T:System.Nullable`1"></see> value of type <see cref="T:System.Boolean"></see>).</summary>
			<param name="typeDescriptorContext">A <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
			<param name="destinationType">The <see cref="T:System.Type"></see> to convert the value parameter to.</param>
			<param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture. If a null reference is passed, the current culture is assumed.</param>
			<param name="value">The <see cref="T:System.Object"></see> to convert.</param>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.DialogResultConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)"></see> is called.</exception>
		</member>
		<member name="T:System.Windows.DynamicResourceExtension">
			<summary>Implements a markup extension that supports dynamic resource references made from XAML. </summary>
		</member>
		<member name="M:System.Windows.DynamicResourceExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DynamicResourceExtension"></see> class.</summary>
		</member>
		<member name="M:System.Windows.DynamicResourceExtension.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DynamicResourceExtension"></see> class, with the provided initial key.</summary>
			<param name="resourceKey">The key of the resource that this markup extension references.</param>
		</member>
		<member name="M:System.Windows.DynamicResourceExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.DynamicResourceExtension"></see>, this is the object found in a resource dictionary in the current parent chain that is keyed by the <see cref="P:System.Windows.DynamicResourceExtension.ResourceKey"></see>.</summary>
			<returns>The object to set on the property where the extension is applied. Rather than the actual value, this will be an expression that will be evaluated at a later time.</returns>
			<param name="serviceProvider">Object that can provide services for the markup extension.</param>
			<exception cref="T:System.InvalidOperationException">Attempted to provide a value for an extension that did not provide a resourceKey.</exception>
		</member>
		<member name="P:System.Windows.DynamicResourceExtension.ResourceKey">
			<summary>Gets or sets the key specified by this dynamic resource reference. The key is used to lookup a resource in resource dictionaries, by means of an intermediate expression. </summary>
			<returns>The resource key that this dynamic resource reference specifies.</returns>
		</member>
		<member name="T:System.Windows.DynamicResourceExtensionConverter">
			<summary>Converts from parsed XAML to <see cref="T:System.Windows.DynamicResourceExtension"></see> and supports dynamic resource references made from XAML. </summary>
		</member>
		<member name="M:System.Windows.DynamicResourceExtensionConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.DynamicResourceExtensionConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.DynamicResourceExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Returns a value indicating whether this converter can convert an object to the given destination type using the context. </summary>
			<returns>true if the conversion is enabled by the converter; otherwise, false. See Remarks.</returns>
			<param name="context">Context in which the provided type should be evaluated.</param>
			<param name="destinationType">The type of the destination/output of conversion.</param>
		</member>
		<member name="M:System.Windows.DynamicResourceExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts the specified object to another type.</summary>
			<returns>The returned converted object. Cast this to the requested type. Ordinarily this should be cast to <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor"></see>.</returns>
			<param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see> object that specifies the culture to represent the number. </param>
			<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> object that provides a format context.</param>
			<param name="destinationType">Type that should be converted to. </param>
			<param name="value">Value to be converted. This is expected to be type <see cref="T:System.Windows.DynamicResourceExtension"></see>.</param>
		</member>
		<member name="T:System.Windows.EventSetter">
			<summary>Represents an event setter in a style. Event setters invoke the specified event handlers in response to events.</summary>
		</member>
		<member name="M:System.Windows.EventSetter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.EventSetter"></see> class. </summary>
		</member>
		<member name="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.EventSetter"></see> class, using the provided event and handler parameters. </summary>
			<param name="routedEvent">The particular routed event that the <see cref="T:System.Windows.EventSetter"></see> responds to.</param>
			<param name="handler">The handler to assign in this setter.</param>
		</member>
		<member name="P:System.Windows.EventSetter.Event">
			<summary>Gets or sets the particular routed event that this <see cref="T:System.Windows.EventSetter"></see> responds to.</summary>
			<returns>The identifier field of the routed event.</returns>
			<exception cref="T:System.InvalidOperationException">Attempted to set this property on a sealed <see cref="T:System.Windows.EventSetter"></see> .</exception>
		</member>
		<member name="P:System.Windows.EventSetter.HandledEventsToo">
			<summary>Gets or sets a value that determines whether the handler assigned to the setter should still be invoked, even if the event is marked handled in its event data. </summary>
			<returns>true if the handler should still be invoked; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.EventSetter.Handler">
			<summary>Gets or sets the reference to a handler for a routed event in the setter. </summary>
			<returns>Reference to the handler that is attached by this <see cref="T:System.Windows.EventSetter"></see>.</returns>
		</member>
		<member name="T:System.Windows.EventTrigger">
			<summary>Represents a trigger that applies a set of actions in response to an event.</summary>
		</member>
		<member name="M:System.Windows.EventTrigger.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.EventTrigger"></see> class. </summary>
		</member>
		<member name="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.EventTrigger"></see> class with the specified event.</summary>
			<param name="routedEvent">The <see cref="T:System.Windows.RoutedEvent"></see> that activates this trigger.</param>
		</member>
		<member name="M:System.Windows.EventTrigger.AddChild(System.Object)">
			<summary>Adds the specified object to the <see cref="P:System.Windows.EventTrigger.Actions"></see> collection of the current event trigger.</summary>
			<param name="value">A <see cref="T:System.Windows.TriggerAction"></see> object to add to the <see cref="P:System.Windows.EventTrigger.Actions"></see> collection of this trigger.</param>
		</member>
		<member name="M:System.Windows.EventTrigger.ShouldSerializeActions">
			<summary>Returns whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.EventTrigger.Actions"></see> property on instances of this class.</summary>
			<returns>Returns true if the <see cref="P:System.Windows.EventTrigger.Actions"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.EventTrigger.Actions">
			<summary>Gets the collection of actions to apply when the event occurs.</summary>
			<returns>The default is an empty collection.</returns>
		</member>
		<member name="P:System.Windows.EventTrigger.RoutedEvent">
			<summary>Gets or sets the <see cref="T:System.Windows.RoutedEvent"></see> that will activate this trigger.</summary>
			<returns>The default value is null.</returns>
			<exception cref="T:System.ArgumentNullException">The <see cref="P:System.Windows.EventTrigger.RoutedEvent"></see> property cannot be null.</exception>
		</member>
		<member name="P:System.Windows.EventTrigger.SourceName">
			<summary>Gets or sets the name of the object with the event that activates this trigger. This is only used by element triggers or template triggers.</summary>
			<returns>The default value is null. If this property value is null, then the element being monitored for the raising of the event is the templated parent or the logical tree root.</returns>
			<exception cref="T:System.InvalidOperationException">After an <see cref="T:System.Windows.EventTrigger"></see> is in use, it cannot be modified.</exception>
		</member>
		<member name="T:System.Windows.ExceptionRoutedEventArgs">
			<summary>Provides data for the  <see cref="T:System.Windows.Controls.Image"></see> and <see cref="T:System.Windows.Controls.MediaElement"></see> failed events. This class cannot be inherited.</summary>
		</member>
		<member name="P:System.Windows.ExceptionRoutedEventArgs.ErrorException">
			<summary>Gets the exception that caused the error condition.</summary>
			<returns>The exception that details the specific error condition.</returns>
			<exception cref="T:System.IO.FileNotFoundException">The media file is not found.</exception>
			<exception cref="T:System.Runtime.InteropServices.COMException">A COM error code appears.</exception>
			<exception cref="T:System.NotSupportedException">Windows Media Player version 10 is not detected.-or-Video resources are insufficient for media playback.</exception>
			<exception cref="T:System.Security.SecurityException">The attempt to access the media file is denied.</exception>
			<exception cref="T:System.IO.FileFormatException">The media file format is not supported by any installed codec.-or-The file format is not recognized.</exception>
		</member>
		<member name="T:System.Windows.ExitEventArgs">
			<summary>Event arguments for the <see cref="E:System.Windows.Application.Exit"></see> event.</summary>
		</member>
		<member name="P:System.Windows.ExitEventArgs.ApplicationExitCode">
			<summary>Gets or sets the exit code that an application returns to the operating system when the application exits.</summary>
			<returns>The exit code that an application returns to the operating system when the application exits.</returns>
		</member>
		<member name="T:System.Windows.ExitEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Application.Exit"></see> event.</summary>
		</member>
		<member name="T:System.Windows.FigureHorizontalAnchor">
			<summary>Describes a position reference for a figure in a horizontal direction.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.ColumnCenter">
			<summary>Anchor the figure in the center of the column content area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.ColumnLeft">
			<summary>Anchor the figure to the left of the column content area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.ColumnRight">
			<summary>Anchor the figure to the right of the column content area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.ContentCenter">
			<summary>Anchor the figure in the center of the page content area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.ContentLeft">
			<summary>Anchor the figure to the left of the page content area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.ContentRight">
			<summary>Anchor the figure to the right of the page content area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.PageCenter">
			<summary>Anchor the figure in the center of the page area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.PageLeft">
			<summary>Anchor the figure to the left of the page area.</summary>
		</member>
		<member name="F:System.Windows.FigureHorizontalAnchor.PageRight">
			<summary>Anchor the figure to the right of the page area.</summary>
		</member>
		<member name="T:System.Windows.FigureLength">
			<summary>Describes the height or width of a <see cref="T:System.Windows.Documents.Figure"></see>.</summary>
		</member>
		<member name="M:System.Windows.FigureLength.#ctor(System.Double)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FigureLength"></see> class with the specified number of pixels in length.</summary>
			<param name="pixels">The number of device-independent pixels (96 pixels-per-inch) that make up the length.</param>
		</member>
		<member name="M:System.Windows.FigureLength.#ctor(System.Double,System.Windows.FigureUnitType)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FigureLength"></see> class with the specified <see cref="P:System.Windows.FigureLength.Value"></see> and <see cref="P:System.Windows.FigureLength.FigureUnitType"></see>.</summary>
			<param name="type">The <see cref="P:System.Windows.FigureLength.Value"></see> of the <see cref="P:System.Windows.FigureLength.FigureUnitType"></see> class.</param>
			<param name="value">The <see cref="P:System.Windows.FigureLength.Value"></see> of the <see cref="T:System.Windows.FigureLength"></see> class.</param>
		</member>
		<member name="M:System.Windows.FigureLength.Equals(System.Windows.FigureLength)">
			<summary>Compares two <see cref="T:System.Windows.FigureLength"></see> structures for equality.</summary>
			<returns>true if figureLength is identical to this <see cref="T:System.Windows.FigureLength"></see>; otherwise, false.</returns>
			<param name="figureLength">The <see cref="T:System.Windows.FigureLength"></see> to compare to this instance.</param>
		</member>
		<member name="M:System.Windows.FigureLength.Equals(System.Object)">
			<summary>Determines whether the specified Object is a <see cref="T:System.Windows.FigureLength"></see> and whether it is identical to this <see cref="T:System.Windows.FigureLength"></see>.</summary>
			<returns>true if oCompare is a <see cref="T:System.Windows.FigureLength"></see> and is identical to this <see cref="T:System.Windows.FigureLength"></see>; otherwise, false.</returns>
			<param name="oCompare">The Object to compare to this instance.</param>
		</member>
		<member name="M:System.Windows.FigureLength.GetHashCode">
			<summary>Returns the hash code for this <see cref="T:System.Windows.FigureLength"></see>.</summary>
			<returns>The hash code for this <see cref="T:System.Windows.FigureLength"></see> structure.</returns>
		</member>
		<member name="M:System.Windows.FigureLength.op_Equality(System.Windows.FigureLength,System.Windows.FigureLength)">
			<summary>Compares two <see cref="T:System.Windows.FigureLength"></see> structures for equality.</summary>
			<returns>true if fl1 and fl2 are equal; otherwise, false.</returns>
			<param name="fl1">The first <see cref="T:System.Windows.FigureLength"></see> structure to compare.</param>
			<param name="fl2">The second <see cref="T:System.Windows.FigureLength"></see> structure to compare.</param>
		</member>
		<member name="M:System.Windows.FigureLength.op_Inequality(System.Windows.FigureLength,System.Windows.FigureLength)">
			<summary>Compares two <see cref="T:System.Windows.FigureLength"></see> structures for inequality.</summary>
			<returns>true if fl1 and fl2 are not equal; otherwise, false.</returns>
			<param name="fl1">The first <see cref="T:System.Windows.FigureLength"></see> structure to compare.</param>
			<param name="fl2">The second <see cref="T:System.Windows.FigureLength"></see> structure to compare.</param>
		</member>
		<member name="M:System.Windows.FigureLength.ToString">
			<summary>Creates a String representation of this <see cref="T:System.Windows.FigureLength"></see>.</summary>
			<returns>A String representation of this <see cref="T:System.Windows.FigureLength"></see>.</returns>
		</member>
		<member name="P:System.Windows.FigureLength.FigureUnitType">
			<summary>Gets the unit type of the <see cref="P:System.Windows.FigureLength.Value"></see>.</summary>
			<returns>The unit type of this <see cref="P:System.Windows.FigureLength.Value"></see>. The default value is <see cref="F:System.Windows.FigureUnitType.Auto"></see>.</returns>
		</member>
		<member name="P:System.Windows.FigureLength.IsAbsolute">
			<summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength"></see> holds an absolute value (in pixels).</summary>
			<returns>true if this <see cref="T:System.Windows.FigureLength"></see> holds an absolute value (in pixels); otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.FigureLength.IsAuto">
			<summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength"></see> is automatic (not specified).</summary>
			<returns>true if this <see cref="T:System.Windows.FigureLength"></see> is automatic (not specified); otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.FigureLength.IsColumn">
			<summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength"></see> has a <see cref="T:System.Windows.FigureUnitType"></see> property value of <see cref="F:System.Windows.FigureUnitType.Column"></see>.</summary>
			<returns>true if this <see cref="T:System.Windows.FigureLength"></see> has a <see cref="T:System.Windows.FigureUnitType"></see> property value of <see cref="F:System.Windows.FigureUnitType.Column"></see>; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.FigureLength.IsContent">
			<summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength"></see> has a <see cref="T:System.Windows.FigureUnitType"></see> property value of <see cref="F:System.Windows.FigureUnitType.Content"></see>.</summary>
			<returns>Returns true if this <see cref="T:System.Windows.FigureLength"></see> has a <see cref="T:System.Windows.FigureUnitType"></see> property value of <see cref="F:System.Windows.FigureUnitType.Content"></see>; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.FigureLength.IsPage">
			<summary>Gets a value that determines whether this <see cref="T:System.Windows.FigureLength"></see> has a <see cref="T:System.Windows.FigureUnitType"></see> property value of <see cref="F:System.Windows.FigureUnitType.Page"></see>.</summary>
			<returns>true if this <see cref="T:System.Windows.FigureLength"></see> has a <see cref="T:System.Windows.FigureUnitType"></see> property value of <see cref="F:System.Windows.FigureUnitType.Page"></see>; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.FigureLength.Value">
			<summary>Gets the value of this <see cref="T:System.Windows.FigureLength"></see>. </summary>
			<returns>The value of this <see cref="T:System.Windows.FigureLength"></see>. The default value is 1.</returns>
		</member>
		<member name="T:System.Windows.FigureLengthConverter">
			<summary>Converts instances of other types to and from a <see cref="T:System.Windows.FigureLength"></see>.</summary>
		</member>
		<member name="M:System.Windows.FigureLengthConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FigureLengthConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.FigureLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Indicates whether an object can be converted from a given type to an instance of a <see cref="T:System.Windows.FigureLength"></see>.</summary>
			<returns>true if object of the specified type can be converted to a <see cref="T:System.Windows.FigureLength"></see>; otherwise, false.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="sourceType">The source <see cref="T:System.Type"></see> that is being queried for conversion support.</param>
		</member>
		<member name="M:System.Windows.FigureLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether instances of <see cref="T:System.Windows.FigureLength"></see> can be converted to the specified type.</summary>
			<returns>true if instances of <see cref="T:System.Windows.FigureLength"></see> can be converted to destinationType; otherwise, false.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="destinationType">The desired type this <see cref="T:System.Windows.FigureLength"></see> is being evaluated to be converted to.</param>
		</member>
		<member name="M:System.Windows.FigureLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts the specified object to a <see cref="T:System.Windows.FigureLength"></see>.</summary>
			<returns>The <see cref="T:System.Windows.FigureLength"></see> created from converting source.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="cultureInfo">Describes the CultureInfo of the type being converted.</param>
			<param name="source">The object being converted.</param>
		</member>
		<member name="M:System.Windows.FigureLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts the specified <see cref="T:System.Windows.FigureLength"></see> to the specified type.</summary>
			<returns>The object created from converting this <see cref="T:System.Windows.FigureLength"></see>.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="destinationType">The type to convert the <see cref="T:System.Windows.FigureLength"></see> to.</param>
			<param name="cultureInfo">Describes the CultureInfo of the type being converted.</param>
			<param name="value">The <see cref="T:System.Windows.FigureLength"></see> to convert.</param>
		</member>
		<member name="T:System.Windows.FigureUnitType">
			<summary>Describes the unit type associated with the width or height of a <see cref="T:System.Windows.FigureLength"></see>.</summary>
		</member>
		<member name="F:System.Windows.FigureUnitType.Auto">
			<summary>Default value when the <see cref="T:System.Windows.FigureLength"></see> is not specified which creates a value for the width or height of the <see cref="T:System.Windows.Documents.Figure"></see> that is calculated without constraints. Note: When <see cref="T:System.Windows.FigureUnitType"></see> is set to <see cref="F:System.Windows.FigureUnitType.Auto"></see>, the <see cref="P:System.Windows.FigureLength.Value"></see> property of <see cref="T:System.Windows.FigureLength"></see> is set to 1. </summary>
		</member>
		<member name="F:System.Windows.FigureUnitType.Column">
			<summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure"></see> is expressed as a fraction (including fractions greater then 1) of the width of the column the <see cref="T:System.Windows.Documents.Figure"></see> is in.</summary>
		</member>
		<member name="F:System.Windows.FigureUnitType.Content">
			<summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure"></see> is expressed as a fraction (including fractions greater then 1) of the content width of the <see cref="T:System.Windows.Documents.Figure"></see>. Note: Note: When <see cref="T:System.Windows.FigureUnitType"></see> is set to <see cref="F:System.Windows.FigureUnitType.Content"></see>, the <see cref="P:System.Windows.FigureLength.Value"></see> property of <see cref="T:System.Windows.FigureLength"></see> must be set to a value between 0 and 1.</summary>
		</member>
		<member name="F:System.Windows.FigureUnitType.Page">
			<summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure"></see> is expressed as a fraction (including fractions greater then 1) of the page width of that the <see cref="T:System.Windows.Documents.Figure"></see> is in. Note: Note: When <see cref="T:System.Windows.FigureUnitType"></see> is set to <see cref="F:System.Windows.FigureUnitType.Page"></see>, the <see cref="P:System.Windows.FigureLength.Value"></see> property of <see cref="T:System.Windows.FigureLength"></see> must be set to a value between 0 and 1.</summary>
		</member>
		<member name="F:System.Windows.FigureUnitType.Pixel">
			<summary>The value of the width or height of the <see cref="T:System.Windows.Documents.Figure"></see> is expressed in pixels (96 pixels-per-inch).</summary>
		</member>
		<member name="T:System.Windows.FigureVerticalAnchor">
			<summary> Describes the point of reference of a figure in the vertical direction. </summary>
		</member>
		<member name="F:System.Windows.FigureVerticalAnchor.ContentBottom">
			<summary> Anchor the figure to the bottom of the page content area. </summary>
		</member>
		<member name="F:System.Windows.FigureVerticalAnchor.ContentCenter">
			<summary> Anchor the figure to the center of the page content area. </summary>
		</member>
		<member name="F:System.Windows.FigureVerticalAnchor.ContentTop">
			<summary> Anchor the figure to the top of the page content area. </summary>
		</member>
		<member name="F:System.Windows.FigureVerticalAnchor.PageBottom">
			<summary> Anchor the figure to the bottom of the page area. </summary>
		</member>
		<member name="F:System.Windows.FigureVerticalAnchor.PageCenter">
			<summary> Anchor the figure to the center of the page area. </summary>
		</member>
		<member name="F:System.Windows.FigureVerticalAnchor.PageTop">
			<summary> Anchor the figure to the top of the page area. </summary>
		</member>
		<member name="F:System.Windows.FigureVerticalAnchor.ParagraphTop">
			<summary> Anchor the figure to the top of the current paragraph. </summary>
		</member>
		<member name="T:System.Windows.FontSizeConverter">
			<summary>Converts font size values to and from other type representations.</summary>
		</member>
		<member name="M:System.Windows.FontSizeConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FontSizeConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.FontSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines if conversion from a specified type to a font size value is possible.</summary>
			<returns>true if this type can be converted; otherwise, false.</returns>
			<param name="context">Describes context information of a component such as its container and PropertyDescriptor.</param>
			<param name="sourceType">Identifies the data type to evaluate for purposes of conversion.</param>
		</member>
		<member name="M:System.Windows.FontSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines if conversion of a font size value to a specified type is possible.</summary>
			<returns>true if this type can be converted; otherwise, false.</returns>
			<param name="context">Describes context information of a component such as its container and PropertyDescriptor.</param>
			<param name="destinationType">Identifies the data type to evaluate for purposes of conversion.</param>
		</member>
		<member name="M:System.Windows.FontSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts a specified type to a font size value.</summary>
			<returns>A <see cref="T:System.Double"></see> value that represents the converted font size value.</returns>
			<param name="culture">Identifies cultural specific information, including the writing system and calendar used.</param>
			<param name="context">Describes context information of a component such as its container and PropertyDescriptor.</param>
			<param name="value">Identifies the value which is being converted to a font size value.</param>
		</member>
		<member name="M:System.Windows.FontSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts a font size value to a specified type.</summary>
			<returns>A new <see cref="T:System.Object"></see> that is the value of the conversion.</returns>
			<param name="culture">Identifies cultural specific information, including writing system and calendar used.</param>
			<param name="context">Describes context information of a component such as its container and PropertyDescriptor.</param>
			<param name="destinationType">The data type this font size value is being converted to.</param>
			<param name="value">Identifies the <see cref="T:System.Object"></see> being converted.</param>
		</member>
		<member name="T:System.Windows.FrameworkContentElement">
			<summary><see cref="T:System.Windows.FrameworkContentElement"></see> is the WPF framework-level implementation of the <see cref="T:System.Windows.ContentElement"></see> base class. <see cref="T:System.Windows.FrameworkContentElement"></see> adds support for additional input APIs (including tooltips and context menus), storyboards, data context for databinding, styles support, and logical tree helper APIs. </summary>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkContentElement"></see> class. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.ContextMenuClosing">
			<summary>Occurs just before any context menu on the element is closed. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.ContextMenuOpening">
			<summary> Occurs when any context menu on the element is opened. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.DataContextChanged">
			<summary> Occurs when this element's data context changes. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.Initialized">
			<summary> Occurs when this <see cref="T:System.Windows.FrameworkContentElement"></see> is initialized. This coincides with cases where the value of the <see cref="P:System.Windows.FrameworkContentElement.IsInitialized"></see> property changes from false (or undefined) to true. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.Loaded">
			<summary> Occurs when the element is laid out, rendered, and ready for interaction. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.SourceUpdated">
			<summary>Occurs when any associated data source participating in a binding on this element changes. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.TargetUpdated">
			<summary> Occurs when any associated target property participating in a binding on this element changes. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.ToolTipClosing">
			<summary> Occurs just before any tooltip on the element is closed. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.ToolTipOpening">
			<summary> Occurs when any tooltip on the element is opened. </summary>
		</member>
		<member name="E:System.Windows.FrameworkContentElement.Unloaded">
			<summary>Occurs when the element is removed from an element tree of loaded elements. </summary>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.ContextMenuClosingEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.ContextMenuOpeningEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.ContextMenuProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.ContextMenu"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkContentElement.ContextMenu"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.CursorProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.Cursor"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.Cursor"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.DataContextProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.DataContext"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkContentElement.DataContext"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.DefaultStyleKeyProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkContentElement.DefaultStyleKey"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.FocusVisualStyleProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.FocusVisualStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.ForceCursorProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.ForceCursor"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.ForceCursor"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.InputScopeProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.InputScope"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.InputScope"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.LanguageProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.Language"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkContentElement.Language"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.LoadedEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkContentElement.Loaded"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.FrameworkContentElement.Loaded"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.NameProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.Name"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.Name"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.OverridesDefaultStyleProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.StyleProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.Style"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.Style"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.TagProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.Tag"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkContentElement.Tag"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.ToolTipClosingEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.ToolTipOpeningEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.ToolTipProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkContentElement.ToolTip"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkContentElement.ToolTip"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkContentElement.UnloadedEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkContentElement.Unloaded"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.FrameworkContentElement.Unloaded"></see> event's identifier.</returns>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.AddLogicalChild(System.Object)">
			<summary>Adds the provided element as a child of this element. </summary>
			<param name="child">The child element to be added.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
			<summary>Begins the sequence of actions that are contained in the provided storyboard. </summary>
			<param name="storyboard">The storyboard to begin.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
			<summary> Begins the sequence of actions that are contained in the provided storyboard, with options specified for what should occur if the property is already animated. </summary>
			<param name="handoffBehavior">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</param>
			<param name="storyboard">The storyboard to begin.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
			<summary> Begins the sequence of actions that are contained in the provided storyboard, with specified state for control of the animation after it is started. </summary>
			<param name="handoffBehavior">A value of the enumeration that describes behavior to use if a  property described in the storyboard is already animated.</param>
			<param name="storyboard">The storyboard to begin. </param>
			<param name="isControllable">Declares whether the animation is controllable (can be paused) after it is started.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.FindName(System.String)">
			<summary> Finds an element that has the provided identifier name. </summary>
			<returns>The requested element. May be null if no matching element was found.</returns>
			<param name="name">Name of the element to search for.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.FindResource(System.Object)">
			<summary> Searches for a resource with the specified key, and will raise an exception if the requested resource is not found. </summary>
			<returns>The found resource, or null if no matching resource was found (but will also raise an exception if null).</returns>
			<param name="resourceKey">Key identifier of the resource to be found.</param>
			<exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">Requested resource key was not found.</exception>
			<exception cref="T:System.ArgumentNullException">Key cannot be null.</exception>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.GetBindingExpression(System.Windows.DependencyProperty)">
			<summary> Gets the <see cref="T:System.Windows.Data.BindingExpression"></see> for the specified property's binding. </summary>
			<returns>Returns a <see cref="T:System.Windows.Data.BindingExpression"></see> if the target is data bound; otherwise, null.</returns>
			<param name="dp">The target <see cref="T:System.Windows.DependencyProperty"></see> from which to get the binding.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.GetUIParentCore">
			<summary>Returns an alternative logical parent for this element if there is no visual parent. In this case, a <see cref="T:System.Windows.FrameworkContentElement"></see>  parent is always the same value as the <see cref="P:System.Windows.FrameworkContentElement.Parent"></see> property.</summary>
			<returns>Returns something other than null whenever a WPF framework-level implementation of this method has a non-visual parent connection.</returns>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)">
			<summary> Moves the keyboard focus from this element to another element. </summary>
			<returns>Returns true if focus is moved successfully; false if the target element in direction as specified does not exist.</returns>
			<param name="request">The direction that focus is to be moved, as a value of the enumeration.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
			<summary> Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuClosing"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
			<summary> Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ContextMenuOpening"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">Event data for the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnGotFocus(System.Windows.RoutedEventArgs)">
			<summary>Class handler for the <see cref="E:System.Windows.ContentElement.GotFocus"></see> event.</summary>
			<param name="e">Event data for the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnInitialized(System.EventArgs)">
			<summary> Raises the <see cref="E:System.Windows.FrameworkContentElement.Initialized"></see> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkContentElement.IsInitialized"></see> is set to true. </summary>
			<param name="e">Event data for the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkContentElement"></see> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"></see>.</summary>
			<param name="e">The event data that describes the property that changed, including the old and new values.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
			<summary>Invoked when the style that is in use on this element changes. </summary>
			<param name="oldStyle">The old style.</param>
			<param name="newStyle">The new style.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
			<summary> Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipClosing"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
			<summary> Invoked whenever the <see cref="E:System.Windows.FrameworkContentElement.ToolTipOpening"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
			<summary>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus. This method is sealed and cannot be overridden.</summary>
			<returns>The next element that focus would move to if focus were actually traversed. May return null if focus cannot be moved relative to this element for the provided direction.</returns>
			<param name="direction">The direction for which a prospective focus change should be determined.</param>
			<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest"></see>: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next"></see>, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous"></see>, <see cref="F:System.Windows.Input.FocusNavigationDirection.First"></see>, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last"></see>. These directions are not legal for <see cref="M:System.Windows.FrameworkContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)"></see> (but they are legal for <see cref="M:System.Windows.FrameworkContentElement.MoveFocus(System.Windows.Input.TraversalRequest)"></see>). </exception>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)">
			<summary>Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope"></see> registration method.</summary>
			<param name="scopedElement">Object for the mapping.</param>
			<param name="name">Name to use for the specified name-object mapping.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.RemoveLogicalChild(System.Object)">
			<summary>Removes the specified element from the logical tree for this element. </summary>
			<param name="child">The element to remove.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
			<summary>Attaches a binding to this element, based on the provided binding object. </summary>
			<returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
			<param name="binding">Represents a data binding.</param>
			<param name="dp">Identifies the bound property.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.SetBinding(System.Windows.DependencyProperty,System.String)">
			<summary>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source. </summary>
			<returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
			<param name="dp">Identifies the bound property.</param>
			<param name="path">The source property name or the path to the property used for the binding.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
			<summary>Searches for a resource with the specified name and sets up a resource reference to it for the specified property. </summary>
			<param name="name">The name of the resource.</param>
			<param name="dp">The property to which the resource is bound.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.ShouldSerializeResources">
			<summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Resources"></see> property on instances of this class.</summary>
			<returns>true if the <see cref="P:System.Windows.FrameworkContentElement.Resources"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.ShouldSerializeStyle">
			<summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkContentElement.Style"></see> property on instances of this class.</summary>
			<returns>true if the <see cref="P:System.Windows.FrameworkContentElement.Style"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.TryFindResource(System.Object)">
			<summary>Searches for a resource with the specified key, and returns that resource if found. </summary>
			<returns>The found resource. If no resource was found, null is returned.</returns>
			<param name="resourceKey">Key identifier of the resource to be found.</param>
		</member>
		<member name="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)">
			<summary>Simplifies access to the <see cref="T:System.Windows.NameScope"></see> de-registration method.</summary>
			<param name="name">Name of the name-object pair to remove from the current scope.</param>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.ContextMenu">
			<summary>Gets or sets the context menu element that should appear whenever the context menu is requested via user interface (UI) from within this element. This is a dependency property.</summary>
			<returns>The context menu that this element uses. </returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.Cursor">
			<summary> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</summary>
			<returns>The cursor to display. The default value is defined as null per this dependency property. However, the practical default at runtime will come from a variety of factors.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.DataContext">
			<summary>Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</summary>
			<returns>The object to use as data context.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.DefaultStyleKey">
			<summary>Gets or sets the key to use to find the style template for this control in themes.  This is a dependency property.</summary>
			<returns>The style key. To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type"></see> of the element being styled. null is an accepted value for a certain case; see Remarks.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.FocusVisualStyle">
			<summary>Gets or sets an object that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</summary>
			<returns>The desired style to apply on focus. The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style"></see>. However, the effective value at runtime is often (but not always) a style as supplied by theme support for controls. </returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.ForceCursor">
			<summary>Gets or sets a value indicating whether this <see cref="T:System.Windows.FrameworkContentElement"></see> should force the user interface (UI) to render the cursor as declared by this instance's <see cref="P:System.Windows.FrameworkContentElement.Cursor"></see> property.  This is a dependency property.</summary>
			<returns>true to force cursor presentation while over this element to use this instance's setting for the cursor (including on all child elements); otherwise false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.InputScope">
			<summary>Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkContentElement"></see>.  This is a dependency property.</summary>
			<returns>The input scope, which modifies how input from alternative input methods is interpreted. The default value is null (which results in a default handling of commands).</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.IsInitialized">
			<summary>Gets a value indicating whether this element has been initialized, either by being loaded as Extensible Application Markup Language (XAML), or by explicitly having its <see cref="M:System.Windows.FrameworkContentElement.EndInit"></see> method called. </summary>
			<returns>true if the element is initialized per the aforementioned loading or method calls; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.IsLoaded">
			<summary>Gets a value indicating whether this element has been loaded for presentation. </summary>
			<returns>true if the current element is attached to an element tree and has been rendered; false if the element has never been attached to a loaded element tree. </returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.Language">
			<summary> Gets or sets localization/globalization language information that applies to an individual element. This is a dependency property.</summary>
			<returns>The culture information for this element. The default value is an <see cref="T:System.Windows.Markup.XmlLanguage"></see> instance with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag"></see> value set to the string "en-US".</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.LogicalChildren">
			<summary>Gets an enumerator for the logical child elements of this element. </summary>
			<returns>An enumerator for logical child elements of this element.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.Name">
			<summary>Gets or sets the identifying name of the element. The name provides an instance reference so that programmatic code-behind, such as event handler code, can refer to an element once it is constructed during parsing of XAML.  This is a dependency property.</summary>
			<returns>The name of the element.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.OverridesDefaultStyle">
			<summary>Gets or sets a value indicating whether this element incorporates style properties from theme styles. This is a dependency property.</summary>
			<returns>true if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. false if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.Parent">
			<summary>Gets the parent in the logical tree for this element. </summary>
			<returns>The ogical parent for this element.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.Resources">
			<summary>Gets or sets the current locally-defined resource dictionary. </summary>
			<returns>The current locally-defined resources. This is a dictionary of resources, where resources within the dictionary are accessed by key.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.Style">
			<summary>Gets or sets the style to be used by this element.  This is a dependency property.</summary>
			<returns>The style for the element. </returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.Tag">
			<summary>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</summary>
			<returns>The intended value. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.TemplatedParent">
			<summary> Gets a reference to the template parent of this element This property is not relevant if the element was not created through a template. </summary>
			<returns>The element whose <see cref="T:System.Windows.FrameworkTemplate"></see> <see cref="P:System.Windows.FrameworkTemplate.VisualTree"></see> caused this element to be created. This value is frequently null; see Remarks.</returns>
		</member>
		<member name="P:System.Windows.FrameworkContentElement.ToolTip">
			<summary>Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</summary>
			<returns>The tooltip object. See Remarks below for details on why this parameter is not strongly typed.</returns>
		</member>
		<member name="T:System.Windows.FrameworkElement">
			<summary>Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements. This class represents the provided WPF framework-level implementation built on the WPF core-level APIs defined by <see cref="T:System.Windows.UIElement"></see>.</summary>
		</member>
		<member name="M:System.Windows.FrameworkElement.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElement"></see> class. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.ContextMenuClosing">
			<summary>Occurs just before any context menu on the element is closed. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.ContextMenuOpening">
			<summary>Occurs when any context menu on the element is opened. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.DataContextChanged">
			<summary>Occurs when this element's data context changes. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.Initialized">
			<summary>Occurs when this <see cref="T:System.Windows.FrameworkElement"></see> is initialized. This event coincides with cases where the value of the <see cref="P:System.Windows.FrameworkElement.IsInitialized"></see> property changes from false (or undefined) to true. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.Loaded">
			<summary>Occurs when the element is laid out, rendered, and ready for interaction. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.RequestBringIntoView">
			<summary>Occurs when <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)"></see> is called on this element. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.SizeChanged">
			<summary>Occurs when either the <see cref="P:System.Windows.FrameworkElement.ActualHeight"></see> or the <see cref="P:System.Windows.FrameworkElement.ActualWidth"></see> properties change value on this element. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.SourceUpdated">
			<summary>Occurs when the source value changes for any existing property binding on this element.</summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.TargetUpdated">
			<summary>Occurs when the target value changes for any property binding on this element. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.ToolTipClosing">
			<summary>Occurs just before any tooltip on the element is closed. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.ToolTipOpening">
			<summary>Occurs when any tooltip on the element is opened. </summary>
		</member>
		<member name="E:System.Windows.FrameworkElement.Unloaded">
			<summary>Occurs when the element is removed from within an element tree of loaded elements. </summary>
		</member>
		<member name="F:System.Windows.FrameworkElement.ActualHeightProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.ActualHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.ActualHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ActualWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ActualWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.ActualWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ContextMenuClosingEvent">
			<summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent">
			<summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ContextMenuProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.ContextMenu"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.ContextMenu"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.CursorProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Cursor"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Cursor"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.DataContextProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.DataContext"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.DataContext"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.FlowDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.FlowDirection"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.FlowDirection"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.FocusVisualStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ForceCursorProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ForceCursor"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.ForceCursor"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.HeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Height"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Height"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.InputScopeProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.InputScope"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.InputScope"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.LanguageProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Language"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.Language"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.LayoutTransformProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.LayoutTransform"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.LayoutTransform"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.LoadedEvent">
			<summary>Identifies the <see cref="E:System.Windows.FrameworkElement.Loaded"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.Loaded"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.MarginProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.Margin"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.Margin"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.MaxHeightProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.MaxHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MaxHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.MaxWidthProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.MaxWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MaxWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.MinHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MinHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MinHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.MinWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.MinWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.MinWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.NameProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Name"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Name"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent">
			<summary>Identifies the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> routed event.Routed event identifiers are created when routed events are registered. These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event. You can use these identifiers to add class handlers. For more information about registering routed events, see <see cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)"></see>. For more information about using routed event identifiers to add class handlers, see <see cref="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)"></see>.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.SizeChangedEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkElement.SizeChanged"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.StyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Style"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Style"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.TagProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.Tag"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Tag"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ToolTipClosingEvent">
			<summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipClosing"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.ToolTipClosing"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ToolTipOpeningEvent">
			<summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.ToolTipProperty">
			<summary>Identifies the <see cref="P:System.Windows.FrameworkElement.ToolTip"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.ToolTip"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.UnloadedEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkElement.Unloaded"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.FrameworkElement.Unloaded"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.VerticalAlignmentProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.VerticalAlignment"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.FrameworkElement.VerticalAlignment"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.FrameworkElement.WidthProperty">
			<summary> Identifies the <see cref="P:System.Windows.FrameworkElement.Width"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.FrameworkElement.Width"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)">
			<summary>Adds the provided object to the logical tree of this element. </summary>
			<param name="child">Child element to be added.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.ApplyTemplate">
			<summary>Builds the current template's visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call. </summary>
			<returns>true if visuals were added to the tree; returns false otherwise.</returns>
		</member>
		<member name="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)">
			<summary>Implements <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)"></see> (defined as virtual in <see cref="T:System.Windows.UIElement"></see>) and seals the implementation.</summary>
			<param name="finalRect">The final area within the parent that this element should use to arrange itself and its children.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)">
			<summary>When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement"></see> derived class. </summary>
			<returns>The actual size used.</returns>
			<param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)">
			<summary>Begins the sequence of actions that are contained in the provided storyboard. </summary>
			<param name="storyboard">The storyboard to begin.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)">
			<summary>Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated. </summary>
			<param name="handoffBehavior">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</param>
			<param name="storyboard">The storyboard to begin.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
			<summary> Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started. </summary>
			<param name="handoffBehavior">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</param>
			<param name="storyboard">The storyboard to begin. </param>
			<param name="isControllable">Declares whether the animation is controllable (can be paused) after it is started.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)">
			<summary>Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within. </summary>
			<param name="targetRectangle">Specified size of the element that should also be brought into view. </param>
		</member>
		<member name="M:System.Windows.FrameworkElement.EndInit">
			<summary>Indicates that the initialization process for the element is complete. </summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.FrameworkElement.EndInit"></see> was called without <see cref="M:System.Windows.FrameworkElement.BeginInit"></see> having previously been called on the element.</exception>
		</member>
		<member name="M:System.Windows.FrameworkElement.FindName(System.String)">
			<summary>Finds an element that has the provided identifier name. </summary>
			<returns>The requested element. This can be null if no matching element was found.</returns>
			<param name="name">The name of the requested element.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.FindResource(System.Object)">
			<summary>Searches for a resource with the specified key, and raises an exception if the requested resource is not found. </summary>
			<returns>The requested resource. If no resource with the provided key was found, an exception is raised. An <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> value might also be returned in the exception case.</returns>
			<param name="resourceKey">The key identifier for the requested resource.</param>
			<exception cref="T:System.ArgumentNullException">Key was provided as null.</exception>
			<exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">The requested resource key was not found.</exception>
		</member>
		<member name="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)">
			<summary>Returns the <see cref="T:System.Windows.Data.BindingExpression"></see> that represents the binding on the specified property. </summary>
			<returns>A <see cref="T:System.Windows.Data.BindingExpression"></see> if the target property has an active binding; otherwise, returns null.</returns>
			<param name="dp">The target <see cref="T:System.Windows.DependencyProperty"></see> to get the binding from.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection"></see> attached property for the specified <see cref="T:System.Windows.DependencyObject"></see>. </summary>
			<returns>The requested flow direction, as a value of the enumeration.</returns>
			<param name="element">The element to return a <see cref="P:System.Windows.FrameworkElement.FlowDirection"></see> for.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)">
			<summary>Returns a geometry for a clipping mask. The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</summary>
			<returns>The clipping geometry.</returns>
			<param name="layoutSlotSize">The size of the part of the element that does visual presentation. </param>
		</member>
		<member name="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)">
			<summary>Do not use. Use <see cref="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)"></see> instead. </summary>
			<returns>The requested element. May be null if no element of the requested name exists.</returns>
			<param name="childName">Name of the child to find.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.GetUIParentCore">
			<summary>Returns an alternative logical parent for this element if there is no visual parent.</summary>
			<returns>Returns something other than null whenever a WPF framework-level implementation of this method has a non-visual parent connection.</returns>
		</member>
		<member name="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)">
			<summary>Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)"></see>, and returns a child at the specified index from a collection of child elements. </summary>
			<returns>The requested child element. This should not return null; if the provided index is out of range, an exception is raised.</returns>
			<param name="index">The zero-based index of the requested child element in the collection.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)">
			<summary>Implements basic measure-pass layout system behavior for <see cref="T:System.Windows.FrameworkElement"></see>. </summary>
			<returns>The desired size of this element in layout.</returns>
			<param name="availableSize">The available size that the parent element can give to the child elements.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)">
			<summary>When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement"></see>-derived class. </summary>
			<returns>The size that this element determines it needs during layout, based on its calculations of child element sizes.</returns>
			<param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)">
			<summary>Moves the keyboard focus away from this element and to another element in a provided traversal direction. </summary>
			<returns>Returns true if focus is moved successfully; false if the target element in direction as specified does not exist or could not be keyboard focused.</returns>
			<param name="request">The direction that focus is to be moved, as a value of the enumeration.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnApplyTemplate">
			<summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see>.</summary>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
			<summary> Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
			<summary> Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">The <see cref="T:System.Windows.RoutedEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)">
			<summary>Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus"></see> event reaches this element in its route.</summary>
			<param name="e">The <see cref="T:System.Windows.RoutedEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"></see> event. This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized"></see> is set to true internally. </summary>
			<param name="e">The <see cref="T:System.Windows.RoutedEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement"></see> has been updated. The specific dependency property that changed is reported in the arguments parameter. Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"></see>.</summary>
			<param name="e">The event data that describes the property that changed, as well as old and new values.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
			<summary>Raises the <see cref="E:System.Windows.FrameworkElement.SizeChanged"></see> event, using the specified information as part of the eventual event data. </summary>
			<param name="sizeInfo">Details of the old and new size involved in the change.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)">
			<summary>Invoked when the style in use on this element changes, which will invalidate the layout. </summary>
			<param name="oldStyle">The old style.</param>
			<param name="newStyle">The new style.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)">
			<summary> Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ToolTipClosing"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)">
			<summary> Invoked whenever the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening"></see> routed event reaches this class in its route. Implement this method to add class handling for this event. </summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Invoked when the parent of this element in the visual tree is changed. Overrides <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)"></see>.</summary>
			<param name="oldParent">The old parent element. May be null to indicate that the element did not have a visual parent previously.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)">
			<summary> Supports incremental layout implementations in specialized subclasses of <see cref="T:System.Windows.FrameworkElement"></see>. <see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)"></see>  is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent's measure or arrange passes during layout. </summary>
			<param name="child">The child element reporting the change.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)">
			<summary>Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</summary>
			<returns>The next element that focus would move to if focus were actually traversed. May return null if focus cannot be moved relative to this element for the provided direction.</returns>
			<param name="direction">The direction for which a prospective focus change should be determined.</param>
			<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest"></see>: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next"></see>, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous"></see>, <see cref="F:System.Windows.Input.FocusNavigationDirection.First"></see>, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last"></see>. These directions are not legal for <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)"></see> (but they are legal for <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)"></see>). </exception>
		</member>
		<member name="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)">
			<summary>Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope"></see> registration method.</summary>
			<param name="scopedElement">Object for the mapping.</param>
			<param name="name">Name to use for the specified name-object mapping.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)">
			<summary>Removes the provided object from this element's logical tree. <see cref="T:System.Windows.FrameworkElement"></see> updates the affected logical tree parent pointers to keep in sync with this deletion.</summary>
			<param name="child">Element to remove.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
			<summary>Attaches a binding to this element, based on the provided binding object. </summary>
			<returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
			<param name="binding">Represents the specifics of the data binding.</param>
			<param name="dp">Identifies the property where the binding should be established.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)">
			<summary>Attaches a binding to this element, based on the provided source property name as a path qualification to the data source. </summary>
			<returns>Records the conditions of the binding. This return value can be useful for error checking.</returns>
			<param name="dp">Identifies the destination property where the binding should be established.</param>
			<param name="path">The source property name or the path to the property used for the binding.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)">
			<summary>Sets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection"></see> attached property for the provided element. </summary>
			<param name="element">The element that specifies a flow direction.</param>
			<param name="value">A value of the enumeration, specifying the direction.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
			<summary>Searches for a resource with the specified name and sets up a resource reference to it for the specified property. </summary>
			<param name="name">The name of the resource.</param>
			<param name="dp">The property to which the resource is bound.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.ShouldSerializeResources">
			<summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Resources"></see> property. </summary>
			<returns>true if the <see cref="P:System.Windows.FrameworkElement.Resources"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.FrameworkElement.ShouldSerializeStyle">
			<summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Style"></see> property.</summary>
			<returns>true if the <see cref="P:System.Windows.FrameworkElement.Style"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.FrameworkElement.ShouldSerializeTriggers">
			<summary>Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Triggers"></see> property.</summary>
			<returns>true if the <see cref="P:System.Windows.FrameworkElement.Triggers"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.FrameworkElement.TryFindResource(System.Object)">
			<summary>Searches for a resource with the specified key, and returns that resource if found. </summary>
			<returns>The found resource. If no resource was found, null will be returned.</returns>
			<param name="resourceKey">Key identifier of the resource to be found.</param>
		</member>
		<member name="M:System.Windows.FrameworkElement.UnregisterName(System.String)">
			<summary>Simplifies access to the <see cref="T:System.Windows.NameScope"></see> de-registration method.</summary>
			<param name="name">Name of the name-object pair to remove from the current scope.</param>
		</member>
		<member name="P:System.Windows.FrameworkElement.ActualHeight">
			<summary>Gets the rendered height of this element.  This is a dependency property.</summary>
			<returns>The element's height, as a value in device-independent units (1/96th inch per unit). The default value is 0 (zero).</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.ActualWidth">
			<summary>Gets the rendered width of this element.  This is a dependency property.</summary>
			<returns>The element's width, as a value in device-independent units (1/96th inch per unit). The default value is 0 (zero).</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.ContextMenu">
			<summary> Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.  This is a dependency property.</summary>
			<returns>The context menu assigned to this element. </returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Cursor">
			<summary> Gets or sets the cursor that displays when the mouse pointer is over this element.  This is a dependency property.</summary>
			<returns>The cursor to display. The default value is defined as null per this dependency property. However, the practical default at runtime will come from a variety of factors.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.DataContext">
			<summary> Gets or sets the data context for an element when it participates in data binding.  This is a dependency property.</summary>
			<returns>The object to use as data context.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.DefaultStyleKey">
			<summary>Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.  This is a dependency property.</summary>
			<returns>The style key. To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type"></see> of the control being styled.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.FlowDirection">
			<summary>Gets or sets the direction that text and other user interface (UI) elements flow within any parent element that controls their layout.  This is a dependency property (with an additional attached property usage).</summary>
			<returns>The direction that text and other UI elements flow within their parent element, as a value of the enumeration. The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight"></see>.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.FocusVisualStyle">
			<summary>Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.  This is a dependency property.</summary>
			<returns>The desired style to apply on focus. The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style"></see>. However, the effective value at runtime is often (but not always) a style as supplied by theme support for controls. </returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.ForceCursor">
			<summary>Gets or sets a value that indicates whether this <see cref="T:System.Windows.FrameworkElement"></see> should force the user interface (UI) to render the cursor as declared by the <see cref="P:System.Windows.FrameworkElement.Cursor"></see> property.  This is a dependency property.</summary>
			<returns>true if cursor presentation while over this element is forced to use current <see cref="P:System.Windows.FrameworkElement.Cursor"></see> settings for the cursor (including on all child elements); otherwise false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Height">
			<summary> Gets or sets the suggested height of the element.  This is a dependency property.</summary>
			<returns>The height of the element, in device-independent units (1/96th inch per unit). The default value is Double.NaN. This value must be equal to or greater than 0.0. See Remarks for upper bound information.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.HorizontalAlignment">
			<summary>Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.  This is a dependency property.</summary>
			<returns>A horizontal alignment setting, as a value of the enumeration. The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch"></see>.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.InheritanceBehavior">
			<summary>Gets or sets the scope limits for property value inheritance and resource key lookup.</summary>
			<returns>A value of the enumeration. The default is <see cref="F:System.Windows.InheritanceBehavior.Default"></see>.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.InputScope">
			<summary>Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkElement"></see>.  This is a dependency property.</summary>
			<returns>The input scope, which modifies how input from alternative input methods is interpreted. The default value is null (which results in a default handling of commands).</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.IsInitialized">
			<summary>Gets a value that indicates whether this element has been initialized, either during processing by a XAML reader, or by explicitly having its <see cref="M:System.Windows.FrameworkElement.EndInit"></see> method called. </summary>
			<returns>true if the element is initialized per the aforementioned XAML reader processing or method calls; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.IsLoaded">
			<summary>Gets a value that indicates whether this element has been loaded for presentation. </summary>
			<returns>true if the current element is attached to an element tree; false if the element has never been attached to a loaded element tree. </returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Language">
			<summary>Gets or sets localization/globalization language information that applies to an  element. This is a dependency property.</summary>
			<returns>The language information for this element. The default value is an <see cref="T:System.Windows.Markup.XmlLanguage"></see> with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag"></see> value set to the string "en-US".</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.LayoutTransform">
			<summary> Gets or sets a graphics transformation that should apply to this element when  layout is performed. This is a dependency property.</summary>
			<returns>The transform this element should use. The default is <see cref="P:System.Windows.Media.Transform.Identity"></see>.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.LogicalChildren">
			<summary> Gets an enumerator for logical child elements of this element. </summary>
			<returns>An enumerator for logical child elements of this element.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Margin">
			<summary>Gets or sets the outer margin of an element.  This is a dependency property.</summary>
			<returns>Provides margin values for the element. The default value is a <see cref="T:System.Windows.Thickness"></see> with all properties equal to 0 (zero).</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.MaxHeight">
			<summary>Gets or sets the maximum height constraint of the element.  This is a dependency property.</summary>
			<returns>The maximum height of the element, in device-independent units (1/96th inch per unit). The default value is PositiveInfinity. This value can be any value equal to or greather than 0.0. PositiveInfinity is also valid.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.MaxWidth">
			<summary>Gets or sets the maximum width constraint of the element.  This is a dependency property.</summary>
			<returns>The maximum width of the element, in device-independent units (1/96th inch per unit). The default value is PositiveInfinity. This value can be any value equal to or greather than 0.0. PositiveInfinity is also valid.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.MinHeight">
			<summary>Gets or sets the minimum height constraint of the element.  This is a dependency property.</summary>
			<returns>The minimum height of the element, in device-independent units (1/96th inch per unit). The default value is 0.0. This value can be any value equal to or greather than 0.0. However, PositiveInfinity is NOT valid, nor is Double.NaN.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.MinWidth">
			<summary> Gets or sets the minimum width constraint of the element.  This is a dependency property.</summary>
			<returns>The minimum width of the element, in device-independent units (1/96th inch per unit). The default value is 0.0. This value can be any value equal to or greather than 0.0. However, PositiveInfinity is not valid, nor is Double.NaN.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Name">
			<summary>Gets or sets the identifying name of the element. The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during parsing by a XAML reader. This is a dependency property.</summary>
			<returns>The name of the element. The default is an empty string.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.OverridesDefaultStyle">
			<summary>Gets or sets a value that indicates whether this element incorporates style properties from theme styles. This is a dependency property.</summary>
			<returns>true if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply. false if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles. The default is false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Parent">
			<summary>Gets the logical parent  element of this element. </summary>
			<returns>This element's logical parent.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Resources">
			<summary> Gets or sets the locally-defined resource dictionary.  This is a dependency property.</summary>
			<returns>The current locally-defined dictionary of resources, where each resource can be accessed by key.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Style">
			<summary>Gets or sets any locally applied style used by this element when it is rendered.  This is a dependency property.</summary>
			<returns>The locally applied style for the element, if present. Otherwise, null. The default for a default-constructed <see cref="T:System.Windows.FrameworkElement"></see> is null.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Tag">
			<summary>Gets or sets an arbitrary object value that can be used to store custom information about this element.  This is a dependency property.</summary>
			<returns>The intended value. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.TemplatedParent">
			<summary>Gets a reference to the template parent of this element. This property is not relevant if the element was not created through a template.</summary>
			<returns>The element whose <see cref="T:System.Windows.FrameworkTemplate"></see> <see cref="P:System.Windows.FrameworkTemplate.VisualTree"></see> caused this element to be created. This value is frequently null; see Remarks.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.ToolTip">
			<summary> Gets or sets the tool-tip object that is displayed for this element in the user interface (UI).  This is a dependency property.</summary>
			<returns>The tooltip object. See Remarks below for details on why this parameter is not strongly typed.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Triggers">
			<summary>Gets the collection of triggers established directly on this element, or in child elements. </summary>
			<returns>A strongly typed collection of <see cref="T:System.Windows.Trigger"></see> objects.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.VerticalAlignment">
			<summary>Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.  This is a dependency property.</summary>
			<returns>A vertical alignment setting. The default is <see cref="F:System.Windows.VerticalAlignment.Stretch"></see>.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.VisualChildrenCount">
			<summary>Gets the number of visual child elements within this element.</summary>
			<returns>The number of visual child elements for this element.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElement.Width">
			<summary> Gets or sets the width of the element.  This is a dependency property.</summary>
			<returns>The width of the element, in device-independent units (1/96th inch per unit). The default value is Double.NaN. This value must be equal to or greater than 0.0. See Remarks for upper bound information.</returns>
		</member>
		<member name="T:System.Windows.FrameworkElementFactory">
			<summary>Supports the creation of templates.</summary>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory"></see> class.</summary>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory"></see> class with the specified text to produce.</summary>
			<param name="text">The text string to produce.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory"></see> class with the specified <see cref="T:System.Type"></see>.</summary>
			<param name="type">The type of instance to create.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkElementFactory"></see> class with the specified <see cref="T:System.Type"></see> and name.</summary>
			<param name="type">The type of instance to create.</param>
			<param name="name">The style identifier.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
			<summary>Adds an event handler for the given routed event to the instances created by this factory.</summary>
			<param name="routedEvent">Identifier object for the routed event being handled.</param>
			<param name="handler">A reference to the handler implementation.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
			<summary>Adds an event handler for the given routed event to the instances created by this factory, with the option of having the provided handler be invoked even in cases of routed events that had already been marked as handled by another element along the route.</summary>
			<param name="handledEventsToo">Whether to invoke the handler in cases where the routed event has already been marked as handled in its arguments object. true to invoke the handler even when the routed event is marked handled; otherwise, false. The default is false. Asking to handle already-handled routed events is not common.</param>
			<param name="routedEvent">Identifier object for the routed event being handled.</param>
			<param name="handler">A reference to the handler implementation.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)">
			<summary>Adds a child factory to this factory.</summary>
			<param name="child">The <see cref="T:System.Windows.FrameworkElementFactory"></see> object to add as a child.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
			<summary>Removes an event handler from the given routed event. This applies to the instances created by this factory.</summary>
			<param name="routedEvent">Identifier object for the routed event.</param>
			<param name="handler">The handler to remove.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
			<summary>Sets up data binding on a property.</summary>
			<param name="binding">Description of the binding.</param>
			<param name="dp">Identifies the property where the binding should be established.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)">
			<summary>Set up a dynamic resource reference on a child property.</summary>
			<param name="name">The name of the resource.</param>
			<param name="dp">The property to which the resource is bound.</param>
		</member>
		<member name="M:System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)">
			<summary>Sets the value of a dependency property.</summary>
			<param name="dp">The dependency property identifier of the property to set.</param>
			<param name="value">The new value.</param>
		</member>
		<member name="P:System.Windows.FrameworkElementFactory.FirstChild">
			<summary>Gets the first child factory.</summary>
			<returns>A <see cref="T:System.Windows.FrameworkElementFactory"></see> the first child factory.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElementFactory.IsSealed">
			<summary>Gets a value that indicates whether this object is in an immutable state.</summary>
			<returns>true if this object is in an immutable state; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElementFactory.Name">
			<summary>Gets or sets the name of a template item.</summary>
			<returns>A string that is the template identifier.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElementFactory.NextSibling">
			<summary>Gets the next sibling factory.</summary>
			<returns>A <see cref="T:System.Windows.FrameworkElementFactory"></see> that is the next sibling factory.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElementFactory.Parent">
			<summary>Gets the parent <see cref="T:System.Windows.FrameworkElementFactory"></see>.</summary>
			<returns>A <see cref="T:System.Windows.FrameworkElementFactory"></see> that is the parent factory.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElementFactory.Text">
			<summary>Gets or sets the text string to produce.</summary>
			<returns>The text string to produce.</returns>
		</member>
		<member name="P:System.Windows.FrameworkElementFactory.Type">
			<summary>Gets or sets the type of the objects this factory produces.</summary>
			<returns>The type of the objects this factory produces.</returns>
		</member>
		<member name="T:System.Windows.FrameworkPropertyMetadata">
			<summary>Reports or applies metadata for a dependency property, specifically adding framework-specific property system characteristics.</summary>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class. </summary>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the specified default value. </summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the specified <see cref="T:System.Windows.PropertyChangedCallback"></see> callback.</summary>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the provided default value and framework-level metadata options. </summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
			<param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions"></see> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the provided default value and specified <see cref="T:System.Windows.PropertyChangedCallback"></see> callback. </summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the specified callbacks. </summary>
			<param name="coerceValueCallback">A reference to a handler implementation will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)"></see> for this dependency property.</param>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the provided default value and framework metadata options, and specified <see cref="T:System.Windows.PropertyChangedCallback"></see> callback. </summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a value of a specific type.</param>
			<param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions"></see> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the provided default value and specified callbacks.</summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
			<param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)"></see> for this dependency property.</param>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the provided default value and framework metadata options, and specified callbacks. </summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
			<param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)"></see> against this property.</param>
			<param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions"></see> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the provided default value and framework metadata options, specified callbacks, and a Boolean that can be used to prevent animation of the property.</summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
			<param name="isAnimationProhibited">true to prevent the property system from animating the property that this metadata is applied to. Such properties will raise a run-time exception originating from the property system if animations of them are attempted. false to permit animating the property. The default is false.</param>
			<param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)"></see> on this dependency property.</param>
			<param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions"></see> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.#ctor(System.Object,System.Windows.FrameworkPropertyMetadataOptions,System.Windows.PropertyChangedCallback,System.Windows.CoerceValueCallback,System.Boolean,System.Windows.Data.UpdateSourceTrigger)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkPropertyMetadata"></see> class with the provided default value and framework metadata options, specified callbacks, a Boolean that can be used to prevent animation of the property, and a data-binding update trigger default.</summary>
			<param name="defaultValue">The default value of the dependency property, usually provided as a specific type.</param>
			<param name="isAnimationProhibited">true to prevent the property system from animating the property that this metadata is applied to. Such properties will raise a run-time exception originating from the property system if animations of them are attempted. The default is false.</param>
			<param name="defaultUpdateSourceTrigger">The <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> to use when bindings for this property are applied that have their <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default"></see>.</param>
			<param name="coerceValueCallback">A reference to a handler implementation that will be called whenever the property system calls <see cref="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)"></see> against this property.</param>
			<param name="flags">The metadata option flags (a combination of <see cref="T:System.Windows.FrameworkPropertyMetadataOptions"></see> values). These options specify characteristics of the dependency property that interact with systems such as layout or data binding.</param>
			<param name="propertyChangedCallback">A reference to a handler implementation that the property system will call whenever the effective value of the property changes.</param>
			<exception cref="T:System.ArgumentException">defaultValue is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>; see Remarks.</exception>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
			<summary>Enables a merge of the source metadata with base metadata. </summary>
			<param name="dp">The dependency property this metadata is being applied to.</param>
			<param name="baseMetadata">The base metadata to merge.</param>
		</member>
		<member name="M:System.Windows.FrameworkPropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
			<summary>Called when this metadata has been applied to a property, which indicates that the metadata is being sealed. </summary>
			<param name="targetType">The type associated with this metadata if this is type-specific metadata. If this is default metadata, this value can be null.</param>
			<param name="dp">The dependency property to which the metadata has been applied.</param>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.AffectsArrange">
			<summary> Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass during layout engine operations. </summary>
			<returns>true if the dependency property on which this metadata exists potentially affects the arrange pass; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.AffectsMeasure">
			<summary> Gets or sets a value that indicates whether a dependency property potentially affects the measure pass during layout engine operations. </summary>
			<returns>true if the dependency property on which this metadata exists potentially affects the measure pass; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange">
			<summary> Gets or sets a value that indicates whether a dependency property potentially affects the arrange pass of its parent element's layout during layout engine operations. </summary>
			<returns>true if the dependency property on which this metadata exists potentially affects the arrange pass specifically on its parent element; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure">
			<summary> Gets or sets a value that indicates whether a dependency property potentially affects the measure pass of its parent element's layout during layout engine operations. </summary>
			<returns>true if the dependency property on which this metadata exists potentially affects the measure pass specifically on its parent element; otherwise, false.The default is false. </returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.AffectsRender">
			<summary>Gets or sets a value that indicates whether a dependency property potentially affects the general layout in some way that does not specifically influence arrangement or measurement, but would require a redraw. </summary>
			<returns>true if the dependency property on which this metadata exists affects rendering; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault">
			<summary> Gets or sets a value that indicates whether the property binds two-way by default. </summary>
			<returns>true if the dependency property on which this metadata exists binds two-way by default; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger">
			<summary>Gets or sets the default for <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> to use when bindings for the property with this metadata are applied, which have their <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default"></see>.</summary>
			<returns>A value of the enumeration, other than <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default"></see>.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
			<exception cref="T:System.ArgumentException">This property is set to <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default"></see>; the value you set is supposed to become the default when requested by bindings.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.Inherits">
			<summary> Gets or sets a value that indicates whether the value of the dependency property is inheritable. </summary>
			<returns>true if the property value is inheritable; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.IsDataBindingAllowed">
			<summary> Gets a value that indicates whether data binding is supported for the dependency property. </summary>
			<returns>true if data binding is supported on the dependency property to which this metadata applies; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.IsNotDataBindable">
			<summary> Gets or sets a value that indicates whether the dependency property supports data binding. </summary>
			<returns>true if the property does not support data binding; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.Journal">
			<summary> Gets or sets a value that indicates whether this property contains journaling information that applications can or should store as part of a journaling implementation. </summary>
			<returns>true if journaling should be performed on the dependency property that this metadata is applied to; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.OverridesInheritanceBehavior">
			<summary>Gets or sets a value that indicates whether the property value inheritance evaluation should span across certain content boundaries in the logical tree of elements. </summary>
			<returns>true if the property value inheritance should span across certain content boundaries; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="P:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender">
			<summary>Gets or sets a value that indicates whether sub-properties of the dependency property do not affect the rendering of the containing object. </summary>
			<returns>true if changes to sub-property values do not affect rendering if changed; otherwise, false. The default is false.</returns>
			<exception cref="T:System.InvalidOperationException">The metadata has already been applied to a dependency property operation, so that metadata is sealed and properties of the metadata cannot be set.</exception>
		</member>
		<member name="T:System.Windows.FrameworkPropertyMetadataOptions">
			<summary>Specifies the types of framework-level property behavior that pertain to a particular dependency property in the Windows Presentation Foundation (WPF) property system.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsArrange">
			<summary>The arrange pass of layout composition is affected by value changes to this dependency property. </summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsMeasure">
			<summary>The measure pass of layout compositions is affected by value changes to this dependency property. </summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentArrange">
			<summary>The arrange pass on the parent element is affected by value changes to this dependency property.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsParentMeasure">
			<summary>The measure pass on the parent element is affected by value changes to this dependency property.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.AffectsRender">
			<summary>Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.BindsTwoWayByDefault">
			<summary>The <see cref="T:System.Windows.Data.BindingMode"></see> for data bindings on this dependency property defaults to <see cref="F:System.Windows.Data.BindingMode.TwoWay"></see>.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.Inherits">
			<summary>The values of this dependency property are inherited by child elements.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.Journal">
			<summary>The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs). </summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.None">
			<summary>No options are specified; the dependency property uses the default behavior of the Windows Presentation Foundation (WPF) property system.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.NotDataBindable">
			<summary>Data binding to this dependency property is not allowed.</summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.OverridesInheritanceBehavior">
			<summary>The values of this dependency property span separated trees for purposes of property value inheritance. </summary>
		</member>
		<member name="F:System.Windows.FrameworkPropertyMetadataOptions.SubPropertiesDoNotAffectRender">
			<summary>The subproperties on the value of this dependency property do not affect any aspect of rendering.</summary>
		</member>
		<member name="T:System.Windows.FrameworkTemplate">
			<summary>Enables the instantiation of a tree of <see cref="T:System.Windows.FrameworkElement"></see> and/or <see cref="T:System.Windows.FrameworkContentElement"></see> objects. This class is abstract.</summary>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.FrameworkTemplate"></see> class. This method is protected.</summary>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)">
			<summary>Finds the element associated with the specified name defined within this template.</summary>
			<returns>The element associated with the specified name.</returns>
			<param name="templatedParent">The context of the <see cref="T:System.Windows.FrameworkElement"></see> where this template is applied.</param>
			<param name="name">The string name.</param>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.LoadContent">
			<summary>Loads the content of the template as an instance of an object and returns the root element of the content.</summary>
			<returns>The root element of the content. Calling this multiple times returns separate instances.</returns>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)">
			<summary>Registers a new name-object pair into the current name scope.</summary>
			<param name="scopedElement">The object to be mapped to the provided name.</param>
			<param name="name">The name to register.</param>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.Seal">
			<summary>Locks this template so it cannot be changed.</summary>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Returns whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.Resources"></see> property on instances of this class.</summary>
			<returns>Returns true if the <see cref="P:System.Windows.FrameworkTemplate.Resources"></see> property value should be serialized; otherwise, false.</returns>
			<param name="manager">The <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager"></see>.</param>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.ShouldSerializeVisualTree">
			<summary>Returns whether serialization processes should serialize the value of the <see cref="P:System.Windows.FrameworkTemplate.VisualTree"></see> property on instances of this class.</summary>
			<returns>Returns true if the <see cref="P:System.Windows.FrameworkTemplate.VisualTree"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.UnregisterName(System.String)">
			<summary>Removes a name-object mapping from the name scope.</summary>
			<param name="name">The name of the mapping to remove.</param>
		</member>
		<member name="M:System.Windows.FrameworkTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
			<summary>When overridden in a derived class, supplies rules for the element this template is applied to.</summary>
			<param name="templatedParent">The element this template is applied to.</param>
		</member>
		<member name="P:System.Windows.FrameworkTemplate.HasContent">
			<summary>Gets a value that indicates whether this template has optimized content.</summary>
			<returns>true if this template has optimized content; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkTemplate.IsSealed">
			<summary>Gets a value that indicates whether this object is in an immutable state so it cannot be changed.</summary>
			<returns>true if this object is in an immutable state; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.FrameworkTemplate.Resources">
			<summary>Gets or sets the collection of resources that can be used within the scope of this template.</summary>
			<returns>The resources that can be used within the scope of this template.</returns>
		</member>
		<member name="P:System.Windows.FrameworkTemplate.VisualTree">
			<summary>Gets or sets the root node of the template.</summary>
			<returns>The root node of the template.</returns>
		</member>
		<member name="T:System.Windows.GridLength">
			<summary>Represents the length of elements that explicitly support <see cref="F:System.Windows.GridUnitType.Star"></see> unit types. </summary>
		</member>
		<member name="M:System.Windows.GridLength.#ctor(System.Double)">
			<summary>Initializes a new instance of <see cref="T:System.Windows.GridLength"></see> as an absolute value in pixels. </summary>
			<param name="pixels">The number of device-independent pixels (96 pixels-per-inch).</param>
			<exception cref="T:System.ArgumentException">Pixels is equal to <see cref="F:System.Double.NegativeInfinity"></see>, <see cref="F:System.Double.PositiveInfinity"></see>, or <see cref="F:System.Double.NaN"></see>.</exception>
		</member>
		<member name="M:System.Windows.GridLength.#ctor(System.Double,System.Windows.GridUnitType)">
			<summary>Initializes a new instance of <see cref="T:System.Windows.GridLength"></see> and specifies what kind of value it holds. </summary>
			<param name="type">The <see cref="T:System.Windows.GridUnitType"></see> held by this instance of <see cref="T:System.Windows.GridLength"></see>.</param>
			<param name="value">The initial value of this instance of <see cref="T:System.Windows.GridLength"></see>.</param>
			<exception cref="T:System.ArgumentException">value is equal to <see cref="F:System.Double.NegativeInfinity"></see>, <see cref="F:System.Double.PositiveInfinity"></see>, or <see cref="F:System.Double.NaN"></see>.</exception>
		</member>
		<member name="M:System.Windows.GridLength.Equals(System.Windows.GridLength)">
			<summary>Compares this instance of <see cref="T:System.Windows.GridLength"></see> with another instance of <see cref="T:System.Windows.GridLength"></see> for equality.</summary>
			<returns>true if this instance of <see cref="T:System.Windows.GridLength"></see> has the same value and <see cref="T:System.Windows.GridUnitType"></see> as gridLength; otherwise false.</returns>
			<param name="gridLength">The instance of <see cref="T:System.Windows.GridLength"></see> to compare.</param>
		</member>
		<member name="M:System.Windows.GridLength.Equals(System.Object)">
			<summary>Compares an instance of <see cref="T:System.Windows.GridLength"></see> with another object. </summary>
			<returns>true if the <see cref="T:System.Windows.GridLength"></see> object has the same value and <see cref="T:System.Windows.GridUnitType"></see> as the referenced oCompare object; otherwise false.</returns>
			<param name="oCompare">The <see cref="T:System.Object"></see> used for comparison.</param>
		</member>
		<member name="M:System.Windows.GridLength.GetHashCode">
			<summary>Gets a hash code for an instance of <see cref="T:System.Windows.GridLength"></see>. </summary>
			<returns>A hash code for the current <see cref="T:System.Windows.GridLength"></see> object.</returns>
		</member>
		<member name="M:System.Windows.GridLength.op_Equality(System.Windows.GridLength,System.Windows.GridLength)">
			<summary>Compares two instances of <see cref="T:System.Windows.GridLength"></see> for equality.</summary>
			<returns>true if the two instances of <see cref="T:System.Windows.GridLength"></see> have the same value and <see cref="T:System.Windows.GridUnitType"></see>; otherwise false.</returns>
			<param name="gl1">The first instance of <see cref="T:System.Windows.GridLength"></see> to compare.</param>
			<param name="gl2">The second instance of <see cref="T:System.Windows.GridLength"></see> to compare.</param>
		</member>
		<member name="M:System.Windows.GridLength.op_Inequality(System.Windows.GridLength,System.Windows.GridLength)">
			<summary>Compares two instances of <see cref="T:System.Windows.GridLength"></see> to determine if they are not equal.</summary>
			<returns>true if the two instances of <see cref="T:System.Windows.GridLength"></see> do not have the same value and <see cref="T:System.Windows.GridUnitType"></see>; otherwise false.</returns>
			<param name="gl1">The first instance of <see cref="T:System.Windows.GridLength"></see> to compare.</param>
			<param name="gl2">The second instance of <see cref="T:System.Windows.GridLength"></see> to compare.</param>
		</member>
		<member name="M:System.Windows.GridLength.ToString">
			<summary>Returns a <see cref="T:System.String"></see> representation of this instance of <see cref="T:System.Windows.GridLength"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> representation of this <see cref="T:System.Windows.GridLength"></see>.</returns>
		</member>
		<member name="P:System.Windows.GridLength.Auto">
			<summary>Gets a static instance of <see cref="T:System.Windows.GridLength"></see> with a <see cref="T:System.Windows.GridUnitType"></see> of <see cref="F:System.Windows.GridUnitType.Auto"></see>..</summary>
			<returns>A static instance of <see cref="T:System.Windows.GridLength"></see> with auto <see cref="T:System.Windows.GridUnitType"></see>. </returns>
		</member>
		<member name="P:System.Windows.GridLength.GridUnitType">
			<summary>Gets the associated <see cref="T:System.Windows.GridUnitType"></see> for this instance of <see cref="T:System.Windows.GridLength"></see>. </summary>
			<returns>A <see cref="T:System.Windows.GridUnitType"></see> value.</returns>
		</member>
		<member name="P:System.Windows.GridLength.IsAbsolute">
			<summary>Gets a value that indicates whether an instance of <see cref="T:System.Windows.GridLength"></see> holds an absolute value. </summary>
			<returns>true if this instance of <see cref="T:System.Windows.GridLength"></see> holds an absolute (pixel) <see cref="T:System.Windows.GridUnitType"></see> value; otherwise false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.GridLength.IsAuto">
			<summary>Gets a value that indicates whether an instance of <see cref="T:System.Windows.GridLength"></see> holds an automatic value. </summary>
			<returns>true if this instance of <see cref="T:System.Windows.GridLength"></see> holds an <see cref="P:System.Windows.GridLength.Auto"></see><see cref="T:System.Windows.GridUnitType"></see> value; otherwise false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.GridLength.IsStar">
			<summary>Gets a value that indicates whether an instance of <see cref="T:System.Windows.GridLength"></see> holds a <see cref="F:System.Windows.GridUnitType.Star"></see> value. </summary>
			<returns>true if this instance of <see cref="T:System.Windows.GridLength"></see> holds a star <see cref="T:System.Windows.GridUnitType"></see> value; otherwise false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.GridLength.Value">
			<summary>Gets a <see cref="T:System.Double"></see> that represents the value of this instance of <see cref="T:System.Windows.GridLength"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the value of this instance of <see cref="T:System.Windows.GridLength"></see>. This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.GridLengthConverter">
			<summary>Converts instances of other types to and from <see cref="T:System.Windows.GridLength"></see> instances. </summary>
		</member>
		<member name="M:System.Windows.GridLengthConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.GridLengthConverter"></see> class. </summary>
		</member>
		<member name="M:System.Windows.GridLengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether a class can be converted from a given type to an instance of <see cref="T:System.Windows.GridLength"></see>.</summary>
			<returns>true if the converter can convert from the specified type to an instance of <see cref="T:System.Windows.GridLength"></see>; otherwise, false.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="sou rceType">The type of the source that is being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.GridLengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an instance of <see cref="T:System.Windows.GridLength"></see> can be converted to a different type. </summary>
			<returns>true if the converter can convert this instance of <see cref="T:System.Windows.GridLength"></see> to the specified type; otherwise, false.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="destinationType">The desired type that this instance of <see cref="T:System.Windows.GridLength"></see> is being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.GridLengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Attempts to convert a specified object to an instance of <see cref="T:System.Windows.GridLength"></see>. </summary>
			<returns>The instance of <see cref="T:System.Windows.GridLength"></see> that is created from the converted source.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="cultureInfo">Cultural specific information that should be respected during conversion.</param>
			<param name="source">The object being converted.</param>
			<exception cref="T:System.ArgumentNullException">source object is null.</exception>
			<exception cref="T:System.ArgumentException">source object is not null and is not a valid type that can be converted to a <see cref="T:System.Windows.GridLength"></see>.</exception>
		</member>
		<member name="M:System.Windows.GridLengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Attempts to convert an instance of <see cref="T:System.Windows.GridLength"></see> to a specified type. </summary>
			<returns>The object that is created from the converted instance of <see cref="T:System.Windows.GridLength"></see>.</returns>
			<param name="typeDescriptorContext">Describes the context information of a type.</param>
			<param name="destinationType">The type that this instance of <see cref="T:System.Windows.GridLength"></see> is converted to.</param>
			<param name="cultureInfo">Cultural specific information that should be respected during conversion.</param>
			<param name="value">The instance of <see cref="T:System.Windows.GridLength"></see> to convert.</param>
			<exception cref="T:System.ArgumentException">Occurs if value is null.</exception>
			<exception cref="T:System.ArgumentNullException">Occurs if value is not null and is not a <see cref="T:System.Drawing.Brush"></see>, or if the destinationType is not one of the valid types for conversion.</exception>
		</member>
		<member name="T:System.Windows.GridUnitType">
			<summary>Describes the kind of value that a <see cref="T:System.Windows.GridLength"></see> object is holding. </summary>
		</member>
		<member name="F:System.Windows.GridUnitType.Auto">
			<summary>The size is determined by the size properties of the content object. </summary>
		</member>
		<member name="F:System.Windows.GridUnitType.Pixel">
			<summary>The value is expressed as a pixel. </summary>
		</member>
		<member name="F:System.Windows.GridUnitType.Star">
			<summary>The value is expressed as a weighted proportion of available space. </summary>
		</member>
		<member name="T:System.Windows.HierarchicalDataTemplate">
			<summary>Represents a <see cref="T:System.Windows.DataTemplate"></see> that supports <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see>, such as <see cref="T:System.Windows.Controls.TreeViewItem"></see> or <see cref="T:System.Windows.Controls.MenuItem"></see>.</summary>
		</member>
		<member name="M:System.Windows.HierarchicalDataTemplate.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate"></see> class.</summary>
		</member>
		<member name="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.HierarchicalDataTemplate"></see> class with the specified type for which the template is intended.</summary>
			<param name="dataType">The type for which this template is intended. This is either a common language runtime (CLR) object or a string representing an XML element. For more information, see Binding Sources Overview.</param>
		</member>
		<member name="P:System.Windows.HierarchicalDataTemplate.ItemsSource">
			<summary>Gets or sets the binding for this data template, which indicates where to find the collection that represents the next level in the data hierarchy.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplate">
			<summary>Gets or sets the <see cref="T:System.Windows.DataTemplate"></see> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"></see> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> (such as a <see cref="T:System.Windows.Controls.MenuItem"></see> or a <see cref="T:System.Windows.Controls.TreeViewItem"></see>), to indicate how to display items from the next level in the data hierarchy.</summary>
			<returns>The <see cref="T:System.Windows.DataTemplate"></see> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"></see> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> (such as a <see cref="T:System.Windows.Controls.MenuItem"></see> or a <see cref="T:System.Windows.Controls.TreeViewItem"></see>), to indicate how to display items from the next level in the data hierarchy.</returns>
		</member>
		<member name="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector"></see> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> (such as a <see cref="T:System.Windows.Controls.MenuItem"></see> or a <see cref="T:System.Windows.Controls.TreeViewItem"></see>), to indicate how to select a template to display items from the next level in the data hierarchy.</summary>
			<returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> object to apply to the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector"></see> property on a generated <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> (such as a <see cref="T:System.Windows.Controls.MenuItem"></see> or a <see cref="T:System.Windows.Controls.TreeViewItem"></see>), to indicate how to select a template to display items from the next level in the data hierarchy.</returns>
		</member>
		<member name="T:System.Windows.HorizontalAlignment">
			<summary>Indicates where an element should be displayed on the horizontal axis relative to the allocated layout slot of the parent element. </summary>
		</member>
		<member name="F:System.Windows.HorizontalAlignment.Center">
			<summary>An element aligned to the center of the layout slot for the parent element. </summary>
		</member>
		<member name="F:System.Windows.HorizontalAlignment.Left">
			<summary>An element aligned to the left of the layout slot for the parent element. </summary>
		</member>
		<member name="F:System.Windows.HorizontalAlignment.Right">
			<summary>An element aligned to the right of the layout slot for the parent element. </summary>
		</member>
		<member name="F:System.Windows.HorizontalAlignment.Stretch">
			<summary>An element stretched to fill the entire layout slot of the parent element. </summary>
		</member>
		<member name="T:System.Windows.IFrameworkInputElement">
			<summary>Declares a namescope contract for framework elements.</summary>
		</member>
		<member name="P:System.Windows.IFrameworkInputElement.Name">
			<summary>Gets or sets the name of an element. </summary>
			<returns>The element name, which is unique in the namescope and can be used as an identifier for certain operations.</returns>
		</member>
		<member name="T:System.Windows.InheritanceBehavior">
			<summary>Indicates the current mode of lookup for both property value inheritance and resource lookup.</summary>
		</member>
		<member name="F:System.Windows.InheritanceBehavior.Default">
			<summary>Property value inheritance lookup will query the current element and continue walking up the element tree to the page root.</summary>
		</member>
		<member name="F:System.Windows.InheritanceBehavior.SkipAllNext">
			<summary>Property value inheritance lookup will query the current element but not any further.</summary>
		</member>
		<member name="F:System.Windows.InheritanceBehavior.SkipAllNow">
			<summary>Property value inheritance lookup will not query the current element or any further.</summary>
		</member>
		<member name="F:System.Windows.InheritanceBehavior.SkipToAppNext">
			<summary>Property value inheritance lookup will query the current element but not any further.</summary>
		</member>
		<member name="F:System.Windows.InheritanceBehavior.SkipToAppNow">
			<summary>Property value inheritance lookup will not query the current element or any further.</summary>
		</member>
		<member name="F:System.Windows.InheritanceBehavior.SkipToThemeNext">
			<summary>Property value inheritance lookup will query the current element but not any further.</summary>
		</member>
		<member name="F:System.Windows.InheritanceBehavior.SkipToThemeNow">
			<summary>Property value inheritance lookup will not query the current element or any further.</summary>
		</member>
		<member name="T:System.Windows.LengthConverter">
			<summary>Converts instances of other types to and from instances of a <see cref="T:System.Double"></see> that represent an object's length.</summary>
		</member>
		<member name="M:System.Windows.LengthConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.LengthConverter"></see> class. </summary>
		</member>
		<member name="M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether conversion is possible from a specified type to a <see cref="T:System.Double"></see> that represents an object's length. </summary>
			<returns>true if conversion is possible; otherwise, false.</returns>
			<param name="typeDescriptorContext">Provides contextual information about a component.</param>
			<param name="sourceType">Identifies the data type to evaluate for conversion.</param>
		</member>
		<member name="M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether conversion is possible to a specified type from a <see cref="T:System.Double"></see> that represents an object's length. </summary>
			<returns>true if conversion to the destinationType is possible; otherwise, false.</returns>
			<param name="typeDescriptorContext">Provides contextual information about a component.</param>
			<param name="destinationType">Identifies the data type to evaluate for conversion.</param>
		</member>
		<member name="M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts instances of other data types into instances of <see cref="T:System.Double"></see> that represent an object's length. </summary>
			<returns>An instance of <see cref="T:System.Double"></see> that is the value of the conversion.</returns>
			<param name="typeDescriptorContext">Provides contextual information about a component.</param>
			<param name="cultureInfo">Represents culture-specific information that is maintained during a conversion.</param>
			<param name="source">Identifies the object that is being converted to <see cref="T:System.Double"></see>.</param>
			<exception cref="T:System.ArgumentException">Occurs if the source is not null and is not a valid type for conversion.</exception>
			<exception cref="T:System.ArgumentNullException">Occurs if the source is null.</exception>
		</member>
		<member name="M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts other types into instances of <see cref="T:System.Double"></see> that represent an object's length. </summary>
			<returns>A new <see cref="T:System.Object"></see> that is the value of the conversion.</returns>
			<param name="typeDescriptorContext">Describes context information of a component, such as its container and PropertyDescriptor.</param>
			<param name="destinationTyp e">The data type that this instance of <see cref="T:System.Double"></see> is being converted to.</param>
			<param name="cultureInfo">Identifies culture-specific information, including the writing system and the calendar that is used.</param>
			<param name="value">Identifies the <see cref="T:System.Object"></see> that is being converted.</param>
			<exception cref="T:System.ArgumentException">Occurs if the value is not null and is not a <see cref="T:System.Windows.Media.Brush"></see>, or the destinationType is not valid.</exception>
			<exception cref="T:System.ArgumentNullException">Occurs if the value is null.</exception>
		</member>
		<member name="T:System.Windows.LineStackingStrategy">
			<summary> Describes a mechanism by which a line box is determined for each line.  </summary>
		</member>
		<member name="F:System.Windows.LineStackingStrategy.BlockLineHeight">
			<summary> The stack height is determined by the block element line-height property value. </summary>
		</member>
		<member name="F:System.Windows.LineStackingStrategy.MaxHeight">
			<summary> The stack height is the smallest value that containing all the inline elements on that line when those elements are properly aligned. </summary>
		</member>
		<member name="T:System.Windows.Localization">
			<summary>The <see cref="T:System.Windows.Localization"></see> class defines attached properties for localization attributes and comments.</summary>
		</member>
		<member name="F:System.Windows.Localization.AttributesProperty">
			<summary>Identifies the Attributes attached property. </summary>
			<returns>The Attributes attached property identifier.</returns>
		</member>
		<member name="F:System.Windows.Localization.CommentsProperty">
			<summary>Identifies the Comments attached property. </summary>
			<returns>The Comments attached property identifier.</returns>
		</member>
		<member name="M:System.Windows.Localization.GetAttributes(System.Object)">
			<summary>Get the value of the <see cref="F:System.Windows.Localization.AttributesProperty"></see> attached property from a specified element.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the localization attribute.</returns>
			<param name="element">A <see cref="T:System.Object"></see> that represents the element whose attached property you want to retrieve.</param>
		</member>
		<member name="M:System.Windows.Localization.GetComments(System.Object)">
			<summary>Get the value of the <see cref="F:System.Windows.Localization.CommentsProperty"></see> attached property from a specified element.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the localization comment.</returns>
			<param name="element">A <see cref="T:System.Object"></see> that represents the element whose attached property you want to retrieve.</param>
		</member>
		<member name="M:System.Windows.Localization.SetAttributes(System.Object,System.String)">
			<summary>Set the <see cref="F:System.Windows.Localization.AttributesProperty"></see> attached property for the specified element.</summary>
			<param name="element">A <see cref="T:System.Object"></see> that represents the element whose attached property you want to set.</param>
			<param name="attributes">A <see cref="T:System.String"></see> that specifies the localization attributes.</param>
		</member>
		<member name="M:System.Windows.Localization.SetComments(System.Object,System.String)">
			<summary>Set the <see cref="F:System.Windows.Localization.CommentsProperty"></see> attached property to the specified element.</summary>
			<param name="element">A <see cref="T:System.Object"></see> that represents the element whose attached property you want to set.</param>
			<param name="comments">A <see cref="T:System.String"></see> that specifies the localization comments.</param>
		</member>
		<member name="T:System.Windows.LogicalTreeHelper">
			<summary>Provides static helper methods for logical tree element queries.</summary>
		</member>
		<member name="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)">
			<summary>Attempts to bring the requested element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> event on the target in order to report the results. This is a static method. </summary>
			<param name="current">The element to bring into view.</param>
		</member>
		<member name="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)">
			<summary>Finds and returns an element node that has the specified name. The search starts from the specified element and continues into subnodes. </summary>
			<returns>The element with the matching name, if one is found; returns null if no matching name was found in the active namescope.</returns>
			<param name="elementName">The name of the element node to find.</param>
			<param name="logicalTreeNode">The element to start searching from. This object must be either a <see cref="T:System.Windows.FrameworkElement"></see> or <see cref="T:System.Windows.FrameworkContentElement"></see> type.</param>
		</member>
		<member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)">
			<summary>Returns the collection of immediate child elements from the logical tree of the specified element.</summary>
			<returns>The enumerable collection of immediate child elements from the logical tree of the specified element.</returns>
			<param name="current">The element from which to get the logical tree. This is expected to be either a <see cref="T:System.Windows.FrameworkElement"></see> or <see cref="T:System.Windows.FrameworkContentElement"></see>.</param>
		</member>
		<member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)">
			<summary>Returns the collection of immediate child elements from the logical tree of the specified <see cref="T:System.Windows.FrameworkContentElement"></see>. </summary>
			<returns>The enumerable collection of immediate child elements from the logical tree of the specified input element.</returns>
			<param name="current">The element from which to get the logical tree.</param>
		</member>
		<member name="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)">
			<summary>Returns the collection of immediate child elements from the logical tree of the specified <see cref="T:System.Windows.FrameworkElement"></see>. </summary>
			<returns>The enumerable collection of immediate child elements from the logical tree of the specified input element.</returns>
			<param name="current">The element from which to get the logical tree.</param>
		</member>
		<member name="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)">
			<summary>Returns the logical parent element of the specified element.</summary>
			<returns>The requested parent element.</returns>
			<param name="current">The element to find the parent for. This is expected to be either <see cref="T:System.Windows.FrameworkElement"></see> or <see cref="T:System.Windows.FrameworkContentElement"></see>.</param>
		</member>
		<member name="T:System.Windows.LostFocusEventManager">
			<summary>Provides a <see cref="T:System.Windows.WeakEventManager"></see> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.UIElement.LostFocus"></see> or <see cref="E:System.Windows.ContentElement.LostFocus"></see> events.</summary>
		</member>
		<member name="M:System.Windows.LostFocusEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
			<summary>Adds the provided listener to the list of listeners on the provided source.</summary>
			<param name="source">The object with the event.</param>
			<param name="listener">The object to add as a listener.</param>
		</member>
		<member name="M:System.Windows.LostFocusEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
			<summary>Removes the specified listener from the list of listeners on the provided source.</summary>
			<param name="source">The object to remove the listener from.</param>
			<param name="listener">The listener to remove.</param>
		</member>
		<member name="M:System.Windows.LostFocusEventManager.StartListening(System.Object)">
			<summary>Begins listening for the <see cref="E:System.Windows.UIElement.LostFocus"></see> event on the given source, attaching an internal class handler to that source.</summary>
			<param name="source">The object on which to start listening for the pertinent <see cref="E:System.Windows.UIElement.LostFocus"></see> event.</param>
		</member>
		<member name="M:System.Windows.LostFocusEventManager.StopListening(System.Object)">
			<summary>Stops listening for the <see cref="E:System.Windows.UIElement.LostFocus"></see> event on the given source.</summary>
			<param name="source">The source object on which to stop listening for <see cref="E:System.Windows.UIElement.LostFocus"></see>.</param>
		</member>
		<member name="T:System.Windows.MediaScriptCommandRoutedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand"></see> and <see cref="E:System.Windows.Media.MediaPlayer.ScriptCommand"></see> events.</summary>
		</member>
		<member name="T:System.Windows.MessageBox">
			<summary>Displays a message box. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.String)">
			<summary>Displays a message box that has a message and that returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.String,System.String)">
			<summary>Displays a message box that has a message and title bar caption; and that returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String)">
			<summary>Displays a message box in front of the specified window. The message box displays a message and returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="owner">A <see cref="T:System.Windows.Window"></see> that represents the owner window of the message box.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton)">
			<summary>Displays a message box that has a message, title bar caption, and button; and that returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String)">
			<summary>Displays a message box in front of the specified window. The message box displays a message and title bar caption; and it returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="owner">A <see cref="T:System.Windows.Window"></see> that represents the owner window of the message box.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
			<summary>Displays a message box that has a message, title bar caption, button, and icon; and that returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="icon">A <see cref="T:System.Windows.MessageBoxImage"></see> value that specifies the icon to display.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton)">
			<summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, and button; and it also returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="owner">A <see cref="T:System.Windows.Window"></see> that represents the owner window of the message box.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
			<summary>Displays a message box that has a message, title bar caption, button, and icon; and that accepts a default message box result and returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="icon">A <see cref="T:System.Windows.MessageBoxImage"></see> value that specifies the icon to display.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies the default result of the message box.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)">
			<summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; and it also returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="owner">A <see cref="T:System.Windows.Window"></see> that represents the owner window of the message box.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="icon">A <see cref="T:System.Windows.MessageBoxImage"></see> value that specifies the icon to display.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
			<summary>Displays a message box that has a message, title bar caption, button, and icon; and that accepts a default message box result, complies with the specified options, and returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="icon">A <see cref="T:System.Windows.MessageBoxImage"></see> value that specifies the icon to display.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies the default result of the message box.</param>
			<param name="options">A <see cref="T:System.Windows.MessageBoxOptions"></see> value object that specifies the options.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult)">
			<summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; and accepts a default message box result and returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="owner">A <see cref="T:System.Windows.Window"></see> that represents the owner window of the message box.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies the default result of the message box.</param>
			<param name="icon">A <see cref="T:System.Windows.MessageBoxImage"></see> value that specifies the icon to display.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="M:System.Windows.MessageBox.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
			<summary>Displays a message box in front of the specified window. The message box displays a message, title bar caption, button, and icon; and accepts a default message box result, complies with the specified options, and returns a result.</summary>
			<returns>A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies which message box button is clicked by the user.</returns>
			<param name="owner">A <see cref="T:System.Windows.Window"></see> that represents the owner window of the message box.</param>
			<param name="messageBoxText">A <see cref="T:System.String"></see> that specifies the text to display.</param>
			<param name="defaultResult">A <see cref="T:System.Windows.MessageBoxResult"></see> value that specifies the default result of the message box.</param>
			<param name="icon">A <see cref="T:System.Windows.MessageBoxImage"></see> value that specifies the icon to display.</param>
			<param name="options">A <see cref="T:System.Windows.MessageBoxOptions"></see> value object that specifies the options.</param>
			<param name="caption">A <see cref="T:System.String"></see> that specifies the title bar caption to display.</param>
			<param name="button">A <see cref="T:System.Windows.MessageBoxButton"></see> value that specifies which button or buttons to display.</param>
		</member>
		<member name="T:System.Windows.MessageBoxButton">
			<summary>Specifies the buttons that are displayed on a message box. Used as an argument of the <see cref="Overload:System.Windows.MessageBox.Show"></see> method.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxButton.OK">
			<summary>The message box displays an OK button.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxButton.OKCancel">
			<summary>The message box displays OK and Cancel buttons.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxButton.YesNo">
			<summary>The message box displays Yes and No buttons.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxButton.YesNoCancel">
			<summary>The message box displays Yes, No, and Cancel buttons.</summary>
		</member>
		<member name="T:System.Windows.MessageBoxImage">
			<summary>Specifies the icon that is displayed by a message box.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Asterisk">
			<summary>The message box displays an asterisk icon.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Error">
			<summary>The message box displays an error icon.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Exclamation">
			<summary>The message box displays an exclamation mark icon.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Hand">
			<summary>The message box displays a hand icon.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Information">
			<summary>The message box displays an information icon.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.None">
			<summary>No icon is displayed.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Question">
			<summary>The message box displays a question mark icon.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Stop">
			<summary>The message box displays a stop icon.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxImage.Warning">
			<summary>The message box displays a warning icon.</summary>
		</member>
		<member name="T:System.Windows.MessageBoxOptions">
			<summary>Specifies special display options for a message box.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxOptions.DefaultDesktopOnly">
			<summary>The message box is displayed on the default desktop of the interactive window station. Specifies that the message box is displayed from a Microsoft .NET Framework version 3.0 windows service application in order to notify the user of an event. </summary>
		</member>
		<member name="F:System.Windows.MessageBoxOptions.None">
			<summary>No options are set.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxOptions.RightAlign">
			<summary>The message box text and title bar caption are right-aligned.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxOptions.RtlReading">
			<summary>All text, buttons, icons, and title bars are displayed right-to-left.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxOptions.ServiceNotification">
			<summary>The message box is displayed on the currently active desktop even if a user is not logged on to the computer. Specifies that the message box is displayed from a Microsoft .NET Framework version 3.0 windows service application in order to notify the user of an event. </summary>
		</member>
		<member name="T:System.Windows.MessageBoxResult">
			<summary>Specifies which message box button that a user clicks. <see cref="T:System.Windows.MessageBoxResult"></see> is returned by the <see cref="Overload:System.Windows.MessageBox.Show"></see> method.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxResult.Cancel">
			<summary>The result value of the message box is Cancel.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxResult.No">
			<summary>The result value of the message box is No.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxResult.None">
			<summary>The message box returns no result.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxResult.OK">
			<summary>The result value of the message box is OK.</summary>
		</member>
		<member name="F:System.Windows.MessageBoxResult.Yes">
			<summary>The result value of the message box is Yes.</summary>
		</member>
		<member name="T:System.Windows.MultiDataTrigger">
			<summary>Represents a trigger that applies property values or performs actions when the bound data meet a set of conditions. </summary>
		</member>
		<member name="M:System.Windows.MultiDataTrigger.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.MultiDataTrigger"></see> class.</summary>
		</member>
		<member name="M:System.Windows.MultiDataTrigger.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.MultiDataTrigger.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.MultiDataTrigger.Conditions">
			<summary>Gets a collection of <see cref="T:System.Windows.Condition"></see> objects. Changes to property values are applied when all the conditions in the collection are met.</summary>
			<returns>A collection of <see cref="T:System.Windows.Condition"></see> objects. The default is an empty collection.</returns>
		</member>
		<member name="P:System.Windows.MultiDataTrigger.Setters">
			<summary>Gets a collection of <see cref="T:System.Windows.Setter"></see> objects that describe the property values to apply when all the conditions of the <see cref="T:System.Windows.MultiDataTrigger"></see> are met.</summary>
			<returns>A collection of <see cref="T:System.Windows.Setter"></see> objects. The default value is an empty collection.</returns>
		</member>
		<member name="T:System.Windows.MultiTrigger">
			<summary>Represents a trigger that applies property values or performs actions when a set of conditions are satisfied.</summary>
		</member>
		<member name="M:System.Windows.MultiTrigger.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.MultiTrigger"></see> class.</summary>
		</member>
		<member name="M:System.Windows.MultiTrigger.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.MultiTrigger.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.MultiTrigger.Conditions">
			<summary>Gets a collection of <see cref="T:System.Windows.Condition"></see> objects. Changes to property values are applied when all of the conditions in the collection are met.</summary>
			<returns>The default is an empty collection.</returns>
		</member>
		<member name="P:System.Windows.MultiTrigger.Setters">
			<summary>Gets a collection of <see cref="T:System.Windows.Setter"></see> objects, which describe the property values to apply when all of the conditions of the <see cref="T:System.Windows.MultiTrigger"></see> are met.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="T:System.Windows.NameScope">
			<summary>Implements base support for the <see cref="T:System.Windows.Markup.INameScope"></see> methods that store or retrieve name-object mappings into a particular namescope, and adds attached property support to make it simpler to get or set identifier namescope information dynamically at the element level..</summary>
		</member>
		<member name="M:System.Windows.NameScope.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.NameScope"></see> class.</summary>
		</member>
		<member name="F:System.Windows.NameScope.NameScopeProperty">
			<summary>Identifies the <see cref="P:System.Windows.NameScope.NameScope"></see>  attached property. </summary>
			<returns>The <see cref="P:System.Windows.NameScope.NameScope"></see> attached property identifier.</returns>
		</member>
		<member name="M:System.Windows.NameScope.FindName(System.String)">
			<summary>Returns the corresponding object in a namescope based on a provided name string.</summary>
			<returns>The requested object. May return null if name was provided as null or empty string, or if no matching object was found.</returns>
			<param name="name">Mapped name of the object to retrieve.</param>
		</member>
		<member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
			<summary>Provides the attached property get accessor for the <see cref="P:System.Windows.NameScope.Namescope"></see> attached property.</summary>
			<returns>A namescope, as an <see cref="T:System.Windows.Markup.INameScope"></see> interface instance.</returns>
			<param name="dependencyObject">The object to get the namescope from.</param>
		</member>
		<member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
			<summary>Registers a new name-object pair into the current namescope.</summary>
			<param name="scopedElement">The object to be mapped to the provided name.</param>
			<param name="name">The name to use for mapping the given object.</param>
			<exception cref="T:System.NullReferenceException">Either name or scopedElement was provided as null.</exception>
			<exception cref="T:System.ArgumentException">The name was provided as empty string- or -The name provided was rejected by the parser, because it contained invalid characters- or -The name provided would have resulted in a duplicate name registration.</exception>
		</member>
		<member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
			<summary>Provides the attached property set accessor for the <see cref="P:System.Windows.NameScope.NameScope"></see> attached property.</summary>
			<param name="dependencyObject">Object to change namescope for.</param>
			<param name="value">The new namescope, using an interface cast.</param>
		</member>
		<member name="M:System.Windows.NameScope.UnregisterName(System.String)">
			<summary>Removes a name-object mapping from the namescope.</summary>
			<param name="name">The name of the mapping to remove.</param>
			<exception cref="T:System.ArgumentException">The name was provided as empty string.- or -The name provided had not been registered.</exception>
		</member>
		<member name="P:System.Windows.NameScope.NameScope">
			<summary>Gets or sets dynamically attached <see cref="T:System.Windows.NameScope"></see> instances. </summary>
			<returns>The attached name scope on a particular object.</returns>
		</member>
		<member name="T:System.Windows.NullableBoolConverter">
			<summary>Converts to and from the <see cref="T:System.Nullable`1"></see> type (using the Boolean type constraint on the generic). </summary>
		</member>
		<member name="M:System.Windows.NullableBoolConverter.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.NullableBoolConverter"></see>  class. </summary>
		</member>
		<member name="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
			<summary>Returns a collection of standard values for the data type that this type converter is designed for. </summary>
			<returns>A collection that holds a standard set of valid values. For this implementation, those values are true, false, and null.</returns>
			<param name="context">Provides contextual information about a component, such as its container and property descriptor. </param>
		</member>
		<member name="M:System.Windows.NullableBoolConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
			<summary>Returns whether the collection of standard values returned from <see cref="M:System.Windows.NullableBoolConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)"></see> is an exclusive list. </summary>
			<returns>This implementation always returns true.</returns>
			<param name="context">Provides contextual information about a component, such as its container and property descriptor.</param>
		</member>
		<member name="M:System.Windows.NullableBoolConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
			<summary>Returns whether this object supports a standard set of values that can be picked from a list. </summary>
			<returns>This implementation always returns true.</returns>
			<param name="context">Provides contextual information about a component, such as its container and property descriptor.</param>
		</member>
		<member name="T:System.Windows.PowerLineStatus">
			<summary>Indicates whether the system power is online, or that the system power status is unknown.</summary>
		</member>
		<member name="F:System.Windows.PowerLineStatus.Offline">
			<summary>The system power is not on.</summary>
		</member>
		<member name="F:System.Windows.PowerLineStatus.Online">
			<summary>The system power is on.</summary>
		</member>
		<member name="F:System.Windows.PowerLineStatus.Unknown">
			<summary>The status of the system power cannot be determined.</summary>
		</member>
		<member name="T:System.Windows.PropertyPath">
			<summary>Implements a data structure for describing a property as a path below another property, or below an owning type. Property paths are used in data binding to objects, and in storyboards and timelines for animations.</summary>
		</member>
		<member name="M:System.Windows.PropertyPath.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPath"></see> class.</summary>
			<param name="parameter">A property path that either describes a path to a common language runtime (CLR) property, or a single dependency property. </param>
		</member>
		<member name="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPath"></see> class, with the provided pathing token string and parameters.</summary>
			<param name="pathParameters">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters"></see>.  </param>
			<param name="path">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path"></see>, in a tokenized format.</param>
		</member>
		<member name="P:System.Windows.PropertyPath.Path">
			<summary>Gets or sets the string that describes the path. </summary>
			<returns>The string that describes the path.</returns>
		</member>
		<member name="P:System.Windows.PropertyPath.PathParameters">
			<summary>Gets the list of parameters to use when the path refers to indexed parameters.</summary>
			<returns>The parameter list.</returns>
		</member>
		<member name="T:System.Windows.PropertyPathConverter">
			<summary>Provides a type converter for <see cref="T:System.Windows.PropertyPath"></see> objects. </summary>
		</member>
		<member name="M:System.Windows.PropertyPathConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.PropertyPathConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.PropertyPathConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Returns whether this converter can convert an object of one type to the <see cref="T:System.Windows.PropertyPath"></see> type.</summary>
			<returns>true if this converter can convert from the provided type; otherwise, false.</returns>
			<param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context. </param>
			<param name="sourceType">A <see cref="T:System.Type"></see> that represents the type you want to convert from. </param>
		</member>
		<member name="M:System.Windows.PropertyPathConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Returns whether this converter can convert the object to the <see cref="T:System.Windows.PropertyPath"></see> type.</summary>
			<returns>true if this converter can convert to the provided type; otherwise, false.</returns>
			<param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
			<param name="destinationType">A <see cref="T:System.Type"></see> that represents the type you want to convert to. </param>
		</member>
		<member name="M:System.Windows.PropertyPathConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Converts the specified value to the <see cref="T:System.Windows.PropertyPath"></see> type.</summary>
			<returns>The converted <see cref="T:System.Windows.PropertyPath"></see>.</returns>
			<param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
			<param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture. </param>
			<param name="source">The object to convert to a <see cref="T:System.Windows.PropertyPath"></see>. This is expected to be a string.</param>
			<exception cref="T:System.ArgumentException">The source was not null, but was not of the expected <see cref="T:System.String"></see> type.</exception>
			<exception cref="T:System.ArgumentNullException">The source was provided as null.</exception>
		</member>
		<member name="M:System.Windows.PropertyPathConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts the specified value object to the <see cref="T:System.Windows.PropertyPath"></see> type.</summary>
			<returns>The converted destination <see cref="T:System.String"></see>.</returns>
			<param name="typeDescriptorContext">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
			<param name="destinationType">The destination type. This is expected to be the <see cref="T:System.String"></see> type.</param>
			<param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo"></see> to use as the current culture.</param>
			<param name="value">The <see cref="T:System.Windows.PropertyPath"></see> to convert.</param>
			<exception cref="T:System.ArgumentException">The value was not null, but was not of the expected <see cref="T:System.Windows.PropertyPath"></see> type.- or -The destinationType was not the <see cref="T:System.String"></see> type.</exception>
			<exception cref="T:System.ArgumentNullException">The value was provided as null.</exception>
		</member>
		<member name="T:System.Windows.ReasonSessionEnding">
			<summary>Specifies the reason for which the user's session is ending. Used by the <see cref="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding"></see> property.</summary>
		</member>
		<member name="F:System.Windows.ReasonSessionEnding.Logoff">
			<summary>The session is ending because the user is logging off.</summary>
		</member>
		<member name="F:System.Windows.ReasonSessionEnding.Shutdown">
			<summary>The session is ending because the user is shutting down Windows.</summary>
		</member>
		<member name="T:System.Windows.RequestBringIntoViewEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> routed event.</summary>
		</member>
		<member name="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Invokes a type-specific handler on the target whenever the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> event is raised.</summary>
			<param name="genericTarget">The target to call the handler on.</param>
			<param name="genericHandler">The generic handler to call in a type-specific way.</param>
		</member>
		<member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject">
			<summary>Gets the object that should be made visible in response to the event.</summary>
			<returns>The object that called <see cref="M:System.Windows.FrameworkElement.BringIntoView"></see>.</returns>
		</member>
		<member name="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect">
			<summary>Gets the rectangular region in the object's coordinate space which should be made visible.</summary>
			<returns>The requested rectangular space.</returns>
		</member>
		<member name="T:System.Windows.RequestBringIntoViewEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> event. </summary>
		</member>
		<member name="T:System.Windows.ResizeMode">
			<summary>Specifies whether a window can be resized and, if so, how it can be resized. Used by the <see cref="P:System.Windows.Window.ResizeMode"></see> property.</summary>
		</member>
		<member name="F:System.Windows.ResizeMode.CanMinimize">
			<summary>A window can only be minimized and restored. The Minimize and Maximize buttons are both shown, but only the Minimize button is enabled.</summary>
		</member>
		<member name="F:System.Windows.ResizeMode.CanResize">
			<summary>A window can be resized. The Minimize and Maximize buttons are both shown and enabled.</summary>
		</member>
		<member name="F:System.Windows.ResizeMode.CanResizeWithGrip">
			<summary>A window can be resized. The Minimize and Maximize buttons are both shown and enabled. A resize grip appears in the bottom-right corner of the window.</summary>
		</member>
		<member name="F:System.Windows.ResizeMode.NoResize">
			<summary>A window cannot be resized. The Minimize and Maximize buttons are not displayed in the title bar.</summary>
		</member>
		<member name="T:System.Windows.ResourceDictionary">
			<summary>Provides a hashtable / dictionary implementation that contains WPF resources used by components and other elements of a WPF application. </summary>
		</member>
		<member name="M:System.Windows.ResourceDictionary.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceDictionary"></see> class. </summary>
		</member>
		<member name="M:System.Windows.ResourceDictionary.Add(System.Object,System.Object)">
			<summary>Adds a resource by key to this <see cref="T:System.Windows.ResourceDictionary"></see>. </summary>
			<param name="value">The value of the resource to add.</param>
			<param name="key">The name of the key to add.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.ResourceDictionary"></see> is locked or readonly.</exception>
			<exception cref="T:System.ArgumentException">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable"></see>. </exception>
		</member>
		<member name="M:System.Windows.ResourceDictionary.BeginInit">
			<summary>Begins the initialization phase for this <see cref="T:System.Windows.ResourceDictionary"></see>. </summary>
			<exception cref="T:System.InvalidOperationException">Called <see cref="M:System.Windows.ResourceDictionary.BeginInit"></see> more than once before <see cref="M:System.Windows.ResourceDictionary.EndInit"></see> was called.</exception>
		</member>
		<member name="M:System.Windows.ResourceDictionary.Clear">
			<summary>Clears all keys (and values) in the base <see cref="T:System.Windows.ResourceDictionary"></see>. This does not clear any merged dictionary items.</summary>
		</member>
		<member name="M:System.Windows.ResourceDictionary.Contains(System.Object)">
			<summary>Determines whether the <see cref="T:System.Windows.ResourceDictionary"></see> contains an element with the specified key. </summary>
			<returns>true if <see cref="T:System.Windows.ResourceDictionary"></see> contains a key-value pair with the specified key; otherwise, false.</returns>
			<param name="key">The key to locate in the <see cref="T:System.Windows.ResourceDictionary"></see>.</param>
		</member>
		<member name="M:System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
			<summary>Copies the <see cref="T:System.Windows.ResourceDictionary"></see> elements to a one-dimensional <see cref="T:System.Collections.DictionaryEntry"></see> at the specified index. </summary>
			<param name="array">The one-dimensional array that is the destination of the <see cref="T:System.Collections.DictionaryEntry"></see> objects copied from the <see cref="T:System.Windows.ResourceDictionary"></see> instance. The array must have zero-based indexing. </param>
			<param name="arrayIndex">The zero-based index of array where copying begins.</param>
		</member>
		<member name="M:System.Windows.ResourceDictionary.FindName(System.String)">
			<summary>Not supported by this Dictionary implementation. </summary>
			<returns>Always returns null.</returns>
			<param name="name">See Remarks.</param>
		</member>
		<member name="M:System.Windows.ResourceDictionary.GetEnumerator">
			<summary>Returns an <see cref="T:System.Collections.IDictionaryEnumerator"></see> that can be used to iterate through the <see cref="T:System.Windows.ResourceDictionary"></see>. </summary>
			<returns>A specialized enumerator for the <see cref="T:System.Windows.ResourceDictionary"></see>.</returns>
		</member>
		<member name="M:System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)">
			<summary>Not supported by this Dictionary implementation. </summary>
			<param name="scopedElement">See Remarks.</param>
			<param name="name">See Remarks.</param>
			<exception cref="T:System.NotSupportedException">Raised in all cases when this method is called.</exception>
		</member>
		<member name="M:System.Windows.ResourceDictionary.Remove(System.Object)">
			<summary>Removes the entry with the specified key from the base dictionary. </summary>
			<param name="key">Key of the entry to remove.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.ResourceDictionary"></see> is locked or readonly.</exception>
		</member>
		<member name="M:System.Windows.ResourceDictionary.UnregisterName(System.String)">
			<summary>Not supported by this Dictionary implementation.</summary>
			<param name="name">See Remarks.</param>
		</member>
		<member name="P:System.Windows.ResourceDictionary.Count">
			<summary>Gets the number of entries in the base <see cref="T:System.Windows.ResourceDictionary"></see>. </summary>
			<returns>The current number of entries in the base dictionary.</returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.IsFixedSize">
			<summary>Gets whether this <see cref="T:System.Windows.ResourceDictionary"></see> is fixed-size. </summary>
			<returns>true if the hashtable is fixed-size; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.IsReadOnly">
			<summary>Gets whether this <see cref="T:System.Windows.ResourceDictionary"></see> is read-only. </summary>
			<returns>true if the hashtable is read-only; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.Item(System.Object)">
			<summary> Gets or sets the value associated with the given key. </summary>
			<returns>Value of the key.</returns>
			<param name="key">The desired key to get or set.</param>
		</member>
		<member name="P:System.Windows.ResourceDictionary.Keys">
			<summary>Gets a collection of all keys contained in this <see cref="T:System.Windows.ResourceDictionary"></see>. </summary>
			<returns>The collection of all keys.</returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.MergedDictionaries">
			<summary>Gets a collection of the <see cref="T:System.Windows.ResourceDictionary"></see> dictionaries that constitute the various resource dictionaries in the merged dictionaries.</summary>
			<returns>The collection of merged dictionaries.</returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.Source">
			<summary>Gets or sets the uniform resource identifier (URI) to load resources from.</summary>
			<returns>Setting this value will merge the dictionary contents found at the supplied URI  into the current <see cref="T:System.Windows.ResourceDictionary"></see>. Any load failures will raise an exception.</returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized">
			<summary>Gets a value that declares whether access to <see cref="T:System.Windows.ResourceDictionary"></see> is thread-safe for callers.</summary>
			<returns>true if access to <see cref="T:System.Windows.ResourceDictionary"></see> is synchronized (thread safe); otherwise, false. </returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to <see cref="T:System.Windows.ResourceDictionary"></see>. </summary>
			<returns>An object that can be used to synchronize access to <see cref="T:System.Windows.ResourceDictionary"></see>. </returns>
		</member>
		<member name="P:System.Windows.ResourceDictionary.Values">
			<summary> Gets a collection of all values associated with keys contained in this <see cref="T:System.Windows.ResourceDictionary"></see>. </summary>
			<returns>The collection of all values.</returns>
		</member>
		<member name="T:System.Windows.ResourceDictionaryLocation">
			<summary>Specifies the locations where theme resource dictionaries are located.</summary>
		</member>
		<member name="F:System.Windows.ResourceDictionaryLocation.ExternalAssembly">
			<summary>Theme dictionaries exist in assemblies external to the one defining the types being themed.</summary>
		</member>
		<member name="F:System.Windows.ResourceDictionaryLocation.None">
			<summary>No theme dictionaries exist.</summary>
		</member>
		<member name="F:System.Windows.ResourceDictionaryLocation.SourceAssembly">
			<summary>Theme dictionaries exist in the assembly that defines the types being themed.</summary>
		</member>
		<member name="T:System.Windows.ResourceKey">
			<summary>Provides an abstract base class for various resource keys. </summary>
		</member>
		<member name="M:System.Windows.ResourceKey.#ctor">
			<summary> Initializes a new instance of a class derived from <see cref="T:System.Windows.ResourceKey"></see>. </summary>
		</member>
		<member name="M:System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)">
			<summary>Returns this <see cref="T:System.Windows.ResourceKey"></see>. Instances of this class are typically used as a key in a dictionary. </summary>
			<returns>Calling this method always returns the instance itself.</returns>
			<param name="serviceProvider">A service implementation that provides the desired value.</param>
		</member>
		<member name="P:System.Windows.ResourceKey.Assembly">
			<summary>Gets an assembly object that indicates which assembly's dictionary to look in for the value associated with this key. </summary>
			<returns>The retrieved assembly, as a reflection class.</returns>
		</member>
		<member name="T:System.Windows.ResourceReferenceKeyNotFoundException">
			<summary>An exception that may be raised during parsing or serialization of markup extension resources.</summary>
		</member>
		<member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException"></see> class.</summary>
		</member>
		<member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException"></see> class.</summary>
			<param name="context">Context that serialization was acting within at time that the exception was raised.</param>
			<param name="info">Specific information from the serialization process.</param>
		</member>
		<member name="M:System.Windows.ResourceReferenceKeyNotFoundException.#ctor(System.String,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ResourceReferenceKeyNotFoundException"></see> class.</summary>
			<param name="message">A possible descriptive message.</param>
			<param name="resourceKey">The key that was not found.</param>
		</member>
		<member name="M:System.Windows.ResourceReferenceKeyNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Reports specifics of the exception to debuggers or dialogs.</summary>
			<param name="context">Context that serialization was acting within at time that the exception was raised.</param>
			<param name="info">Specific information from the serialization process.</param>
		</member>
		<member name="P:System.Windows.ResourceReferenceKeyNotFoundException.Key">
			<summary>The key that was not found and caused this exception to be raised.</summary>
			<returns>Key value.</returns>
		</member>
		<member name="T:System.Windows.RoutedPropertyChangedEventArgs`1">
			<summary>Provides data about a change in value to a dependency property as reported by particular routed events, including the previous and current value of the property that changed. </summary>
		</member>
		<member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)">
			<summary>Initializes a new instance of the RoutedPropertyChangedEventArgs&lt;T&gt; class, with provided old and new values.</summary>
			<param name="oldValue">Previous value of the property, prior to the event being raised.</param>
			<param name="newValue">Current value of the property at the time of the event.</param>
		</member>
		<member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)">
			<summary>Initializes a new instance of the RoutedPropertyChangedEventArgs&lt;T&gt; class, with provided old and new values, and an event identifier.</summary>
			<param name="oldValue">Previous value of the property, prior to the event being raised.</param>
			<param name="routedEvent">Identifier of the routed event that this arguments class carries information for.</param>
			<param name="newValue">Current value of the property at the time of the event.</param>
		</member>
		<member name="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Calls the type-specific event handler on the target.</summary>
			<param name="genericTarget">The current object along the event's route.</param>
			<param name="genericHandler">The handler implementation to invoke.</param>
		</member>
		<member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue">
			<summary>Gets the new value of the property being tracked as reported by an event. </summary>
			<returns>The generic value. In a practical implementation of the RoutedPropertyChangedEventArgs&lt;T&gt;, the generic type of this property is replaced with the constrained type of the implementation.</returns>
		</member>
		<member name="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue">
			<summary> Gets the previous value of the property being trackedbeing tracked as reported by an event. </summary>
			<returns>The generic value. In a practical implementation of the RoutedPropertyChangedEventArgs&lt;T&gt;, the generic type of this property is replaced with the constrained type of the implementation.</returns>
		</member>
		<member name="T:System.Windows.RoutedPropertyChangedEventHandler`1">
			<summary>Represents methods that handle various routed events that track property value changes.</summary>
		</member>
		<member name="T:System.Windows.SessionEndingCancelEventArgs">
			<summary>Contains the event arguments for the <see cref="E:System.Windows.Application.SessionEnding"></see> event.</summary>
		</member>
		<member name="P:System.Windows.SessionEndingCancelEventArgs.ReasonSessionEnding">
			<summary>Gets a value that indicates why the session is ending.</summary>
			<returns>A <see cref="T:System.Windows.ReasonSessionEnding"></see> value that indicates why the session ended.</returns>
		</member>
		<member name="T:System.Windows.SessionEndingCancelEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Application.SessionEnding"></see> event.</summary>
		</member>
		<member name="T:System.Windows.Setter">
			<summary>Represents a setter that applies a property value.</summary>
		</member>
		<member name="M:System.Windows.Setter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Setter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Setter"></see> class with the specified property and value.</summary>
			<param name="property">The <see cref="T:System.Windows.DependencyProperty"></see> to apply the <see cref="P:System.Windows.Setter.Value"></see> to.</param>
			<param name="value">The value to apply to the property.</param>
		</member>
		<member name="M:System.Windows.Setter.#ctor(System.Windows.DependencyProperty,System.Object,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Setter"></see> class with the specified property, value, and target name.</summary>
			<param name="targetName">The name of the child node this <see cref="T:System.Windows.Setter"></see> is intended for.</param>
			<param name="property">The <see cref="T:System.Windows.DependencyProperty"></see> to apply the <see cref="P:System.Windows.Setter.Value"></see> to.</param>
			<param name="value">The value to apply to the property.</param>
		</member>
		<member name="P:System.Windows.Setter.Property">
			<summary>Gets or sets the property to which the <see cref="P:System.Windows.Setter.Value"></see> will be applied.</summary>
			<returns>A <see cref="T:System.Windows.DependencyProperty"></see> to which the <see cref="P:System.Windows.Setter.Value"></see> will be applied. The default value is null.</returns>
			<exception cref="T:System.ArgumentException">The specified <see cref="P:System.Windows.Setter.Property"></see> property cannot be read-only.</exception>
			<exception cref="T:System.ArgumentNullException">The <see cref="P:System.Windows.Setter.Property"></see> property cannot be null.</exception>
			<exception cref="T:System.InvalidOperationException">If the specified <see cref="P:System.Windows.Setter.Value"></see> is not valid for the type of the specified <see cref="P:System.Windows.Setter.Property"></see>.</exception>
		</member>
		<member name="P:System.Windows.Setter.TargetName">
			<summary>Gets or sets the name of the object this <see cref="T:System.Windows.Setter"></see> is intended for.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Setter.Value">
			<summary>Gets or sets the value to apply to the property that is specified by this <see cref="T:System.Windows.Setter"></see>.</summary>
			<returns>The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>.</returns>
			<exception cref="T:System.ArgumentException">If the specified <see cref="P:System.Windows.Setter.Value"></see> is set to <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>.</exception>
		</member>
		<member name="T:System.Windows.SetterBase">
			<summary>Represents the base class for value setters. This class is abstract.</summary>
		</member>
		<member name="P:System.Windows.SetterBase.IsSealed">
			<summary>Gets a value that indicates whether this object is in an immutable state.</summary>
			<returns>true if this object is in an immutable state; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.SetterBaseCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.SetterBase"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.SetterBaseCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.SetterBaseCollection"></see> class.</summary>
		</member>
		<member name="P:System.Windows.SetterBaseCollection.IsSealed">
			<summary>Gets a value that indicates whether this object is in a read-only state.</summary>
			<returns>true if this object is in a read-only state and cannot be changed; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.ShutdownMode">
			<summary>Specifies how an application will shutdown. Used by the <see cref="P:System.Windows.Application.ShutdownMode"></see> property.</summary>
		</member>
		<member name="F:System.Windows.ShutdownMode.OnExplicitShutdown">
			<summary>An application shuts down only when <see cref="M:System.Windows.Application.Shutdown"></see> is called.</summary>
		</member>
		<member name="F:System.Windows.ShutdownMode.OnLastWindowClose">
			<summary>An application shuts down when either the last window closes, or <see cref="M:System.Windows.Application.Shutdown"></see> is called.</summary>
		</member>
		<member name="F:System.Windows.ShutdownMode.OnMainWindowClose">
			<summary>An application shuts down when either the main window closes, or <see cref="M:System.Windows.Application.Shutdown"></see> is called.</summary>
		</member>
		<member name="T:System.Windows.SizeChangedEventArgs">
			<summary>Provides data related to the <see cref="E:System.Windows.FrameworkElement.SizeChanged"></see> event. </summary>
		</member>
		<member name="M:System.Windows.SizeChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Defines and invokes the delegate used to handle the event.</summary>
			<param name="genericTarget">The target object to call the handler on.</param>
			<param name="genericHandler">Calls the generic delegate in a type-specific way.</param>
		</member>
		<member name="P:System.Windows.SizeChangedEventArgs.HeightChanged">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.FrameworkElement.Height"></see> component of the size changed.</summary>
			<returns>true if the <see cref="P:System.Windows.FrameworkElement.Height"></see> component of the size changed; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SizeChangedEventArgs.NewSize">
			<summary>Gets the new <see cref="T:System.Windows.Size"></see> of the object.</summary>
			<returns>The new <see cref="T:System.Windows.Size"></see> of the object.</returns>
		</member>
		<member name="P:System.Windows.SizeChangedEventArgs.PreviousSize">
			<summary>Gets the previous <see cref="T:System.Windows.Size"></see> of the object. </summary>
			<returns>The previous <see cref="T:System.Windows.Size"></see> of the object.</returns>
		</member>
		<member name="P:System.Windows.SizeChangedEventArgs.WidthChanged">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.FrameworkElement.Width"></see> component of the size changed.</summary>
			<returns>true if the <see cref="P:System.Windows.FrameworkElement.Width"></see> component of the size changed; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.SizeChangedEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.FrameworkElement.SizeChanged"></see> event.</summary>
		</member>
		<member name="T:System.Windows.StartupEventArgs">
			<summary>Contains the arguments for the <see cref="P:System.Windows.Application.StartupUri"></see> event.</summary>
		</member>
		<member name="P:System.Windows.StartupEventArgs.Args">
			<summary>Gets command line arguments that were passed to the application from either the command prompt or the desktop.</summary>
			<returns>A string array that contains the command line arguments that were passed to the application from either the command prompt or the desktop. If no command line arguments were passed, the string array as zero items.</returns>
		</member>
		<member name="T:System.Windows.StartupEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Application.Startup"></see> event.</summary>
		</member>
		<member name="T:System.Windows.StaticResourceExtension">
			<summary>Implements a markup extension that supports static (load time) resource references made from XAML. </summary>
		</member>
		<member name="M:System.Windows.StaticResourceExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.StaticResourceExtension"></see> class.</summary>
		</member>
		<member name="M:System.Windows.StaticResourceExtension.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.StaticResourceExtension"></see> class, with the provided initial key.</summary>
			<param name="resourceKey">The key of the resource that this markup extension references.</param>
		</member>
		<member name="M:System.Windows.StaticResourceExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.StaticResourceExtension"></see>, this is the object found in a resource dictionary in the current parent chain that is keyed by the <see cref="P:System.Windows.StaticResourceExtension.ResourceKey"></see>.</summary>
			<returns>The object value to set on the property where the extension is applied. </returns>
			<param name="serviceProvider">Object that can provide services for the markup extension.</param>
			<exception cref="T:System.InvalidOperationException">serviceProvider was null, or failed to implement <see cref="T:System.Windows.Markup.IProvideValueTarget"></see>.</exception>
		</member>
		<member name="P:System.Windows.StaticResourceExtension.ResourceKey">
			<summary>Gets or sets the key value passed by this static resource reference. They key is used  to return the object matching that key in resource dictionaries. </summary>
			<returns>The resource key for a resource.</returns>
		</member>
		<member name="T:System.Windows.Style">
			<summary>Enables the sharing of properties, resources, and event handlers between instances of a type.</summary>
		</member>
		<member name="M:System.Windows.Style.#ctor">
			<summary>Initializes a new instance of the Style class. </summary>
		</member>
		<member name="M:System.Windows.Style.#ctor(System.Type)">
			<summary>Initializes a new instance of the Style class to use on the specified Type. </summary>
			<param name="targetType">The type to which the style will apply.</param>
		</member>
		<member name="M:System.Windows.Style.#ctor(System.Type,System.Windows.Style)">
			<summary>Initializes a new instance of the Style class to use on the specified Type and based on the specified Style. </summary>
			<param name="targetType">The type to which the style will apply.</param>
			<param name="basedOn">The style to base this style on.</param>
		</member>
		<member name="M:System.Windows.Style.GetHashCode">
			<summary>Returns the hash code for this Style.    </summary>
			<returns>The hash code for this Style.   </returns>
		</member>
		<member name="M:System.Windows.Style.RegisterName(System.String,System.Object)">
			<summary>Registers a new name-object pair in the current namescope.</summary>
			<param name="scopedElement">The object to map to the specified name.</param>
			<param name="name">The name to register.</param>
		</member>
		<member name="M:System.Windows.Style.Seal">
			<summary>Locks this style and all factories and triggers so they cannot be changed.</summary>
		</member>
		<member name="M:System.Windows.Style.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Style.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Style.UnregisterName(System.String)">
			<summary>Removes a name-object mapping from the namescope.</summary>
			<param name="name">The name of the mapping to remove.</param>
		</member>
		<member name="P:System.Windows.Style.BasedOn">
			<summary>Gets or sets a defined style that is the basis of the current style.</summary>
			<returns>A defined style that is the basis of the current style. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Style.IsSealed">
			<summary>Gets a value that indicates whether the style is read-only and cannot be changed.</summary>
			<returns>true if the style is sealed; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.Style.Resources">
			<summary>Gets or sets the collection of resources that can be used within the scope of this style.</summary>
			<returns>The resources that can be used within the scope of this style.</returns>
		</member>
		<member name="P:System.Windows.Style.Setters">
			<summary>Gets a collection of <see cref="T:System.Windows.Setter"></see> and <see cref="T:System.Windows.EventSetter"></see> objects.</summary>
			<returns>a collection of <see cref="T:System.Windows.Setter"></see> and <see cref="T:System.Windows.EventSetter"></see> objects. The default is an empty collection.</returns>
		</member>
		<member name="P:System.Windows.Style.TargetType">
			<summary>Gets or sets the type for which this style is intended.</summary>
			<returns>The target type for this style.</returns>
		</member>
		<member name="P:System.Windows.Style.Triggers">
			<summary>Gets a collection of <see cref="T:System.Windows.TriggerBase"></see> objects that apply property values based on specified conditions.</summary>
			<returns>A collection of <see cref="T:System.Windows.TriggerBase"></see> objects. The default is an empty collection.</returns>
		</member>
		<member name="T:System.Windows.StyleTypedPropertyAttribute">
			<summary>Represents an attribute that is applied to the class definition and determines the <see cref="P:System.Windows.Style.TargetType"></see>s of the properties that are of type <see cref="T:System.Windows.Style"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.StyleTypedPropertyAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.StyleTypedPropertyAttribute"></see> class.</summary>
		</member>
		<member name="P:System.Windows.StyleTypedPropertyAttribute.Property">
			<summary>Gets or sets the name of the property that is of type <see cref="T:System.Windows.Style"></see>.</summary>
			<returns>The name of the property that is of type <see cref="T:System.Windows.Style"></see>.</returns>
		</member>
		<member name="P:System.Windows.StyleTypedPropertyAttribute.StyleTargetType">
			<summary>Gets or sets the <see cref="P:System.Windows.Style.TargetType"></see> of the <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property"></see> this attribute is specifying.</summary>
			<returns>The <see cref="P:System.Windows.Style.TargetType"></see> of the <see cref="P:System.Windows.StyleTypedPropertyAttribute.Property"></see> this attribute is specifying.</returns>
		</member>
		<member name="T:System.Windows.SystemColors">
			<summary>Contains system colors, system brushes, and system resource keys that correspond to system display elements. </summary>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveBorderBrush">
			<summary>Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the color of the active window's border. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the color of the active window's border. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveBorderBrushKey">
			<summary> Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> used to paint the active window's border. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> used to paint the active window's border. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveBorderColor">
			<summary>Gets a <see cref="T:System.Windows.Media.Color"></see> structure that is the color of the active window's border. </summary>
			<returns>The color of the active window's border.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveBorderColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of the active window's border. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of the active window's border.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionBrush">
			<summary> Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the color of the background of the active window's title bar. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the background color of the active window's title bar. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> used to paint the background of the active window's title bar.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> used to paint the background of the active window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionColor">
			<summary> Gets a <see cref="T:System.Windows.Media.Color"></see> structure that is the background color of the active window's title bar. </summary>
			<returns>The background color of the active window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of the active window's title bar.</summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of the active window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionTextBrush">
			<summary> Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the color of the text in the active window's title bar. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the background color of the color of the text in the active window's title bar. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionTextBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text in the active window's title bar. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text in the active window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionTextColor">
			<summary> Gets a Color structure that is the color of the text in the active window's title bar. </summary>
			<returns>The color of the active window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ActiveCaptionTextColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of the text in the active window's title bar. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of the text in the active window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.AppWorkspaceBrush">
			<summary> Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the color of the application workspace. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the color of the application workspace. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.AppWorkspaceBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the application workspace.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the application workspace. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.AppWorkspaceColor">
			<summary> Gets a Color structure that is the color of the application workspace. </summary>
			<returns>The color of the application workspace.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.AppWorkspaceColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of the application workspace. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of the application workspace.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlBrush">
			<summary> Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the face color of a three-dimensional display element. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the face color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the face of three-dimensional display elements.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the face of three-dimensional display elements. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlColor">
			<summary> Gets a Color structure that is the face color of a three-dimensional display element. </summary>
			<returns>The face color of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the face <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element. </summary>
			<returns>The resource key for the face <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkBrush">
			<summary> Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the shadow color of a three-dimensional display element. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the shadow color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the shadow of a three-dimensional display elements.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the shadow of three-dimensional display elements. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkColor">
			<summary> Gets a Color structure that is the shadow color of a three-dimensional display element. </summary>
			<returns>The shadow color of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the shadow <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element. </summary>
			<returns>The resource key for the shadow <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkDarkBrush">
			<summary> Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the dark shadow color of a three-dimensional display element. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the dark shadow color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkDarkBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the dark shadow of three-dimensional display elements. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the dark shadow of three-dimensional display elements. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkDarkColor">
			<summary> Gets a Color structure that is the dark shadow color of a three-dimensional display element. </summary>
			<returns>The dark shadow color of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlDarkDarkColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the dark shadow <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element. </summary>
			<returns>The resource key for the dark shadow <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightBrush">
			<summary> Gets a <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the light color of a three-dimensional display element. </summary>
			<returns>A <see cref="T:System.Windows.Media.SolidColorBrush"></see> with its <see cref="P:System.Windows.Media.SolidColorBrush.Color"></see> set to the light color of a three-dimensional display element. The returned brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the light area of three-dimensional display elements. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the light area of three-dimensional display elements. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightColor">
			<summary> Gets a Color structure that is the light color of a three-dimensional display element. </summary>
			<returns>The light color of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the highlight <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element. </summary>
			<returns>The resource key for the highlight <see cref="T:System.Windows.Media.Color"></see> of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightLightBrush">
			<summary> Gets a SolidColorBrush object that is the highlight color of a three-dimensional display element. </summary>
			<returns>The highlight color of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightLightBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the highlight of three-dimensional display elements. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the highlight of three-dimensional display elements. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightLightColor">
			<summary> Gets a Color structure that is the highlight color of a three-dimensional display element. </summary>
			<returns>The highlight color of a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlLightLightColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of the active window's border. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of the active window's border.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlTextBrush">
			<summary> Gets a SolidColorBrush object that is the color of text in a three-dimensional display element. </summary>
			<returns>The color of text in a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlTextBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints text in three-dimensional display elements. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints text in three-dimensional display elements. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlTextColor">
			<summary> Gets a Color structure that is the color of text in a three-dimensional display element. </summary>
			<returns>The color of text in a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ControlTextColorKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of text in a three-dimensional display element.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of text in a three-dimensional display element.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.DesktopBrush">
			<summary> Gets a SolidColorBrush object that is the color of the desktop. </summary>
			<returns>The color of the desktop.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.DesktopBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the desktop. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the desktop. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.DesktopColor">
			<summary> Gets a Color structure that is the color of the desktop. </summary>
			<returns>The color of the desktop.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.DesktopColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of the desktop. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of the desktop.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientActiveCaptionBrush">
			<summary> Gets a SolidColorBrush object that is the right side color in the gradient of an active window's title bar. </summary>
			<returns>The right side color in the gradient.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientActiveCaptionBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the color of the right side of the gradient of an active window's title bar. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the color of the right side of the gradient of an active window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientActiveCaptionColor">
			<summary> Gets a Color structure that is the right side color in the gradient of an active window's title bar. </summary>
			<returns>The right side color in the gradient.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientActiveCaptionColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the right-side <see cref="T:System.Windows.Media.Color"></see> in the gradient of an active window's title bar. </summary>
			<returns>The resource key for the right-side <see cref="T:System.Windows.Media.Color"></see> in the gradient of an active window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrush">
			<summary> Gets a SolidColorBrush object that is the right side color in the gradient of an inactive window's title bar. </summary>
			<returns>The right side color in the gradient.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientInactiveCaptionBrushKey">
			<summary> Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that is the color of the right side of the gradient of an inactive window's title bar.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> used to paint the background of the inactive window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientInactiveCaptionColor">
			<summary> Gets a Color structure that is the right side color in the gradient of an inactive window's title bar. </summary>
			<returns>The right side color in the gradient.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GradientInactiveCaptionColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the right-side <see cref="T:System.Windows.Media.Color"></see> in the gradient of an inactive window's title bar. </summary>
			<returns>The resource key for the right-side <see cref="T:System.Windows.Media.Color"></see> in the gradient of an inactive window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GrayTextBrush">
			<summary> Gets a SolidColorBrush object that is the color of disabled text. </summary>
			<returns>The color of disabled text.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GrayTextBrushKey">
			<summary> Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints disabled text. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints disabled text. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GrayTextColor">
			<summary> Gets a Color structure that is the color of disabled text. </summary>
			<returns>The color of disabled text.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.GrayTextColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of disabled text. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of disabled text.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightBrush">
			<summary> Gets a SolidColorBrush object that paints the background of selected items. </summary>
			<returns>The background color of selected items.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of selected items. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of selected items. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightColor">
			<summary> Gets a Color structure that is the background color of selected items. </summary>
			<returns>The background color of selected items.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightColorKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of selected items. </summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of selected items.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightTextBrush">
			<summary> Gets a SolidColorBrush object that is the color of the text of selected items. </summary>
			<returns>The color of the text of selected items.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightTextBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text of selected items. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text of selected items. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightTextColor">
			<summary> Gets a Color structure that is the color of the text of selected items. </summary>
			<returns>The color of the text of selected items.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HighlightTextColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of a selected item's text. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of a selected item's text.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HotTrackBrush">
			<summary> Gets a SolidColorBrush object that is the color used to designate a hot-tracked item. </summary>
			<returns>The color used to designate a hot-tracked item.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HotTrackBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints hot-tracked items. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints hot-tracked items. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HotTrackColor">
			<summary> Gets a Color structure that is the color used to designate a hot-tracked item. </summary>
			<returns>The color used to designate a hot-tracked item.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.HotTrackColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> that designates a hot-tracked item. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> that designates a hot-tracked item.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveBorderBrush">
			<summary> Gets a SolidColorBrush object that is the color of an inactive window's border. </summary>
			<returns>The color of an inactive window's border.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveBorderBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the border of inactive windows. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the border of inactive windows. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveBorderColor">
			<summary> Gets a Color structure that is the color of an inactive window's border. </summary>
			<returns>The color of an inactive window's border.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveBorderColorKey">
			<summary> Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of an inactive window's border.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of an inactive window's border.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionBrush">
			<summary> Gets a SolidColorBrush object that is the background color of an inactive window's title bar. </summary>
			<returns>The background color of an inactive window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of inactive windows' title bars. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of inactive windows' title bars. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionColor">
			<summary> Gets a Color structure that is the background color of an inactive window's title bar. </summary>
			<returns>The background color of an inactive window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of an inactive window's title bar. </summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of an inactive window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionTextBrush">
			<summary> Gets a SolidColorBrush object that is the color of the text of an inactive window's title bar. </summary>
			<returns>The color of the text of an inactive window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionTextBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text of an inactive window's title bar. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text of an inactive window's title bar. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionTextColor">
			<summary> Gets a Color structure that is the color of the text of an inactive window's title bar. </summary>
			<returns>The color of the text of an inactive window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InactiveCaptionTextColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of the text of an inactive window's title bar.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of the text of an inactive window's title bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoBrush">
			<summary> Gets a SolidColorBrush object that is the background color for the ToolTip control. </summary>
			<returns>The background color for the ToolTip control.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of the <see cref="T:System.Windows.Controls.ToolTip"></see> control.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of the <see cref="T:System.Windows.Controls.ToolTip"></see> control. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoColor">
			<summary> Gets a Color structure that is the background color for the ToolTip control. </summary>
			<returns>The background color for the ToolTip control.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoColorKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of the <see cref="T:System.Windows.Controls.ToolTip"></see> control.</summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of the <see cref="T:System.Windows.Controls.ToolTip"></see> control.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoTextBrush">
			<summary> Gets a SolidColorBrush object that is the text color for the ToolTip control. </summary>
			<returns>The text color for the ToolTip control.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoTextBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text in a <see cref="T:System.Windows.Controls.ToolTip"></see> control. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text in a <see cref="T:System.Windows.Controls.ToolTip"></see> control. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoTextColor">
			<summary> Gets a Color structure that is the text color for the ToolTip control. </summary>
			<returns>The text color for the ToolTip control.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.InfoTextColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of the text in a <see cref="T:System.Windows.Controls.ToolTip"></see> control. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of the text in a <see cref="T:System.Windows.Controls.ToolTip"></see> control.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuBarBrush">
			<summary> Gets a SolidColorBrush object that is the background color for the menu bar. </summary>
			<returns>The background color for the menu bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuBarBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of menu bars. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of menu bars. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuBarColor">
			<summary> Gets a Color structure that is the background color for the menu bar. </summary>
			<returns>The background color for the menu bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuBarColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of a menu bar. </summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of a menu bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuBrush">
			<summary> Gets a SolidColorBrush object that is the color of a menu's background. </summary>
			<returns>The color of a menu's background.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of menus. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of menus. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuColor">
			<summary> Gets a Color structure that is the color of a menu's background. </summary>
			<returns>The color of a menu's background.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of a menu. </summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of a menu.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuHighlightBrush">
			<summary> Gets a SolidColorBrush object that is the color used to highlight menu items. </summary>
			<returns>The color used to highlight menu items.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuHighlightBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints highlighted menu items. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints highlighted menu items. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuHighlightColor">
			<summary> Gets a Color structure that is the color used to highlight menu items. </summary>
			<returns>The color used to highlight menu items.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuHighlightColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of a highlighted menu item. </summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of a highlighted menu item.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuTextBrush">
			<summary> Gets a SolidColorBrush object that is the color of a menu's text. </summary>
			<returns>The color of a menu's text.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuTextBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints menu text. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints menu text. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuTextColor">
			<summary> Gets a Color structure that is the color of a menu's text. </summary>
			<returns>The color of a menu's text.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.MenuTextColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of a menu's text. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of a menu's text.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ScrollBarBrush">
			<summary> Gets a SolidColorBrush object that is the background color of a scroll bar. </summary>
			<returns>The background color of a scroll bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ScrollBarBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of scroll bars. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of scroll bars. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ScrollBarColor">
			<summary> Gets a Color structure that is the background color of a scroll bar. </summary>
			<returns>The background color of a scroll bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.ScrollBarColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of a scroll bar. </summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of a scroll bar.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowBrush">
			<summary> Gets a SolidColorBrush object that is the background color in the client area of a window. </summary>
			<returns>The background color in the client area of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of a window's client area. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the background of a window's client area. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowColor">
			<summary> Gets a Color structure that is the background color in the client area of a window. </summary>
			<returns>The background color in the client area of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the background <see cref="T:System.Windows.Media.Color"></see> of a window's client area. </summary>
			<returns>The resource key for the background <see cref="T:System.Windows.Media.Color"></see> of a window's client area.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowFrameBrush">
			<summary> Gets a SolidColorBrush object that is the color of a window frame. </summary>
			<returns>The color of a window frame.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowFrameBrushKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints window frames. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints window frames. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowFrameColor">
			<summary> Gets a Color structure that is the color of a window frame. </summary>
			<returns>The color of a window frame.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowFrameColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of a window frame. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of a window frame.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowTextBrush">
			<summary> Gets a SolidColorBrush object that is the color of the text in the client area of a window. </summary>
			<returns>The color of the text in the client area of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowTextBrushKey">
			<summary>  Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text in the client area of a window.</summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.SolidColorBrush"></see> that paints the text in the client area of a window. This brush's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true, so it cannot be modified.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowTextColor">
			<summary> Gets a Color structure that is the color of the text in the client area of a window. </summary>
			<returns>The color of the text in the client area of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemColors.WindowTextColorKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="T:System.Windows.Media.Color"></see> of text in a window's client area. </summary>
			<returns>The resource key for the <see cref="T:System.Windows.Media.Color"></see> of text in a window's client area.</returns>
		</member>
		<member name="T:System.Windows.SystemFonts">
			<summary>Contains properties that expose the system resources that concern fonts. </summary>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontFamily">
			<summary>Gets the metric that determines the font family of the caption of the nonclient area of a nonminimized window. </summary>
			<returns>A font family.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontFamilyKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaptionFontFamily property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontSize">
			<summary>Gets the metric that determines the caption font-size for the nonclient area of a nonminimized window. </summary>
			<returns>A font size.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontSizeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaptionFontSize property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontStyle">
			<summary>Gets the metric that determines the caption font-style for the nonclient area of a nonminimized window. </summary>
			<returns>A font style.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaptionFontStyle property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontTextDecorations">
			<summary>Gets the metric that determines the caption text-decorations for the nonclient area of a nonminimized window. </summary>
			<returns>A collection of text decorations.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontTextDecorationsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaptionFontTextDecorations property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontWeight">
			<summary>Gets the metric that determines the caption font-weight for the nonclient area of a nonminimized window. </summary>
			<returns>A font weight.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.CaptionFontWeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaptionFontWeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontFamily">
			<summary>Gets the font family from the logical font information for the current icon-title font.  </summary>
			<returns>A font family.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontFamilyKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconFontFamily property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontSize">
			<summary>Gets the font size from the logical font information for the current icon-title font. </summary>
			<returns>A font size.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontSizeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconFontSize property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontStyle">
			<summary>Gets the font style from the logical font information for the current icon-title font. </summary>
			<returns>A font style.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconFontStyle property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontTextDecorations">
			<summary>Gets the text decorations from the logical font information for the current icon-title font. </summary>
			<returns>A collection of text decorations.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontTextDecorationsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconFontTextDecorations property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontWeight">
			<summary>Gets the font weight from the logical font information for the current icon-title font. </summary>
			<returns>A font weight.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.IconFontWeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconFontWeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontFamily">
			<summary>Gets the metric that determines the font family for menu text. </summary>
			<returns>A font family.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontFamilyKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuFontFamily property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontSize">
			<summary>Gets the metric that determines the font size of menu text. </summary>
			<returns>A font size.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontSizeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuFontSize property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontStyle">
			<summary>Gets the metric that determines the font style for menu text. </summary>
			<returns>A font style.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuFontStyle property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontTextDecorations">
			<summary>Gets the metric that determines the text decorations for menu text. </summary>
			<returns>A collection of text decorations.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontTextDecorationsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuFontTextDecorations property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontWeight">
			<summary>Gets the metric that determines the font weight for menu text. </summary>
			<returns>A font weight.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MenuFontWeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuFontWeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontFamily">
			<summary>Gets the metric that determines the font family for message box text. </summary>
			<returns>A font family.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontFamilyKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MessageFontFamily property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontSize">
			<summary>Gets the metric that determines the font size of message box text. </summary>
			<returns>A font size.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontSizeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MessageFontSize property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontStyle">
			<summary>Gets the metric that determines the font style for message box text. </summary>
			<returns>A font style.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MessageFontStyle property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontTextDecorations">
			<summary>Gets the metric that determines the decorations for message box text. </summary>
			<returns>A collection of text decorations.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontTextDecorationsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MessageFontTextDecorations property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontWeight">
			<summary>Gets the metric that determines the font weight for message box text. </summary>
			<returns>A font weight.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.MessageFontWeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MessageFontWeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontFamily">
			<summary>Gets the metric that determines the font family of the small-caption text for the nonclient area of a nonminimized window. </summary>
			<returns>A font family.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontFamilyKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallCaptionFontFamily property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontSize">
			<summary>Gets the metric that determines the font size of the small-caption text for the nonclient area of a nonminimized window. </summary>
			<returns>A font size.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontSizeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallCaptionFontSize property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontStyle">
			<summary>Gets the metric that determines the font style of the small-caption text for the nonclient area of a nonminimized window. </summary>
			<returns>A font style.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallCaptionFontStyle property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorations">
			<summary>Gets the metric that determines the decorations of the small-caption text for the nonclient area of a nonminimized window. </summary>
			<returns>A collection of text decorations.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontTextDecorationsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallCaptionFontTextDecorations property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontWeight">
			<summary>Gets the metric that determines the font weight of the small-caption text for the nonclient area of a nonminimized window. </summary>
			<returns>A font weight.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.SmallCaptionFontWeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallCaptionFontWeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontFamily">
			<summary>Gets the metric that determines the font family of the text used in status bars and ToolTips for the nonclient area of a nonminimized window. </summary>
			<returns>A font family.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontFamilyKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the StatusFontFamily property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontSize">
			<summary>Gets the metric that determines the font size of the text used in status bars and ToolTips for the nonclient area of a nonminimized window. </summary>
			<returns>A font size.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontSizeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the StatusFontSize property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontStyle">
			<summary>Gets the metric that determines the font style of the text used in status bars and ToolTips for the nonclient area of a nonminimized window. </summary>
			<returns>A font style.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the StatusFontStyle property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontTextDecorations">
			<summary>Gets the metric that determines the decorations of the text used in status bars and ToolTips for the nonclient area of a nonminimized window. </summary>
			<returns>A collection of text decoration.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontTextDecorationsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the StatusFontTextDecorations property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontWeight">
			<summary>Gets the metric that determines the font weight of the text used in status bars and ToolTips for the nonclient area of a nonminimized window. </summary>
			<returns>A font weight.</returns>
		</member>
		<member name="P:System.Windows.SystemFonts.StatusFontWeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the StatusFontWeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="T:System.Windows.SystemParameters">
			<summary>Contains properties that you can use to query system settings. </summary>
		</member>
		<member name="P:System.Windows.SystemParameters.Border">
			<summary>Gets the border multiplier factor that determines the width of a window's sizing border. </summary>
			<returns>A multiplier.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.BorderKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the Border property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.BorderWidth">
			<summary>Gets the metric that determines the border width of the nonclient area of a nonminimized window. </summary>
			<returns>A border width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.BorderWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the BorderWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CaptionHeight">
			<summary>Gets the metric that determines the caption height for the nonclient area of a nonminimized window. </summary>
			<returns>The caption height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CaptionHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaptionHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CaptionWidth">
			<summary>Gets the metric that determines the caption width for the nonclient area of a nonminimized window. </summary>
			<returns>The caption width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CaptionWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaptionWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CaretWidth">
			<summary>Gets the caret width, in pixels, for edit controls. </summary>
			<returns>The caret width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CaretWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CaretWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ClientAreaAnimation">
			<summary>Gets a value indicating whether the client area animation feature is enabled.</summary>
			<returns>A Boolean value; true if client area animation is enabled, false otherwise.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ClientAreaAnimationKey">
			<summary>Gets a <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="P:System.Windows.SystemParameters.ClientAreaAnimation"></see> property.</summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ComboBoxAnimation">
			<summary>Gets a value indicating whether the slide-open effect for combo boxes is enabled. </summary>
			<returns>true for enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ComboBoxAnimationKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ComboBoxAnimation property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimation">
			<summary>Gets the system value of the PopupAnimation property for combo boxes. </summary>
			<returns>A pop-up animation value.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ComboBoxPopupAnimationKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ComboBoxPopupAnimation property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CursorHeight">
			<summary>Gets the height, in pixels, of a cursor. </summary>
			<returns>The cursor height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CursorHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CursorHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CursorShadow">
			<summary>Gets a value indicating whether the cursor has a shadow around it. </summary>
			<returns>true if the shadow is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CursorShadowKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CursorShadow property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CursorWidth">
			<summary>Gets the width, in pixels, of a cursor. </summary>
			<returns>The cursor width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.CursorWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the CursorWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.DragFullWindows">
			<summary>Gets a value indicating whether dragging of full windows is enabled. </summary>
			<returns>true if dragging of full windows is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.DragFullWindowsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the DragFullWindows property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.DropShadow">
			<summary>Gets a value indicating whether the drop shadow effect is enabled. </summary>
			<returns>true if the drop shadow effect is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.DropShadowKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the DropShadow property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight">
			<summary>Gets the height of the horizontal border of the frame around a window. </summary>
			<returns>The border height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FixedFrameHorizontalBorderHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth">
			<summary>Gets the width of the vertical border of the frame around a window. </summary>
			<returns>The border width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FixedFrameVerticalBorderWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FlatMenu">
			<summary>Gets a value indicating whether native menus appear as a flat menu.  </summary>
			<returns>true if the flat menu appearance is set; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FlatMenuKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FlatMenu property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusBorderHeight">
			<summary>Gets the height, in pixels, of the upper and lower edges of the focus rectangle.  </summary>
			<returns>The edge height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusBorderHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FocusBorderHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusBorderWidth">
			<summary>Gets the width, in pixels, of the left and right edges of the focus rectangle.  </summary>
			<returns>The edge width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusBorderWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FocusBorderWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight">
			<summary>Gets the height of the upper and lower edges of the focus rectangle.  </summary>
			<returns>The edge height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusHorizontalBorderHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FocusHorizontalBorderHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidth">
			<summary>Gets the width of the left and right edges of the focus rectangle.  </summary>
			<returns>The edge width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusVerticalBorderWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FocusVerticalBorderWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FocusVisualStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FocusVisualStyle property. </summary>
			<returns>The resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ForegroundFlashCount">
			<summary>Gets the number of times the Set Foreground Window flashes the taskbar button when rejecting a foreground switch request.</summary>
			<returns>A flash count.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ForegroundFlashCountKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ForegroundFlashCount property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeight">
			<summary>Gets the height, in pixels, of the client area for a full-screen window on the primary display monitor.  </summary>
			<returns>The height of the client area.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FullPrimaryScreenHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FullPrimaryScreenHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidth">
			<summary>Gets the width, in pixels, of the client area for a full-screen window on the primary display monitor.  </summary>
			<returns>The width of the client area.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.FullPrimaryScreenWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the FullPrimaryScreenWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.GradientCaptions">
			<summary>Gets a value indicating whether the gradient effect for window title bars is enabled. </summary>
			<returns>true if the gradient effect is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.GradientCaptionsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the GradientCaptions property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HighContrast">
			<summary>Gets information about the High Contrast accessibility feature. </summary>
			<returns>true if the HIGHCONTRASTON option is selected; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HighContrastKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the HighContrast property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth">
			<summary>Gets the width, in pixels, of the arrow bitmap on a horizontal scroll bar. </summary>
			<returns>The width of the arrow bitmap.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the HorizontalScrollBarButtonWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeight">
			<summary>Gets the height of a horizontal scroll bar, in pixels. </summary>
			<returns>The height of the scroll bar.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HorizontalScrollBarHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the HorizontalScrollBarHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth">
			<summary>Gets the width, in pixels, of the Thumb in a horizontal scroll bar. </summary>
			<returns>The width of the thumb.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the HorizontalScrollBarThumbWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HotTracking">
			<summary>Gets a value indicating whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled. </summary>
			<returns>true if hot tracking is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.HotTrackingKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the HotTracking property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconGridHeight">
			<summary>Gets the height of a grid in which a large icon will fit. </summary>
			<returns>The grid height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconGridHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconGridHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconGridWidth">
			<summary>Gets the width of a grid that a large icon will fit into. </summary>
			<returns>The grid width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconGridWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconGridWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconHeight">
			<summary>Gets the default height of an icon. </summary>
			<returns>The icon height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconHorizontalSpacing">
			<summary>Gets the width, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view. </summary>
			<returns>The width of an icon cell.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconHorizontalSpacingKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconHorizontalSpacing property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconTitleWrap">
			<summary>Gets a value indicating whether icon-title wrapping is enabled. </summary>
			<returns>true if icon-title wrapping is enabled; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconTitleWrapKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconTitleWrap property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconVerticalSpacing">
			<summary>Gets the height, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view. </summary>
			<returns>The height of an icon cell.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconVerticalSpacingKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconVerticalSpacing property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconWidth">
			<summary>Gets the default width of an icon. </summary>
			<returns>The icon width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IconWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IconWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsImmEnabled">
			<summary>Gets a value that indicates whether the system is ready to use a Unicode-based Input Method Editor (IME) on a Unicode application.  </summary>
			<returns>true if the Input Method Manager/Input Method Editor features are enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsImmEnabledKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsImmEnabled property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMediaCenter">
			<summary>Gets a value that indicates whether the current operating system is the Microsoft Windows XP Media Center Edition. </summary>
			<returns>true if the current operating system is Windows XP Media Center Edition; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMediaCenterKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsMediaCenter property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMenuDropRightAligned">
			<summary>Gets a value that indicates whether drop-down menus are right-aligned with the corresponding menu item. </summary>
			<returns>true if drop-down menus are right-aligned; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMenuDropRightAlignedKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsMenuDropRightAligned property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMiddleEastEnabled">
			<summary>Gets a value that indicates whether the system is enabled for Hebrew and Arabic languages. </summary>
			<returns>true if the system is enabled for Hebrew and Arabic languages; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMiddleEastEnabledKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsMiddleEastEnabled property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMousePresent">
			<summary>Gets a value that indicates whether a mouse is installed. </summary>
			<returns>true if a mouse is installed; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMousePresentKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsMousePresent property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMouseWheelPresent">
			<summary>Gets a value that indicates whether the installed mouse has a vertical scroll wheel. </summary>
			<returns>true if the installed mouse has a vertical scroll wheel; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsMouseWheelPresentKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsMouseWheelPresent property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsPenWindows">
			<summary>Gets a value that indicates whether Microsoft Windows for Pen Computing extensions are installed. </summary>
			<returns>true if Pen Computing extensions are installed; otherwise, false. </returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsPenWindowsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsPenWindows property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsRemotelyControlled">
			<summary>Gets a value that indicates whether the current session is remotely controlled. </summary>
			<returns>true if the current session is remotely controlled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsRemotelyControlledKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsRemotelyControlled property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsRemoteSession">
			<summary>Gets a value that indicates whether the calling process is associated with a Terminal Services client session. </summary>
			<returns>true if the calling process is associated with a Terminal Services client session; false if the calling process is associated with the Terminal Server console session.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsRemoteSessionKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsRemoteSession property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsSlowMachine">
			<summary>Gets a value that indicates whether the computer has a low-end (slow) processor. </summary>
			<returns>true if the computer has a low-end (slow) processor; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsSlowMachineKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsSlowMachine property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsTabletPC">
			<summary>Gets a value that indicates whether the current operating system is Microsoft Windows XP Tablet PC Edition. </summary>
			<returns>true if the current operating system is Windows XP Tablet PC Edition; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.IsTabletPCKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the IsTabletPC property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KanjiWindowHeight">
			<summary>Gets a value that indicates the height, in pixels, of the kanji window at the bottom of the screen for systems that use double-byte characters.  </summary>
			<returns>The window height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KanjiWindowHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the KanjiWindowHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardCues">
			<summary>Gets a value indicating whether menu access keys are always underlined. </summary>
			<returns>true if menu access keys are always underlined; false if they are underlined only when the menu is activated by the keyboard.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardCuesKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the KeyboardCues property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardDelay">
			<summary>Gets the keyboard repeat-delay setting, which is a value in the range from 0 (approximately 250 milliseconds delay) through 3 (approximately 1 second delay). </summary>
			<returns>The keyboard repeat-delay setting.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardDelayKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the KeyboardDelay property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardPreference">
			<summary>Gets a value indicating whether the user relies on the keyboard instead of the mouse, and whether the user wants applications to display keyboard interfaces that are typically hidden. </summary>
			<returns>true if the user relies on the keyboard; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardPreferenceKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the KeyboardPreference property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardSpeed">
			<summary>Gets the keyboard repeat-speed setting, which is a value in the range from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second). </summary>
			<returns>The keyboard repeat-speed setting.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.KeyboardSpeedKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the KeyboardSpeed property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ListBoxSmoothScrolling">
			<summary>Gets a value indicating whether the smooth-scrolling effect for list boxes is enabled. </summary>
			<returns>true if the smooth-scrolling effect is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ListBoxSmoothScrollingKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ListBoxSmoothScrolling property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight">
			<summary>Gets a value that indicates the height, in pixels, of a maximized top-level window on the primary display monitor.  </summary>
			<returns>The window height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MaximizedPrimaryScreenHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth">
			<summary>Gets a value that indicates the width, in pixels, of a maximized top-level window on the primary display monitor.  </summary>
			<returns>The window width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MaximizedPrimaryScreenWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeight">
			<summary>Gets a value that indicates the maximum height, in pixels, of a window that has a caption and sizing borders.  </summary>
			<returns>The maximum window height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximumWindowTrackHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MaximumWindowTrackHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidth">
			<summary>Gets a value that indicates the maximum width, in pixels, of a window that has a caption and sizing borders.  </summary>
			<returns>The maximum window width.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MaximumWindowTrackWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MaximumWindowTrackWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuAnimation">
			<summary>Gets a value indicating whether the menu animation feature is enabled. </summary>
			<returns>true if menu animation is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuAnimationKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuAnimation property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuBarHeight">
			<summary>Gets a value that indicates the height, in pixels, of a single-line menu bar.  </summary>
			<returns>The height of the menu bar.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuBarHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuBarHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuButtonHeight">
			<summary>Gets a value that indicates the height, in pixels, of a menu bar button.  </summary>
			<returns>The height of a menu bar button.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuButtonHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuButtonHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuButtonWidth">
			<summary>Gets a value that indicates the width, in pixels, of a menu bar button.  </summary>
			<returns>The width of a menu bar button.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuButtonWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuButtonWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuCheckmarkHeight">
			<summary>Gets a value that indicates the height, in pixels, of the default menu check-mark bitmap.  </summary>
			<returns>The height of a bitmap.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuCheckmarkHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuCheckmarkHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuCheckmarkWidth">
			<summary>Gets a value that indicates the width, in pixels, of the default menu check-mark bitmap.  </summary>
			<returns>The width of the bitmap.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuCheckmarkWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuCheckmarkWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuDropAlignment">
			<summary>Gets a value indicating whether pop-up menus are left-aligned or right-aligned, relative to the corresponding menu item. </summary>
			<returns>true if left-aligned; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuDropAlignmentKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuDropAlignment property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuFade">
			<summary>Gets a value indicating whether menu fade animation is enabled. </summary>
			<returns>true when fade animation is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuFadeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuFade property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuHeight">
			<summary>Gets the metric that determines the height of the menu. </summary>
			<returns>The menu height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuPopupAnimation">
			<summary>Gets the system value of the PopupAnimation property for menus. </summary>
			<returns>The pop-up animation property.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuPopupAnimationKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuPopupAnimation property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuShowDelay">
			<summary>Gets the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is over a submenu item.  </summary>
			<returns>The delay time.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuShowDelayKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuShowDelay property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuWidth">
			<summary>Gets the metric that determines the width of the menu. </summary>
			<returns>The menu width, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MenuWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MenuWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizeAnimation">
			<summary>Gets the animation effects associated with user actions. </summary>
			<returns>true if the minimize window animations feature is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizeAnimationKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimizeAnimation property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedGridHeight">
			<summary>Gets a value that indicates the height, in pixels, of a grid cell for a minimized window.  </summary>
			<returns>The height of a grid cell for a minimized window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedGridHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimizedGridHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedGridWidth">
			<summary>Gets a value that indicates the width, in pixels, of a grid cell for a minimized window.  </summary>
			<returns>The width of a grid cell for a minimized window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedGridWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimizedGridWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedWindowHeight">
			<summary>Gets a value that indicates the height, in pixels, of a minimized window.  </summary>
			<returns>The height of a minimized window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedWindowHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimizedWindowHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedWindowWidth">
			<summary>Gets a value that indicates the width, in pixels, of a minimized window.  </summary>
			<returns>The width of a minimized window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimizedWindowWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimizedWindowWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumHorizontalDragDistance">
			<summary>Gets the width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.  </summary>
			<returns>The width of the rectangle, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumVerticalDragDistance">
			<summary>Gets the height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.  </summary>
			<returns>The height of the rectangle, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowHeight">
			<summary>Gets a value that indicates the minimum height, in pixels, of a window.  </summary>
			<returns>The minimum height of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimumWindowHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeight">
			<summary>Gets a value that indicates the minimum tracking height of a window, in pixels.   </summary>
			<returns>The minimun tracking height of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowTrackHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimumWindowTrackHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidth">
			<summary>Gets a value that indicates the minimum tracking width of a window, in pixels.   </summary>
			<returns>The minimum tracking width of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowTrackWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimumWindowTrackWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowWidth">
			<summary>Gets a value that indicates the minimum width, in pixels, of a window.  </summary>
			<returns>The minimum width of a window.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MinimumWindowWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MinimumWindowWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MouseHoverHeight">
			<summary>Gets the height, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event. </summary>
			<returns>The height of a rectangle used for a mouse-hover event.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MouseHoverHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MouseHoverHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MouseHoverTime">
			<summary>Gets the time, in milliseconds, that the mouse pointer must remain in the hover rectangle to generate a mouse-hover event.  </summary>
			<returns>The time, in milliseconds, that the mouse must be in the hover rectangle to generate a mouse-hover event.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MouseHoverTimeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MouseHoverTime property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MouseHoverWidth">
			<summary>Gets the width, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event.  </summary>
			<returns>The width of a rectangle used for a mouse-hover event.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.MouseHoverWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the MouseHoverWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey"></see> property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.NavigationChromeStyleKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="P:System.Windows.SystemParameters.NavigationChromeStyleKey"></see> property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.PowerLineStatus">
			<summary>Gets a value indicating whether the system power is online, or that the system power status is unknown.</summary>
			<returns>A value in the enumeration.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.PowerLineStatusKey">
			<summary>Gets a <see cref="T:System.Windows.ResourceKey"></see> for the <see cref="P:System.Windows.SystemParameters.PowerLineStatus"></see> property.</summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.PrimaryScreenHeight">
			<summary>Gets a value that indicates the screen height, in pixels, of the primary display monitor.   </summary>
			<returns>The height of the screen.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.PrimaryScreenHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the PrimaryScreenHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.PrimaryScreenWidth">
			<summary>Gets a value that indicates the screen width, in pixels, of the primary display monitor.   </summary>
			<returns>The width of the screen.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.PrimaryScreenWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the PrimaryScreenWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight">
			<summary>Gets a value that indicates the height (thickness), in pixels, of the horizontal sizing border around the perimeter of a window that can be resized.   </summary>
			<returns>The height of the border.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ResizeFrameHorizontalBorderHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth">
			<summary>Gets a value that indicates the width (thickness), in pixels, of the vertical sizing border around the perimeter of a window that can be resized.   </summary>
			<returns>The width of the border.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ResizeFrameVerticalBorderWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ScrollHeight">
			<summary>Gets the metric that determines the scroll height of the nonclient area of a nonminimized window. </summary>
			<returns>The scroll height, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ScrollHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ScrollHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ScrollWidth">
			<summary>Gets the metric that determines the scroll width of the nonclient area of a nonminimized window. </summary>
			<returns>The scroll width, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ScrollWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ScrollWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SelectionFade">
			<summary>Gets a value indicating whether the selection fade effect is enabled. </summary>
			<returns>true if the fade effect is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SelectionFadeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SelectionFade property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ShowSounds">
			<summary>Gets a value that indicates whether the user requires information in visual format. </summary>
			<returns>true if the user requires an application to present information visually where it typically presents the information only in audible form; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ShowSoundsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ShowSounds property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallCaptionHeight">
			<summary>Gets the metric that determines the height of the small caption of the nonclient area of a nonminimized window. </summary>
			<returns>The caption height, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallCaptionHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallCaptionHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallCaptionWidth">
			<summary>Gets the metric that determines the width of the small caption of the nonclient area of a nonminimized window. </summary>
			<returns>The caption width, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallCaptionWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallCaptionWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallIconHeight">
			<summary>Gets a value that indicates the recommended height, in pixels, of a small icon. </summary>
			<returns>The icon height.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallIconHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallIconHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallIconWidth">
			<summary>Gets a value that indicates the recommended width, in pixels, of a small icon. </summary>
			<returns>The width of the icon.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallIconWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallIconWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight">
			<summary>Gets a value that indicates the height, in pixels, of small caption buttons.  </summary>
			<returns>The height of the caption button.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallWindowCaptionButtonHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth">
			<summary>Gets a value that indicates the width, in pixels, of small caption buttons.  </summary>
			<returns>The width of the caption button.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SmallWindowCaptionButtonWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SnapToDefaultButton">
			<summary>Gets a value indicating whether the snap-to-default button is enabled. If enabled, the mouse cursor automatically moves to the default button of a dialog box, such as OK or Apply.  </summary>
			<returns>true when the feature is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SnapToDefaultButtonKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SnapToDefaultButton property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.StylusHotTracking">
			<summary>Gets a value indicating whether hot tracking of a stylus is enabled.  </summary>
			<returns>true if hot tracking of a stylus is enabled; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.StylusHotTrackingKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the StylusHotTracking property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SwapButtons">
			<summary>Gets a value that indicates whether the functionality of the left and right mouse buttons are swapped.  </summary>
			<returns>true if the functionality of the left and right mouse buttons are swapped; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.SwapButtonsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the SwapButtons property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight">
			<summary>Gets a value that indicates the height, in pixels, of a 3-D border.   </summary>
			<returns>The height of a border.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThickHorizontalBorderHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ThickHorizontalBorderHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidth">
			<summary>Gets a value that indicates the width, in pixels, of a 3-D border.   </summary>
			<returns>The width of a border.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThickVerticalBorderWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ThickVerticalBorderWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight">
			<summary>Gets a value that indicates the height, in pixels, of a horizontal window border. </summary>
			<returns>The height of a border.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThinHorizontalBorderHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ThinHorizontalBorderHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidth">
			<summary>Gets a value that indicates the width, in pixels, of a vertical window border. </summary>
			<returns>The width of a border.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ThinVerticalBorderWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ThinVerticalBorderWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ToolTipAnimation">
			<summary>Gets a value indicating whether ToolTip animation is enabled.  </summary>
			<returns>true if ToolTip animation is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ToolTipAnimationKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ToolTipAnimation property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ToolTipFade">
			<summary>Gets a value indicating whether ToolTip animation uses a fade effect or a slide effect.  </summary>
			<returns>true if a fade effect is used; false if a slide effect is used.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ToolTipFadeKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ToolTipFade property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ToolTipPopupAnimation">
			<summary>Gets the system value of the PopupAnimation property for ToolTips. </summary>
			<returns>A system value for the pop-up animation property.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.ToolTipPopupAnimationKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the ToolTipPopupAnimation property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.UIEffects">
			<summary>Gets a value that indicates whether all user interface (UI) effects are enabled.   </summary>
			<returns>true if all UI effects are enabled; false if they are disabled.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.UIEffectsKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the UIEffects property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight">
			<summary>Gets a value that indicates the height, in pixels, of the arrow bitmap on a vertical scroll bar.  </summary>
			<returns>The height of a bitmap.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the VerticalScrollBarButtonHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight">
			<summary>Gets a value that indicates the height, in pixels, of the thumb in a vertical scroll bar.  </summary>
			<returns>The height of the thumb.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the VerticalScrollBarThumbHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VerticalScrollBarWidth">
			<summary>Gets a value that indicates the width, in pixels, of a vertical scroll bar.  </summary>
			<returns>The width of a scroll bar.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VerticalScrollBarWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the VerticalScrollBarWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenHeight">
			<summary>Gets a value that indicates the height, in pixels, of the virtual screen.   </summary>
			<returns>The height of the virtual screen.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the VirtualScreenHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenLeft">
			<summary>Gets a value that indicates the coordinate for the left side of the virtual screen.   </summary>
			<returns>A screen coordinate, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenLeftKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the VirtualScreenLeft property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenTop">
			<summary>Gets a value that indicates the upper coordinate of the virtual screen. </summary>
			<returns>A screen coordinate, in pixels.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenTopKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the VirtualScreenTop property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenWidth">
			<summary>Gets a value that indicates the width, in pixels, of the virtual screen.   </summary>
			<returns>The width of the virtual screen.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.VirtualScreenWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the VirtualScreenWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WheelScrollLines">
			<summary>Gets a value that indicates the number of lines to scroll when the mouse wheel is rotated. </summary>
			<returns>The number of lines.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WheelScrollLinesKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the WheelScrollLines property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeight">
			<summary>Gets a value that indicates the height, in pixels, of a button in the title bar of a window.  </summary>
			<returns>The height of a caption button.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WindowCaptionButtonHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the WindowCaptionButtonHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidth">
			<summary>Gets a value that indicates the width, in pixels, of a button in the title bar of a window.  </summary>
			<returns>The width of a caption button.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WindowCaptionButtonWidthKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the WindowCaptionButtonWidth property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WindowCaptionHeight">
			<summary>Gets a value that indicates the height, in pixels, of a caption area.  </summary>
			<returns>The height of a caption area.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WindowCaptionHeightKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the WindowCaptionHeight property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WorkArea">
			<summary>Gets the size of the work area on the primary display monitor. </summary>
			<returns>A RECT structure that receives the work area coordinates, expressed as virtual screen coordinates.</returns>
		</member>
		<member name="P:System.Windows.SystemParameters.WorkAreaKey">
			<summary>Gets the <see cref="T:System.Windows.ResourceKey"></see> for the WorkArea property. </summary>
			<returns>A resource key.</returns>
		</member>
		<member name="T:System.Windows.TemplateBindingExpression">
			<summary>Describes a run-time instance of a <see cref="T:System.Windows.TemplateBindingExtension"></see>.</summary>
		</member>
		<member name="T:System.Windows.TemplateBindingExpressionConverter">
			<summary>A type converter that is used to construct a markup extension from a <see cref="T:System.Windows.TemplateBindingExpression"></see> instance during serialization. </summary>
		</member>
		<member name="M:System.Windows.TemplateBindingExpressionConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExpressionConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.TemplateBindingExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Returns whether this converter can convert the object to the specified type, using the specified context. </summary>
			<returns>true if this converter can perform the requested conversion; otherwise, false. Only a destinationType of <see cref="T:System.Windows.Markup.MarkupExtension"></see> returns true.</returns>
			<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> implementation that provides a format context. </param>
			<param name="destinationType">The desired type of the conversion's output.</param>
		</member>
		<member name="M:System.Windows.TemplateBindingExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts the given value object to a <see cref="T:System.Windows.Markup.MarkupExtension"></see> type.</summary>
			<returns>The converted value. </returns>
			<param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see> object. If a null reference is passed, the current culture is assumed. </param>
			<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> implementation that provides a format context. </param>
			<param name="destinationType">The desired type to convert to.</param>
			<param name="value">The value to convert.</param>
		</member>
		<member name="T:System.Windows.TemplateBindingExtension">
			<summary>Implements a markup extension that supports the binding between the value of a property in a template and the value of some other exposed property on the templated control.</summary>
		</member>
		<member name="M:System.Windows.TemplateBindingExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtension"></see> class.</summary>
		</member>
		<member name="M:System.Windows.TemplateBindingExtension.#ctor(System.Windows.DependencyProperty)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtension"></see> class with the specified dependency property that is the source of the binding.</summary>
			<param name="property">The identifier of the property being bound.</param>
		</member>
		<member name="M:System.Windows.TemplateBindingExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set as the value on the target object's property for this markup extension. For <see cref="T:System.Windows.TemplateBindingExtension"></see>, this is an expression (<see cref="T:System.Windows.TemplateBindingExpression"></see>) that supports the binding. </summary>
			<returns>The expression that supports the binding.</returns>
			<param name="serviceProvider">An object that can provide services for the markup extension. May be null in this implementation.</param>
		</member>
		<member name="P:System.Windows.TemplateBindingExtension.Converter">
			<summary>Gets or sets the converter that interprets between source and target of a binding.</summary>
			<returns>The converter implementation. This value defaults to null and is typically provided as an optional parameter of the binding.</returns>
		</member>
		<member name="P:System.Windows.TemplateBindingExtension.ConverterParameter">
			<summary>Gets or sets the parameter to pass to the converter.</summary>
			<returns>The parameter being bound as referenced by the converter implementation. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.TemplateBindingExtension.Property">
			<summary>Gets or sets the property being bound to. </summary>
			<returns>Identifier of the dependency property being bound.</returns>
		</member>
		<member name="T:System.Windows.TemplateBindingExtensionConverter">
			<summary>A type converter that is used to construct a <see cref="T:System.Windows.TemplateBindingExtension"></see> from an instance during serialization.</summary>
		</member>
		<member name="M:System.Windows.TemplateBindingExtensionConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExtensionConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.TemplateBindingExtensionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Returns whether this converter can convert the object to the specified type, using the specified context. </summary>
			<returns>true if this converter can perform the requested conversion; otherwise, false. Only a destinationType of <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor"></see> will return true.</returns>
			<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> implementation that provides a format context. </param>
			<param name="destinationType">The desired type of the conversion's output.</param>
		</member>
		<member name="M:System.Windows.TemplateBindingExtensionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Converts the given value object to the specified type. </summary>
			<returns>The converted value. </returns>
			<param name="culture">A <see cref="T:System.Globalization.CultureInfo"></see> object. If a null reference is passed, the current culture is assumed. </param>
			<param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> implementation that provides a format context. </param>
			<param name="destinationType">The desired type to convert to.</param>
			<param name="value">The value to convert.</param>
		</member>
		<member name="T:System.Windows.TemplateKey">
			<summary>When used as a resource key for a data template, allows the data template to participate in the lookup process.</summary>
		</member>
		<member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateKey"></see> class with the specified template type. This constructor is protected.</summary>
			<param name="templateType">A <see cref="T:System.Windows.TemplateKey.TemplateType"></see> value that specifies the type of this template.</param>
		</member>
		<member name="M:System.Windows.TemplateKey.#ctor(System.Windows.TemplateKey.TemplateType,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.TemplateKey"></see> class with the specified parameters. This constructor is protected.</summary>
			<param name="templateType">A <see cref="T:System.Windows.TemplateKey.TemplateType"></see> value that specifies the type of this template.</param>
			<param name="dataType">The type for which this template is designed.</param>
		</member>
		<member name="M:System.Windows.TemplateKey.Equals(System.Object)">
			<summary>Returns a value that indicates whether the given instance is identical to this instance of <see cref="T:System.Windows.TemplateKey"></see>.</summary>
			<returns>true if the two instances are identical; otherwise, false.</returns>
			<param name="o">The object to compare for equality.</param>
		</member>
		<member name="M:System.Windows.TemplateKey.GetHashCode">
			<summary>Returns the hash code for this instance of <see cref="T:System.Windows.TemplateKey"></see>.</summary>
			<returns>The hash code for this instance of <see cref="T:System.Windows.TemplateKey"></see>.</returns>
		</member>
		<member name="M:System.Windows.TemplateKey.System.ComponentModel.ISupportInitialize.BeginInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.TemplateKey.System.ComponentModel.ISupportInitialize.EndInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.TemplateKey.ToString">
			<summary>Returns a string representation of this <see cref="T:System.Windows.TemplateKey"></see>.</summary>
			<returns>A string representation of this <see cref="T:System.Windows.TemplateKey"></see>.</returns>
		</member>
		<member name="P:System.Windows.TemplateKey.Assembly">
			<summary>Gets or sets the assembly that contains the template definition.</summary>
			<returns>The assembly in which the template is defined.</returns>
		</member>
		<member name="P:System.Windows.TemplateKey.DataType">
			<summary>Gets or sets the type for which the template is designed. </summary>
			<returns>The <see cref="T:System.Type"></see> that specifies the type of object that the template is used to display, or a string that specifies the XML tag name for the XML data that the template is used to display.</returns>
		</member>
		<member name="T:System.Windows.TemplateKey.TemplateType">
			<summary>Describes the different types of templates that use <see cref="T:System.Windows.TemplateKey"></see>.</summary>
		</member>
		<member name="F:System.Windows.TemplateKey.TemplateType.DataTemplate">
			<summary>A type that is a <see cref="T:System.Windows.DataTemplate"></see>.</summary>
		</member>
		<member name="F:System.Windows.TemplateKey.TemplateType.TableTemplate">
			<summary>A type that is a TableTemplate. This is obsolete.</summary>
		</member>
		<member name="T:System.Windows.TemplatePartAttribute">
			<summary>Represents an attribute that is applied to the class definition to identify the types of the named parts that are used for templating. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.TemplatePartAttribute.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.TemplatePartAttribute"></see> class.</summary>
		</member>
		<member name="P:System.Windows.TemplatePartAttribute.Name">
			<summary>Gets or sets the pre-defined name of the part.</summary>
			<returns>The pre-defined name of the part.</returns>
		</member>
		<member name="P:System.Windows.TemplatePartAttribute.Type">
			<summary>Gets or sets the type of the named part this attribute is identifying.</summary>
			<returns>The type of the named part this attribute is identifying.</returns>
		</member>
		<member name="T:System.Windows.ThemeDictionaryExtension">
			<summary>Implements a markup extension that enables application authors to customize control styles based on the current system theme.</summary>
		</member>
		<member name="M:System.Windows.ThemeDictionaryExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ThemeDictionaryExtension"></see> class.</summary>
		</member>
		<member name="M:System.Windows.ThemeDictionaryExtension.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ThemeDictionaryExtension"></see> class.</summary>
			<param name="assemblyName">The assembly name string.</param>
		</member>
		<member name="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.ThemeDictionaryExtension"></see>, this is the URI value for a particular theme dictionary extension.</summary>
			<returns>The object value to set on the property where the extension is applied. </returns>
			<param name="serviceProvider">An object that can provide services for the markup extension. This service is expected to provide results for <see cref="T:System.Windows.Markup.IXamlTypeResolver"></see>.</param>
			<exception cref="T:System.InvalidOperationException">assemblyName is null. You must set this value during construction or prior to <see cref="M:System.Windows.ThemeDictionaryExtension.ProvideValue(System.IServiceProvider)"></see>  use.- OR -serviceProvider was null or did not provide a service for <see cref="T:System.Windows.Markup.IXamlTypeResolver"></see>.- OR -serviceProvider specified a targetType other than <see cref="P:System.Windows.ResourceDictionary.Source"></see>.</exception>
		</member>
		<member name="P:System.Windows.ThemeDictionaryExtension.AssemblyName">
			<summary>Gets or sets a string setting a particular naming convention to identify which dictionary applies for a particular theme. </summary>
			<returns>The assembly name string.</returns>
		</member>
		<member name="T:System.Windows.ThemeInfoAttribute">
			<summary>Specifies the location in which theme dictionaries are stored for types in an assembly. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.ThemeInfoAttribute.#ctor(System.Windows.ResourceDictionaryLocation,System.Windows.ResourceDictionaryLocation)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ThemeInfoAttribute"></see> class and creates an attribute that defines theme dictionary locations for types in an assembly.</summary>
			<param name="genericDictionaryLocation">The location of generic, not theme-specific, resources.</param>
			<param name="themeDictionaryLocation">The location of theme-specific resources.</param>
		</member>
		<member name="P:System.Windows.ThemeInfoAttribute.GenericDictionaryLocation">
			<summary>The location of generic, not theme specific, resources. </summary>
			<returns>The <see cref="T:System.Windows.ResourceDictionaryLocation"></see> of the generic <see cref="T:System.Windows.ResourceDictionary"></see>.</returns>
		</member>
		<member name="P:System.Windows.ThemeInfoAttribute.ThemeDictionaryLocation">
			<summary>The location of theme specific resources. </summary>
			<returns>The <see cref="T:System.Windows.ResourceDictionaryLocation"></see> of the theme specific <see cref="T:System.Windows.ResourceDictionary"></see>.</returns>
		</member>
		<member name="T:System.Windows.Thickness">
			<summary>Describes the thickness of a frame around a rectangle. Four <see cref="T:System.Double"></see> values describe the <see cref="P:System.Windows.Thickness.Left"></see>, <see cref="P:System.Windows.Thickness.Top"></see>, <see cref="P:System.Windows.Thickness.Right"></see>, and <see cref="P:System.Windows.Thickness.Bottom"></see> sides of the rectangle, respectively. </summary>
		</member>
		<member name="M:System.Windows.Thickness.#ctor(System.Double)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Thickness"></see> structure that has the specified uniform length on each side. </summary>
			<param name="uniformLength">The uniform length applied to all four sides of the bounding rectangle.</param>
		</member>
		<member name="M:System.Windows.Thickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Thickness"></see> structure that has specific lengths (supplied as a Double) applied to each side of the rectangle. </summary>
			<param name="right">The thickness for the right side of the rectangle</param>
			<param name="bottom">The thickness for the lower side of the rectangle.</param>
			<param name="left">The thickness for the left side of the rectangle.</param>
			<param name="top">The thickness for the upper side of the rectangle.</param>
		</member>
		<member name="M:System.Windows.Thickness.Equals(System.Object)">
			<summary>Compares this <see cref="T:System.Windows.Thickness"></see> structure to another <see cref="T:System.Object"></see> for equality.</summary>
			<returns>true if the two objects are equal; otherwise, false.</returns>
			<param name="obj">The object to compare.</param>
		</member>
		<member name="M:System.Windows.Thickness.Equals(System.Windows.Thickness)">
			<summary>Compares this <see cref="T:System.Windows.Thickness"></see> structure to another <see cref="T:System.Windows.Thickness"></see> structure for equality.</summary>
			<returns>true if the two instances of <see cref="T:System.Windows.Thickness"></see> are equal; otherwise, false.</returns>
			<param name="thickness">An instance of <see cref="T:System.Windows.Thickness"></see> to compare for equality.</param>
		</member>
		<member name="M:System.Windows.Thickness.GetHashCode">
			<summary>Returns the hash code of the structure.</summary>
			<returns>A hash code for this instance of <see cref="T:System.Windows.Thickness"></see>.</returns>
		</member>
		<member name="M:System.Windows.Thickness.op_Equality(System.Windows.Thickness,System.Windows.Thickness)">
			<summary>Compares the value of two <see cref="T:System.Windows.Thickness"></see> structures for equality.</summary>
			<returns>true if the two instances of <see cref="T:System.Windows.Thickness"></see> are equal; otherwise, false.</returns>
			<param name="t2">The other structure to compare.</param>
			<param name="t1">The first structure to compare.</param>
		</member>
		<member name="M:System.Windows.Thickness.op_Inequality(System.Windows.Thickness,System.Windows.Thickness)">
			<summary>Compares two <see cref="T:System.Windows.Thickness"></see> structures for inequality. </summary>
			<returns>true if the two instances of <see cref="T:System.Windows.Thickness"></see> are not equal; otherwise, false.</returns>
			<param name="t2">The other structure to compare.</param>
			<param name="t1">The first structure to compare.</param>
		</member>
		<member name="M:System.Windows.Thickness.ToString">
			<summary>Returns the string representation of the <see cref="T:System.Windows.Thickness"></see> structure.</summary>
			<returns>A <see cref="T:System.String"></see> that represents the <see cref="T:System.Windows.Thickness"></see> value.</returns>
		</member>
		<member name="P:System.Windows.Thickness.Bottom">
			<summary>Gets or sets the width, in pixels, of the lower side of the bounding rectangle.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the width, in pixels, of the lower side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness"></see>. A pixel is equal to 1/96 of an inch. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Thickness.Left">
			<summary>Gets or sets the width, in pixels, of the left side of the bounding rectangle. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the width, in pixels, of the left side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness"></see>. a pixel is equal to 1/96 on an inch. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Thickness.Right">
			<summary>Gets or sets the width, in pixels, of the right side of the bounding rectangle. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the width, in pixels, of the right side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness"></see>. A pixel is equal to 1/96 of an inch. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Thickness.Top">
			<summary>Gets or sets the width, in pixels, of the upper side of the bounding rectangle.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the width, in pixels, of the upper side of the bounding rectangle for this instance of <see cref="T:System.Windows.Thickness"></see>. A pixel is equal to 1/96 of an inch. The default is 0.</returns>
		</member>
		<member name="T:System.Windows.ThicknessConverter">
			<summary>Converts instances of other types to and from instances of <see cref="T:System.Windows.Thickness"></see>.</summary>
		</member>
		<member name="M:System.Windows.ThicknessConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.ThicknessConverter"></see> class. </summary>
		</member>
		<member name="M:System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether the type converter can create an instance of <see cref="T:System.Windows.Thickness"></see> from a specified type.</summary>
			<returns>true if the type converter can create an instance of <see cref="T:System.Windows.Thickness"></see> from the specified type; otherwise, false.</returns>
			<param name="typeDescriptorContext">The context information of a type.</param>
			<param name="sourceType">The source type that the type converter is evaluating for conversion.</param>
		</member>
		<member name="M:System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether the type converter can convert an instance of <see cref="T:System.Windows.Thickness"></see> to a different type. </summary>
			<returns>true if the type converter can convert this instance of <see cref="T:System.Windows.Thickness"></see> to the destinationType; otherwise, false.</returns>
			<param name="typeDescriptorContext">The context information of a type.</param>
			<param name="destinationType">The type for which the type converter is evaluating this instance of <see cref="T:System.Windows.Thickness"></see> for conversion.</param>
		</member>
		<member name="M:System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Attempts to create an instance of <see cref="T:System.Windows.Thickness"></see> from a specified object. </summary>
			<returns>An instance of <see cref="T:System.Windows.Thickness"></see> created from the converted source.</returns>
			<param name="typeDescriptorContext">The context information for a type.</param>
			<param name="cultureInfo">The CultureInfo of the type being converted.</param>
			<param name="source">The source<see cref="T:System.Object"></see> being converted.</param>
			<exception cref="T:System.ArgumentNullException">The source object is a null reference (Nothing in Visual Basic).</exception>
			<exception cref="T:System.ArgumentException">The example object is not a null reference and is not a valid type that can be converted to a <see cref="T:System.Windows.Thickness"></see>.</exception>
		</member>
		<member name="M:System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Attempts to convert an instance of <see cref="T:System.Windows.Thickness"></see> to a specified type. </summary>
			<returns>The type that is created when the type converter converts an instance of <see cref="T:System.Windows.Thickness"></see>.</returns>
			<param name="typeDescriptorContext">The context information of a type.</param>
			<param name="Value">The instance of <see cref="T:System.Windows.Thickness"></see> to convert.</param>
			<param name="destinationType">The type that this instance of <see cref="T:System.Windows.Thickness"></see> is converted to.</param>
			<param name="cultureInfo">The CultureInfo of the type being converted.</param>
			<exception cref="T:System.ArgumentNullException">The value object is not a null reference (Nothing) and is not a Brush, or the destinationType is not one of the valid types for conversion.</exception>
			<exception cref="T:System.ArgumentException">The value object is a null reference.</exception>
		</member>
		<member name="T:System.Windows.Trigger">
			<summary>Represents a trigger that applies property values or performs actions conditionally.</summary>
		</member>
		<member name="M:System.Windows.Trigger.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Trigger"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Trigger.Property">
			<summary>Gets or sets the property that returns the value that is compared with the <see cref="P:System.Windows.Trigger.Value"></see> property of the trigger. The comparison is a reference equality check.</summary>
			<returns>A <see cref="T:System.Windows.DependencyProperty"></see> that returns the property value of the element. The default value is null.</returns>
			<exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Trigger"></see> is in use, it cannot be modified.</exception>
			<exception cref="T:System.ArgumentException">A <see cref="T:System.Windows.Style"></see> cannot contain a <see cref="T:System.Windows.Trigger"></see> that refers to the <see cref="T:System.Windows.Style"></see> property.</exception>
		</member>
		<member name="P:System.Windows.Trigger.Setters">
			<summary>Gets a collection of <see cref="T:System.Windows.Setter"></see> objects, which describe the property values to apply when the specified condition has been met.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Trigger.SourceName">
			<summary>Gets or sets the name of the object with the property that causes the associated setters to be applied.</summary>
			<returns>The default property is null. If this property is null, then the <see cref="P:System.Windows.Trigger.Property"></see> property is evaluated with respect to the element this style or template is being applied to (the styled parent or the templated parent).</returns>
			<exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Trigger"></see> is in use, it cannot be modified.</exception>
		</member>
		<member name="P:System.Windows.Trigger.Value">
			<summary>Gets or sets the value to be compared with the property value of the element. The comparison is a reference equality check.</summary>
			<returns>The default value is null. See also the Exceptions section.</returns>
			<exception cref="T:System.ArgumentException">Only load-time <see cref="T:System.Windows.Markup.MarkupExtension"></see>s are supported.</exception>
			<exception cref="T:System.InvalidOperationException">After a <see cref="T:System.Windows.Trigger"></see> is in use, it cannot be modified.</exception>
			<exception cref="T:System.ArgumentException">Expressions such as bindings are not supported.</exception>
		</member>
		<member name="T:System.Windows.TriggerAction">
			<summary>Describes an action to perform for a trigger.</summary>
		</member>
		<member name="T:System.Windows.TriggerActionCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.TriggerAction"></see> objects. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.TriggerActionCollection"></see> class.</summary>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.#ctor(System.Int32)">
			<summary>Initializes an instance of the <see cref="T:System.Windows.TriggerActionCollection"></see> class that has the specified initial size.</summary>
			<param name="initialSize">The size of the collection.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)">
			<summary>Adds an item to the collection.</summary>
			<param name="value">The <see cref="T:System.Windows.TriggerAction"></see> object to add.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)">
			<summary>Returns a value that indicates whether the collection contains the specified <see cref="T:System.Windows.TriggerAction"></see> object.</summary>
			<returns>true if the <see cref="T:System.Windows.TriggerAction"></see> object is found in the collection; otherwise, false.</returns>
			<param name="value">The <see cref="T:System.Windows.TriggerAction"></see> object to locate in the collection.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)">
			<summary>Begins at the specified index and copies the collection items to the specified array.</summary>
			<param name="array">The one-dimensional array that is the destination of the items that are copied from the collection. The array must use zero-based indexing.</param>
			<param name="index">The zero-based index in the array where copying starts.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.GetEnumerator">
			<summary>Returns an enumerator that iterates through the collection.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to iterate through the collection.</returns>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)">
			<summary>Returns the index of the specified item in the collection.</summary>
			<returns>The index of value if the <see cref="T:System.Windows.TriggerAction"></see> object is found in the collection; otherwise, -1.</returns>
			<param name="value">The <see cref="T:System.Windows.TriggerAction"></see> object to locate in the collection.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)">
			<summary>Inserts the specified item into the collection at the specified index.</summary>
			<param name="value">The <see cref="T:System.Windows.TriggerAction"></see> object to insert into the collection.</param>
			<param name="index">The zero-based index where the value must be inserted.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)">
			<summary>Removes the first occurrence of the specified object from the collection.</summary>
			<param name="value">The <see cref="T:System.Windows.TriggerAction"></see> object to remove from the collection.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.RemoveAt(System.Int32)">
			<summary>Removes from the collection the item that is located at the specified index.</summary>
			<param name="index">The zero-based index of the item to remove.</param>
		</member>
		<member name="M:System.Windows.TriggerActionCollection.System.Collections.IEnumerable.GetEnumerator">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.TriggerActionCollection.Count">
			<summary>Gets the number of items in the collection.</summary>
			<returns>The number of items that the collection contains.</returns>
		</member>
		<member name="P:System.Windows.TriggerActionCollection.IsReadOnly">
			<summary>Gets a value that indicates whether the collection is read-only.</summary>
			<returns>true if the collection is read-only; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.TriggerActionCollection.Item(System.Int32)">
			<summary>Gets or sets the item that is at the specified index.</summary>
			<returns>The <see cref="T:System.Windows.TriggerAction"></see> object that is at the specified index.</returns>
			<param name="index">The zero-based index of the item to get or set.</param>
		</member>
		<member name="T:System.Windows.TriggerBase">
			<summary>Represents the base class for specifying a conditional value within a <see cref="T:System.Windows.Style"></see> object. </summary>
		</member>
		<member name="P:System.Windows.TriggerBase.EnterActions">
			<summary>Gets a collection of <see cref="T:System.Windows.TriggerAction"></see> objects to apply when the trigger object becomes active. This property does not apply to the <see cref="T:System.Windows.EventTrigger"></see> class.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.TriggerBase.ExitActions">
			<summary>Gets a collection of <see cref="T:System.Windows.TriggerAction"></see> objects to apply when the trigger object becomes inactive. This property does not apply to the <see cref="T:System.Windows.EventTrigger"></see> class.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="T:System.Windows.TriggerCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.TriggerBase"></see> objects.</summary>
		</member>
		<member name="P:System.Windows.TriggerCollection.IsSealed">
			<summary>Gets a value that indicates whether this collection is read-only and cannot be changed.</summary>
			<returns>true if this collection is read-only; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.ValueSource">
			<summary>Reports the information returned from <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)"></see>.</summary>
		</member>
		<member name="M:System.Windows.ValueSource.Equals(System.Object)">
			<summary>Returns a value indicating whether this <see cref="T:System.Windows.ValueSource"></see> is equal to a specified object.</summary>
			<returns>true if the provided object is equivalent to the current <see cref="T:System.Windows.ValueSource"></see>; otherwise, false.</returns>
			<param name="o">The object to compare with this <see cref="T:System.Windows.ValueSource"></see>.</param>
		</member>
		<member name="M:System.Windows.ValueSource.GetHashCode">
			<summary>Returns the hash code for this <see cref="T:System.Windows.ValueSource"></see>.</summary>
			<returns>A 32-bit unsigned integer hash code.</returns>
		</member>
		<member name="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
			<summary>Determines whether two <see cref="T:System.Windows.ValueSource"></see> instances have the same value.</summary>
			<returns>true if the two <see cref="T:System.Windows.ValueSource"></see> instances are equivalent; otherwise, false.</returns>
			<param name="vs2">The second <see cref="T:System.Windows.ValueSource"></see> to compare.</param>
			<param name="vs1">The first <see cref="T:System.Windows.ValueSource"></see> to compare.</param>
		</member>
		<member name="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
			<summary>Determines whether two <see cref="T:System.Windows.ValueSource"></see> instances do not have the same value.</summary>
			<returns>true if the two <see cref="T:System.Windows.ValueSource"></see> instances are not equivalent; otherwise, false.</returns>
			<param name="vs2">The second <see cref="T:System.Windows.ValueSource"></see> to compare.</param>
			<param name="vs1">The first <see cref="T:System.Windows.ValueSource"></see> to compare.</param>
		</member>
		<member name="P:System.Windows.ValueSource.BaseValueSource">
			<summary>Gets a value of the <see cref="T:System.Windows.BaseValueSource"></see> enumeration, which reports the source that provided the dependency property system with a value.</summary>
			<returns>A value of the enumeration.</returns>
		</member>
		<member name="P:System.Windows.ValueSource.IsAnimated">
			<summary>Gets a value that declares whether the property is being animated.</summary>
			<returns>true if the property is animated; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.ValueSource.IsCoerced">
			<summary>Gets a value that declares whether this value resulted from a <see cref="T:System.Windows.CoerceValueCallback"></see> implementation applied to a dependency property.</summary>
			<returns>true if the value resulted from a <see cref="T:System.Windows.CoerceValueCallback"></see> implementation applied to a dependency property; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.ValueSource.IsExpression">
			<summary>Gets a value that declares whether this value resulted from an evaluated expression. This might be a <see cref="T:System.Windows.Data.BindingExpression"></see> supporting a binding, or an internal expression such as those that support the DynamicResource Markup Extension.</summary>
			<returns>true if the value came from an evaluated expression; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.VerticalAlignment">
			<summary>Describes how a child element is vertically positioned or stretched within a parent's layout slot. </summary>
		</member>
		<member name="F:System.Windows.VerticalAlignment.Bottom">
			<summary>The child element is aligned to the bottom of the parent's layout slot. </summary>
		</member>
		<member name="F:System.Windows.VerticalAlignment.Center">
			<summary>The child element is aligned to the center of the parent's layout slot. </summary>
		</member>
		<member name="F:System.Windows.VerticalAlignment.Stretch">
			<summary>The child element stretches to fill the parent's layout slot. </summary>
		</member>
		<member name="F:System.Windows.VerticalAlignment.Top">
			<summary>The child element is aligned to the top of the parent's layout slot. </summary>
		</member>
		<member name="T:System.Windows.Window">
			<summary>Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</summary>
		</member>
		<member name="M:System.Windows.Window.#ctor">
			<summary>Initializes a <see cref="T:System.Windows.Window"></see> object. </summary>
		</member>
		<member name="E:System.Windows.Window.Activated">
			<summary>Occurs when a window becomes the foreground window.</summary>
		</member>
		<member name="E:System.Windows.Window.Closed">
			<summary>Occurs when the window as about to close.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.UIElement.Visibility"></see> is set, or <see cref="M:System.Windows.Window.Show"></see>, <see cref="M:System.Windows.Window.ShowDialog"></see>, or <see cref="M:System.Windows.Window.Hide"></see> is called while a window is closing.</exception>
		</member>
		<member name="E:System.Windows.Window.Closing">
			<summary>Occurs directly after <see cref="M:System.Windows.Window.Close"></see> is called, and can be handled to cancel window closure.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.UIElement.Visibility"></see> is set, or <see cref="M:System.Windows.Window.Show"></see>, <see cref="M:System.Windows.Window.ShowDialog"></see>, <see cref="M:System.Windows.Window.Close"></see>, or <see cref="M:System.Windows.Window.Hide"></see> is called while a window is closing.</exception>
		</member>
		<member name="E:System.Windows.Window.ContentRendered">
			<summary>Occurs after a window's content has been rendered.</summary>
		</member>
		<member name="E:System.Windows.Window.Deactivated">
			<summary>Occurs when a window becomes a background window.</summary>
		</member>
		<member name="E:System.Windows.Window.LocationChanged">
			<summary>Occurs when the window's location changes.</summary>
		</member>
		<member name="E:System.Windows.Window.SourceInitialized">
			<summary>This event is raised to support interop. See <see cref="T:System.Windows.Interop.HwndSource"></see>.</summary>
		</member>
		<member name="E:System.Windows.Window.StateChanged">
			<summary>Occurs when the window's <see cref="P:System.Windows.Window.WindowState"></see> property changes.</summary>
		</member>
		<member name="F:System.Windows.Window.AllowsTransparencyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.AllowsTransparency"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.AllowsTransparency"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.IconProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.Icon"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.Icon"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.IsActiveProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.IsActive"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.IsActive"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.LeftProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.Left"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.Left"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.ResizeModeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.ResizeMode"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.ResizeMode"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.ShowInTaskbarProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.ShowInTaskbar"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.SizeToContentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.SizeToContent"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.SizeToContent"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.TitleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.Title"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.Title"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.TopmostProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.TopMost"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.TopMost"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.TopProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.Top"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.Top"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.WindowStateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.WindowState"></see> dependency property.</summary>
			<returns>Returns the identifier for the <see cref="P:System.Windows.Window.WindowState"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Window.WindowStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Window.WindowStyle"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Window.WindowStyle"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Window.Activate">
			<summary>Attempts to bring the window to the foreground and activates it.</summary>
			<returns>Returns true if the <see cref="T:System.Windows.Window"></see> was successfully activated; false, otherwise.</returns>
		</member>
		<member name="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
			<summary>Override this method to arrange and size a window and its child elements. </summary>
			<returns>A <see cref="T:System.Windows.Size"></see> that reflects the actual size that was used.</returns>
			<param name="arrangeBounds">A <see cref="T:System.Windows.Size"></see> that reflects the final size that the window should use to arrange itself and its children.</param>
		</member>
		<member name="M:System.Windows.Window.Close">
			<summary>Manually closes a <see cref="T:System.Windows.Window"></see>.</summary>
		</member>
		<member name="M:System.Windows.Window.DragMove">
			<summary>Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client rectangle.</summary>
			<exception cref="T:System.InvalidOperationException">The left mouse button is not down.</exception>
		</member>
		<member name="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
			<summary>Returns a reference to the <see cref="T:System.Windows.Window"></see> object that hosts the content tree within which the dependency object is located.</summary>
			<returns>A <see cref="T:System.Windows.Window"></see> reference to the host window.</returns>
			<param name="dependencyObject">The dependency object.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Window.Hide">
			<summary>Makes a window invisible.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Window.Hide"></see> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing"></see>) or has been closed (<see cref="E:System.Windows.Window.Closed"></see>).</exception>
		</member>
		<member name="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
			<summary>Override this method to measure the size of a window.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</returns>
			<param name="availableSize">A <see cref="T:System.Windows.Size"></see> that reflects the available size that this window can give to the child. Infinity can be given as a value to indicate that the window will size to whatever content is available.</param>
		</member>
		<member name="M:System.Windows.Window.OnActivated(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.Activated"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnClosed(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.Closed"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.Closing"></see> event.</summary>
			<param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
			<summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property changes.</summary>
			<param name="oldContent">A reference to the root of the old content tree.</param>
			<param name="newContent">A reference to the root of the new content tree.</param>
		</member>
		<member name="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.ContentRendered"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnCreateAutomationPeer">
			<summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer"></see> object for this <see cref="T:System.Windows.Window"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer"></see> object for this <see cref="T:System.Windows.Window"></see>.</returns>
		</member>
		<member name="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.Deactivated"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.LocationChanged"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.SourceInitialized"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.StateChanged"></see> event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Called when the parent of the window is changed. </summary>
			<param name="oldParent">The previous parent. Set to null if the <see cref="T:System.Windows.DependencyObject"></see> did not have a previous parent.</param>
		</member>
		<member name="M:System.Windows.Window.Show">
			<summary>Opens a window and returns without waiting for the newly opened window to close.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Window.Show"></see> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing"></see>) or has been closed (<see cref="E:System.Windows.Window.Closed"></see>).</exception>
		</member>
		<member name="M:System.Windows.Window.ShowDialog">
			<summary>Opens a window and returns only when the newly opened window is closed.</summary>
			<returns>Returns a <see cref="T:System.Nullable`1"></see><see cref="T:System.Boolean"></see> value that signifies how a window was closed by the user.</returns>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Window.ShowDialog"></see> is called on a <see cref="T:System.Windows.Window"></see> that is visible-or-<see cref="M:System.Windows.Window.ShowDialog"></see> is called on a visible <see cref="T:System.Windows.Window"></see> that was opened by calling <see cref="M:System.Windows.Window.ShowDialog"></see>.</exception>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Window.ShowDialog"></see> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing"></see>) or has been closed (<see cref="E:System.Windows.Window.Closed"></see>).</exception>
		</member>
		<member name="P:System.Windows.Window.AllowsTransparency">
			<summary>Gets or sets the whether a window's client area supports transparency. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> object that specifies whether a window supports transparency.</returns>
			<exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Window.AllowsTransparency"></see> is changed after a window has been shown.</exception>
			<exception cref="T:System.InvalidOperationException">A window that has a <see cref="P:System.Windows.Window.WindowStyle"></see> value of anything other than <see cref="F:System.Windows.WindowStyle.None"></see>.</exception>
		</member>
		<member name="P:System.Windows.Window.DialogResult">
			<summary>Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog"></see> method.</summary>
			<returns>A <see cref="T:System.Nullable`1"></see> value of type <see cref="T:System.Boolean"></see>; false, by default.</returns>
			<exception cref="T:System.InvalidOperationException"><see cref="P:System.Windows.Window.DialogResult"></see> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog"></see>, or a window opened by calling <see cref="M:System.Windows.Window.Show"></see>.</exception>
		</member>
		<member name="P:System.Windows.Window.Icon">
			<summary>Gets or sets a window's icon.  This is a dependency property.</summary>
			<returns>An <see cref="T:System.Windows.Media.ImageSource"></see> object that represents the icon.</returns>
		</member>
		<member name="P:System.Windows.Window.IsActive">
			<summary>Gets a value that indicates whether the window is active. This is a dependency property.</summary>
			<returns>true if the window is active; false otherwise. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Window.Left">
			<summary>Gets or sets the position of the window's left edge, in relation to the desktop. This is a dependency property.</summary>
			<returns>The position of the window's left edge, in logical units (1/96th of an inch).</returns>
		</member>
		<member name="P:System.Windows.Window.LogicalChildren">
			<summary>Gets an enumerator for a window's logical child elements.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> a window's logical child elements.</returns>
		</member>
		<member name="P:System.Windows.Window.OwnedWindows">
			<summary>Gets a collection of windows for which this window is the owner.</summary>
			<returns>A <see cref="T:System.Windows.WindowCollection"></see> that contains references to the windows for which this window is the owner.</returns>
		</member>
		<member name="P:System.Windows.Window.Owner">
			<summary>Gets or sets the <see cref="T:System.Windows.Window"></see> that owns this <see cref="T:System.Windows.Window"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Window"></see> object that represents the owner of this <see cref="T:System.Windows.Window"></see>.</returns>
			<exception cref="T:System.ArgumentException">A window tries to own itself-or-Two windows try to own each other.</exception>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Window.Owner"></see> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog"></see>-or-The <see cref="P:System.Windows.Window.Owner"></see> property is set with a window that has not been previously shown.</exception>
		</member>
		<member name="P:System.Windows.Window.ResizeMode">
			<summary>Gets or sets the resize mode. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.ResizeMode"></see> value specifying the resize mode.</returns>
		</member>
		<member name="P:System.Windows.Window.RestoreBounds">
			<summary>Gets the size and location of a window before being either minimized or maximized.</summary>
			<returns>A <see cref="T:System.Windows.Rect"></see> that specifies the size and location of a window before being either minimized or maximized.</returns>
		</member>
		<member name="P:System.Windows.Window.ShowInTaskbar">
			<summary>Gets or sets a value whether the window has a task bar button. This is a dependency property.</summary>
			<returns>true if the window has a task bar button; otherwise, false. You cannot set or get this property when a window is hosted in a browser.</returns>
		</member>
		<member name="P:System.Windows.Window.SizeToContent">
			<summary>Gets or sets a value that specifies whether a window will automatically size itself to fit the size of its content. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.SizeToContent"></see> value. The default value is <see cref="F:System.Windows.SizeToContent.Manual"></see>.</returns>
		</member>
		<member name="P:System.Windows.Window.Title">
			<summary>Gets or sets a window's title. This is a dependency property.</summary>
			<returns>A <see cref="T:System.String"></see> that contains the window's title.</returns>
		</member>
		<member name="P:System.Windows.Window.Top">
			<summary>Gets or sets the position of the window's top edge, in relation to the desktop. This is a dependency property.</summary>
			<returns>The position of the window's top, in logical units (1/96").</returns>
		</member>
		<member name="P:System.Windows.Window.Topmost">
			<summary>Gets or sets whether a window appears in the topmost z order. This is a dependency property.</summary>
			<returns>true if the window is topmost; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Window.WindowStartupLocation">
			<summary>Gets or sets the position of the window when first shown.</summary>
			<returns>A <see cref="T:System.Windows.WindowStartupLocation"></see> value that specifies the position of a window when first shown. The default value is <see cref="F:System.Windows.WindowStartupLocation.Manual"></see>.</returns>
		</member>
		<member name="P:System.Windows.Window.WindowState">
			<summary>Gets or sets whether a window is restored, minimized, or maximized. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.WindowState"></see> that determines whether a window is restored, minimized, or maximized. The default is <see cref="F:System.Windows.WindowState.Normal"></see> (restored).</returns>
		</member>
		<member name="P:System.Windows.Window.WindowStyle">
			<summary>Gets or sets a window's border style. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.WindowStyle"></see> that specifies a window's border style. The default value is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow"></see>.</returns>
		</member>
		<member name="T:System.Windows.WindowCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Window"></see> objects. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.WindowCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.WindowCollection"></see> class.</summary>
		</member>
		<member name="M:System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)">
			<summary>Copies each <see cref="T:System.Windows.Window"></see> object in the collection to an array, starting from the specified index.</summary>
			<param name="array">An array of type <see cref="T:System.Windows.Window"></see> that the <see cref="T:System.Windows.Window"></see> objects in the collection are copied to.</param>
			<param name="index">The position in the collection to start copying from.</param>
		</member>
		<member name="M:System.Windows.WindowCollection.GetEnumerator">
			<summary>Returns an <see cref="T:System.Collections.IEnumerator"></see> that you can use to enumerate the <see cref="T:System.Windows.Window"></see> objects in the collection.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> that you can use to enumerate the <see cref="T:System.Windows.Window"></see> objects in the collection.</returns>
		</member>
		<member name="P:System.Windows.WindowCollection.Count">
			<summary>Gets the number of <see cref="T:System.Windows.Window"></see> objects contained in the <see cref="T:System.Windows.WindowCollection"></see>.</summary>
			<returns>The number of <see cref="T:System.Windows.Window"></see> objects contained in the <see cref="T:System.Windows.WindowCollection"></see>.</returns>
		</member>
		<member name="P:System.Windows.WindowCollection.IsSynchronized">
			<summary>Gets a value indicating whether the <see cref="T:System.Windows.WindowCollection"></see> object is thread safe. </summary>
			<returns>true if the object is thread safe; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.WindowCollection.Item(System.Int32)">
			<summary>Gets the <see cref="T:System.Windows.Window"></see> or <see cref="T:System.Windows.Navigation.NavigationWindow"></see> object at the specified index.</summary>
			<returns>A <see cref="T:System.Windows.Window"></see> or <see cref="T:System.Windows.Navigation.NavigationWindow"></see> object.</returns>
			<param name="Index">The index of the specified <see cref="T:System.Windows.Window"></see> or <see cref="T:System.Windows.Navigation.NavigationWindow"></see>.</param>
		</member>
		<member name="P:System.Windows.WindowCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the collection.</summary>
			<returns>An object that can be used to synchronize access to the collection.</returns>
		</member>
		<member name="T:System.Windows.WindowStartupLocation">
			<summary>Specifies the position that a window will be shown in when it is first opened. Used by the <see cref="P:System.Windows.Window.WindowStartupLocation"></see> property.</summary>
		</member>
		<member name="F:System.Windows.WindowStartupLocation.CenterOwner">
			<summary>The startup location of a window is the center of the window that opened it.</summary>
		</member>
		<member name="F:System.Windows.WindowStartupLocation.CenterScreen">
			<summary>The startup location of a window is the center of the screen on which it is opened.</summary>
		</member>
		<member name="F:System.Windows.WindowStartupLocation.Manual">
			<summary>The startup location of a Window is set from code, or defers to the default location.</summary>
		</member>
		<member name="T:System.Windows.WindowState">
			<summary>Specifies whether a window is minimized, maximized, or restored. Used by the <see cref="P:System.Windows.Window.WindowState"></see> property.</summary>
		</member>
		<member name="F:System.Windows.WindowState.Maximized">
			<summary>The window is maximized.</summary>
		</member>
		<member name="F:System.Windows.WindowState.Minimized">
			<summary>The window is minimized.</summary>
		</member>
		<member name="F:System.Windows.WindowState.Normal">
			<summary>The window is restored.</summary>
		</member>
		<member name="T:System.Windows.WindowStyle">
			<summary>Specifies the type of border that a <see cref="T:System.Windows.Window"></see> has. Used by the <see cref="P:System.Windows.Window.WindowStyle"></see> property.</summary>
		</member>
		<member name="F:System.Windows.WindowStyle.None">
			<summary>Only the client area is visible - the title bar and border are not shown. A <see cref="T:System.Windows.Navigation.NavigationWindow"></see> with a <see cref="P:System.Windows.Window.WindowStyle"></see> of <see cref="F:System.Windows.WindowStyle.None"></see> will still display the navigation user interface (UI).</summary>
		</member>
		<member name="F:System.Windows.WindowStyle.SingleBorderWindow">
			<summary>A window with a single border. This is the default value.</summary>
		</member>
		<member name="F:System.Windows.WindowStyle.ThreeDBorderWindow">
			<summary>A window with a 3-D border.</summary>
		</member>
		<member name="F:System.Windows.WindowStyle.ToolWindow">
			<summary>A fixed tool window.</summary>
		</member>
		<member name="T:System.Windows.WrapDirection">
			<summary>Specifies the allowable directions that content can wrap around an object. </summary>
		</member>
		<member name="F:System.Windows.WrapDirection.Both">
			<summary>Content that flows around both sides of the object. </summary>
		</member>
		<member name="F:System.Windows.WrapDirection.Left">
			<summary>Content that only flows around the left side of the object. </summary>
		</member>
		<member name="F:System.Windows.WrapDirection.None">
			<summary>Content that does not flow around the object. </summary>
		</member>
		<member name="F:System.Windows.WrapDirection.Right">
			<summary>Content that only flows around the right side of the object. </summary>
		</member>
		<member name="N:System.Windows.Annotations">
			<summary>Provides classes to support user-created annotations on content displayed in WPF document viewing controls.</summary>
		</member>
		<member name="T:System.Windows.Annotations.Annotation">
			<summary>Represents a user annotation in the Microsoft Annotations Framework.</summary>
		</member>
		<member name="M:System.Windows.Annotations.Annotation.#ctor">
			<summary>This constructor supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName)">
			<summary>Initializes a new instance of the Annotation class that has a specified typename and namespace.</summary>
			<param name="annotationType">The typename of the annotation.</param>
		</member>
		<member name="M:System.Windows.Annotations.Annotation.#ctor(System.Xml.XmlQualifiedName,System.Guid,System.DateTime,System.DateTime)">
			<summary>This constructor supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<param name="lastModificationTime">The date and time the annotation was last modified.</param>
			<param name="creationTime">The date and time the annotation was first created.</param>
			<param name="annotationType">The typename of the annotation.</param>
			<param name="id">The globally unique identifier (GUID) for the annotation.</param>
		</member>
		<member name="E:System.Windows.Annotations.Annotation.AnchorChanged">
			<summary>Occurs when an Anchor is added, removed, or modified.</summary>
		</member>
		<member name="E:System.Windows.Annotations.Annotation.AuthorChanged">
			<summary>Occurs when an Author is added, removed, or modified. </summary>
		</member>
		<member name="E:System.Windows.Annotations.Annotation.CargoChanged">
			<summary>Occurs when a Cargo is added, removed, or modified.</summary>
		</member>
		<member name="M:System.Windows.Annotations.Annotation.GetSchema">
			<summary>Always returns null.  See Annotations Schema for schema details.</summary>
			<returns>Always null.  See Annotations Schema for schema details.</returns>
		</member>
		<member name="M:System.Windows.Annotations.Annotation.ReadXml(System.Xml.XmlReader)">
			<summary>Deserializes the <see cref="T:System.Windows.Annotations.Annotation"></see> from a specified XmlReader. </summary>
			<param name="reader">The XML reader to use to deserialize the annotation.</param>
			<exception cref="T:System.ArgumentNullException">reader is null.</exception>
			<exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.Annotation"></see> is not valid.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Annotation.WriteXml(System.Xml.XmlWriter)">
			<summary>Serializes the annotation to a specified XmlWriter. </summary>
			<param name="writer">The XML writer to use to serialize the annotation.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Annotations.Annotation.AnnotationType"></see> is not valid.</exception>
			<exception cref="T:System.ArgumentNullException">writer is null.</exception>
		</member>
		<member name="P:System.Windows.Annotations.Annotation.Anchors">
			<summary>Gets a collection of zero or more AnnotationResource anchor elements that define the data selection(s) being annotated. </summary>
			<returns>A collection of zero or more AnnotationResource anchor elements.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Annotation.AnnotationType">
			<summary>Gets the <see cref="T:System.Xml.XmlQualifiedName"></see> of the annotation type.</summary>
			<returns>The XML qualified name for this kind of annotation.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Annotation.Authors">
			<summary>Gets a collection of zero or more author strings that identify who created the <see cref="T:System.Windows.Annotations.Annotation"></see>.</summary>
			<returns>A collection of zero or more author strings.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Annotation.Cargos">
			<summary>Gets a collection of zero or more AnnotationResource cargo elements that contain data for the annotation. </summary>
			<returns>A collection of zero or more AnnotationResource cargo elements.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Annotation.CreationTime">
			<summary>Gets the date and the time that the annotation was created. </summary>
			<returns>The date and the time the annotation was created.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Annotation.Id">
			<summary>Gets the globally unique identifier (GUID) of the <see cref="T:System.Windows.Annotations.Annotation"></see>. </summary>
			<returns>The GUID of the annotation.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Annotation.LastModificationTime">
			<summary>Gets the date and the time that the annotation was last modified. </summary>
			<returns>The date and the time the annotation was last modified.</returns>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationAction">
			<summary>Specifies the actions that occur with <see cref="T:System.Windows.Annotations.Annotation"></see> author, anchor, and cargo resources.</summary>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationAction.Added">
			<summary>The component was added to the annotation.</summary>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationAction.Modified">
			<summary>The component was modified within the annotation.</summary>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationAction.Removed">
			<summary>The component was removed from the annotation.</summary>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventArgs">
			<summary> Provides data for the AuthorChanged event. </summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Object)">
			<summary> Initializes a new instance of the AnnotationAuthorChangedEventArgs class. </summary>
			<param name="annotation">The annotation raising the event.</param>
			<param name="author">The author object being changed by the event.</param>
			<param name="action">The author operation performed: <see cref="F:System.Windows.Annotations.AnnotationAction.Added"></see>, <see cref="F:System.Windows.Annotations.AnnotationAction.Removed"></see>, or <see cref="F:System.Windows.Annotations.AnnotationAction.Modified"></see>.</param>
			<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">action is an invalid AnnotationAction.</exception>
			<exception cref="T:System.ArgumentNullException">annotation or action is a null reference (Nothing in Visual Basic).</exception>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Action">
			<summary> Gets the author change operation for the event. </summary>
			<returns>The author change operation: <see cref="F:System.Windows.Annotations.AnnotationAction.Added"></see>, <see cref="F:System.Windows.Annotations.AnnotationAction.Removed"></see>, or <see cref="F:System.Windows.Annotations.AnnotationAction.Modified"></see>.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Annotation">
			<summary> Gets the annotation that raised the event. </summary>
			<returns>The annotation that raised the event.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationAuthorChangedEventArgs.Author">
			<summary> Gets the author object that is the target of the event. </summary>
			<returns>The author object that is the target of the event.</returns>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationAuthorChangedEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Annotations.Annotation.AuthorChanged"></see> event raised by the <see cref="T:System.Windows.Annotations.Annotation"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationDocumentPaginator">
			<summary>Provides a <see cref="T:System.Windows.Documents.DocumentPaginator"></see> for printing a document together with its associated annotations.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator"></see> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator"></see> and <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see>.</summary>
			<param name="annotationStore">The store to retrieve the annotations from.</param>
			<param name="originalPaginator">The document to add the printed annotations to.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator"></see> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator"></see> and annotation storage <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="annotationStore">The annotation storage stream to retrieve the annotations from.</param>
			<param name="originalPaginator">The document to add the printed annotations to.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.Windows.Annotations.Storage.AnnotationStore,System.Windows.FlowDirection)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator"></see> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator"></see>, <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see>, and text <see cref="T:System.Windows.FlowDirection"></see>.</summary>
			<param name="flowDirection">The text flow direction, <see cref="F:System.Windows.FlowDirection.LeftToRight"></see> or <see cref="F:System.Windows.FlowDirection.RightToLeft"></see>.</param>
			<param name="annotationStore">The store to retrieve the annotations from.</param>
			<param name="originalPaginator">The document to add the printed annotations to.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.#ctor(System.Windows.Documents.DocumentPaginator,System.IO.Stream,System.Windows.FlowDirection)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationDocumentPaginator"></see> class based on a specified <see cref="T:System.Windows.Documents.DocumentPaginator"></see>, annotation storage <see cref="T:System.IO.Stream"></see>, and text <see cref="T:System.Windows.FlowDirection"></see>.</summary>
			<param name="flowDirection">The text flow direction, <see cref="F:System.Windows.FlowDirection.LeftToRight"></see> or <see cref="F:System.Windows.FlowDirection.RightToLeft"></see>.</param>
			<param name="annotationStore">The annotation storage stream to retrieve the annotations from.</param>
			<param name="originalPaginator">The document to add the printed annotations to.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.CancelAsync(System.Object)">
			<summary>Cancels all asynchronous operations initiated with a given userState object.</summary>
			<param name="userState">The unique application-defined identifier passed in the call to start the asynchronous operation.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCount">
			<summary>Forces a pagination of the content, updates <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount"></see> with the new total, and sets <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid"></see> to true.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.ComputePageCountAsync(System.Object)">
			<summary>Starts an asynchronous pagination of the content, updates <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount"></see> with the new total, and sets <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid"></see> to true when it is finished.</summary>
			<param name="userState">An application-defined object for identifying the asynchronous operation.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPage(System.Int32)">
			<summary>Returns a <see cref="T:System.Windows.Documents.DocumentPage"></see> together with associated user-annotations for a specified page number.</summary>
			<returns>The <see cref="T:System.Windows.Documents.DocumentPage"></see> for the specified pageNumber; or <see cref="F:System.Windows.Documents.DocumentPage.Missing"></see>, if the specified pageNumber does not exist.</returns>
			<param name="pageNumber">The zero-based page number of the <see cref="T:System.Windows.Documents.DocumentPage"></see> to return.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationDocumentPaginator.GetPageAsync(System.Int32,System.Object)">
			<summary>asynchronously returns a <see cref="T:System.Windows.Documents.DocumentPage"></see> together with associated user-annotations for a specified page number.</summary>
			<param name="pageNumber">The zero-based page number of the <see cref="T:System.Windows.Documents.DocumentPage"></see> to retrieve.</param>
			<param name="userState">An application-defined object that is used to identify the asynchronous operation.</param>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid">
			<summary>Gets a value that indicates whether <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount"></see> is the total number of pages.</summary>
			<returns>true if pagination is complete and <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount"></see> represents the total number of pages; otherwise, false if pagination is in process and <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount"></see> represents the number of pages currently formatted. </returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageCount">
			<summary>Gets a value that indicates the number of pages currently formatted.</summary>
			<returns>If <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid"></see> is true, the total number of annotation pages; otherwise if <see cref="P:System.Windows.Annotations.AnnotationDocumentPaginator.IsPageCountValid"></see> is false, the number of pages currently formatted (pagination in process).</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.PageSize">
			<summary>Gets or sets the suggested width and height of each page.</summary>
			<returns>The suggested width and height for formatting pages.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationDocumentPaginator.Source">
			<summary>Gets the source document that is being paginated.</summary>
			<returns>The source document that is being paginated.</returns>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationHelper">
			<summary>Provides utility methods and commands to create and delete highlight, ink sticky note, and text sticky note annotations.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationHelper.ClearHighlightsForSelection(System.Windows.Annotations.AnnotationService)">
			<summary>Clears all highlight annotations from the current selection of the viewer control associated with the given <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</summary>
			<param name="service">The annotation service from which to remove highlight annotations.</param>
			<exception cref="T:System.ArgumentNullException">service is null.</exception>
			<exception cref="T:System.ArgumentException">service is not enabled.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationHelper.CreateHighlightForSelection(System.Windows.Annotations.AnnotationService,System.String,System.Windows.Media.Brush)">
			<summary>Creates a highlight annotation on the current selection of the viewer control associated with the specified <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</summary>
			<returns>The highlight annotation; or null, if there is no selected content to highlight.</returns>
			<param name="service">The annotation service to use to create the highlight annotation.</param>
			<param name="highlightBrush">The brush to use to draw the highlight over the selected content.</param>
			<param name="author">The author of the annotation.</param>
			<exception cref="T:System.InvalidOperationException">The viewer control contains no content selection.</exception>
			<exception cref="T:System.ArgumentException">service is not enabled. -or-highlightBrush in not a <see cref="T:System.Windows.Media.SolidColorBrush"></see>.</exception>
			<exception cref="T:System.ArgumentNullException">service is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationHelper.CreateInkStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
			<summary>Creates an ink sticky note annotation on the current selection of the viewer control associated with the specified <see cref="T:System.Windows.Annotations.AnnotationService"></see>..</summary>
			<returns>The ink sticky note annotation; or null, if there is no selected content to annotate.</returns>
			<param name="service">The annotation service to use to create the ink sticky note annotation.</param>
			<param name="author">The author of the annotation.</param>
			<exception cref="T:System.InvalidOperationException">The viewer control contains no content selection.</exception>
			<exception cref="T:System.ArgumentNullException">service is null.</exception>
			<exception cref="T:System.ArgumentException">service is not enabled.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationHelper.CreateTextStickyNoteForSelection(System.Windows.Annotations.AnnotationService,System.String)">
			<summary>Creates a text sticky note annotation on the current selection of the viewer control associated with the specified <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</summary>
			<returns>The text sticky note annotation; or null, if there is no selected content to annotate.</returns>
			<param name="service">The annotation service to use to create the text sticky note annotation.</param>
			<param name="author">The author of the annotation.</param>
			<exception cref="T:System.InvalidOperationException">The viewer control contains no content selection.</exception>
			<exception cref="T:System.ArgumentNullException">service is null.</exception>
			<exception cref="T:System.ArgumentException">service is not enabled.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationHelper.DeleteInkStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
			<summary>Deletes ink sticky note annotations that are wholly contained within the current selection of the viewer control associated with the given <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</summary>
			<param name="service">The annotation service from which to delete ink sticky note annotations.</param>
			<exception cref="T:System.ArgumentNullException">service is null.</exception>
			<exception cref="T:System.ArgumentException">service is not enabled.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationHelper.DeleteTextStickyNotesForSelection(System.Windows.Annotations.AnnotationService)">
			<summary>Deletes text sticky note annotations that are wholly contained within the current selection of the viewer control associated with the given <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</summary>
			<param name="service">The annotation service from which to delete text sticky note annotations.</param>
			<exception cref="T:System.ArgumentNullException">service is null.</exception>
			<exception cref="T:System.ArgumentException">service is not enabled.</exception>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationResource">
			<summary>Represents a content anchor or cargo resource for an <see cref="T:System.Windows.Annotations.Annotation"></see>.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationResource.#ctor">
			<summary>This constructor supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.Guid)">
			<summary>This constructor supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<param name="id">The globally unique identifier (GUID) that identifies this resource.</param>
			<exception cref="T:System.ArgumentException">id is equal to Guid.Empty.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationResource.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationResource"></see> class with a specified name.</summary>
			<param name="name">A name to identify this resource from other <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> and <see cref="P:System.Windows.Annotations.Annotation.Cargos"></see> defined in the same annotation.</param>
			<exception cref="T:System.ArgumentNullException">name is null.</exception>
		</member>
		<member name="E:System.Windows.Annotations.AnnotationResource.System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationResource.GetSchema">
			<summary>Always returns null.  See Annotations Schema for schema details.</summary>
			<returns>Always null.  See Annotations Schema for schema details.</returns>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationResource.ReadXml(System.Xml.XmlReader)">
			<summary>Deserializes the <see cref="T:System.Windows.Annotations.AnnotationResource"></see> from a specified <see cref="T:System.Xml.XmlReader"></see>.</summary>
			<param name="reader">The XML reader to deserialize the <see cref="T:System.Windows.Annotations.AnnotationResource"></see> from.</param>
			<exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.AnnotationResource"></see> is not valid.</exception>
			<exception cref="T:System.ArgumentNullException">reader is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationResource.WriteXml(System.Xml.XmlWriter)">
			<summary>Serializes the <see cref="T:System.Windows.Annotations.AnnotationResource"></see> to a specified <see cref="T:System.Xml.XmlWriter"></see>.</summary>
			<param name="writer">The XML writer to serialize the <see cref="T:System.Windows.Annotations.AnnotationResource"></see>.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Annotations.Annotation.AnnotationType"></see> is not valid.</exception>
			<exception cref="T:System.ArgumentNullException">writer is null.</exception>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationResource.ContentLocators">
			<summary>Gets the collection of <see cref="T:System.Windows.Annotations.ContentLocatorBase"></see> elements contained in this resource.</summary>
			<returns>The collection of content locators contained in this resource.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationResource.Contents">
			<summary>Gets a collection of the <see cref="T:System.Xml.XmlElement"></see> objects that define the content of this resource.</summary>
			<returns>The collection of the <see cref="T:System.Xml.XmlElement"></see> objects that define the content of this resource.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationResource.Id">
			<summary>Gets the GUID of this resource.</summary>
			<returns>The globally unique identifier (GUID) that identifies this resource.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationResource.Name">
			<summary>Gets or sets a name for this <see cref="T:System.Windows.Annotations.AnnotationResource"></see>.</summary>
			<returns>The name assigned to this <see cref="T:System.Windows.Annotations.AnnotationResource"></see> to distinguish it from other <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> or <see cref="P:System.Windows.Annotations.Annotation.Cargos"></see> in the annotation.</returns>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationResourceChangedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged"></see> and <see cref="E:System.Windows.Annotations.Annotation.CargoChanged"></see> events.  This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)">
			<summary>Initializes a new instance of the <see cref="M:System.Windows.Annotations.AnnotationResourceChangedEventArgs.#ctor(System.Windows.Annotations.Annotation,System.Windows.Annotations.AnnotationAction,System.Windows.Annotations.AnnotationResource)"></see> class.</summary>
			<param name="A ction">The action of the event.</param>
			<param name="R esource">The <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> or <see cref="P:System.Windows.Annotations.Annotation.Cargos"></see> resource of the event.</param>
			<param name="A nnotation">The annotation that raised the event.</param>
			<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">action is not a valid <see cref="T:System.Windows.Annotations.AnnotationAction"></see> value.</exception>
			<exception cref="T:System.ArgumentNullException">annotation or action is null.</exception>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Action">
			<summary>Gets the action of the annotation <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource"></see>.</summary>
			<returns>The action of the annotation <see cref="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource"></see>.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Annotation">
			<summary>Gets the <see cref="T:System.Windows.Annotations.Annotation"></see> that raised the event.</summary>
			<returns>The <see cref="T:System.Windows.Annotations.Annotation"></see> that raised the event.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationResourceChangedEventArgs.Resource">
			<summary>Gets the <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> or <see cref="P:System.Windows.Annotations.Annotation.Cargos"></see> resource associated with the event.</summary>
			<returns>The annotation anchor or cargo resource that was <see cref="F:System.Windows.Annotations.AnnotationAction.Added"></see>, <see cref="F:System.Windows.Annotations.AnnotationAction.Removed"></see>, or <see cref="F:System.Windows.Annotations.AnnotationAction.Modified"></see>.</returns>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationResourceChangedEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Annotations.Annotation.AnchorChanged"></see> or <see cref="E:System.Windows.Annotations.Annotation.CargoChanged"></see> events raised by the <see cref="T:System.Windows.Annotations.Annotation"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Annotations.AnnotationService">
			<summary>Provides core services of the Microsoft Annotations Framework to manage and display user annotations.</summary>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationService"></see> class for use with a specified <see cref="T:System.Windows.Controls.DocumentViewer"></see> or <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see> control.</summary>
			<param name="viewer">The document viewing control associated with the <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</param>
			<exception cref="T:System.ArgumentNullException">viewer is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentReader)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationService"></see> class for use with a specified <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> control.</summary>
			<param name="viewer">The document reading control associated with the <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</param>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationService.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.AnnotationService"></see> class for use with a specified <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> control.</summary>
			<param name="viewer">The document viewing control associated with the <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</param>
			<exception cref="T:System.ArgumentNullException">viewer is null.</exception>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationService.ClearHighlightsCommand">
			<summary>Represents the command to clear highlight annotations from the current selection.</summary>
			<returns>The routed command to clear all highlight annotations from the current selection.</returns>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationService.CreateHighlightCommand">
			<summary>Represents the command to create a highlight annotation on the current selection.</summary>
			<returns>The routed command to create a highlight annotation on the current selection.</returns>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationService.CreateInkStickyNoteCommand">
			<summary>Represents the command to create an ink-note annotation on the current selection.</summary>
			<returns>The routed command to create an ink-note annotation on the current selection.</returns>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationService.CreateTextStickyNoteCommand">
			<summary>Represents the command to create a text-note annotation on the current selection.</summary>
			<returns>The routed command to create a text-note annotation on the current selection.</returns>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationService.DeleteAnnotationsCommand">
			<summary>Represents the command to delete all ink-note, text-note, and highlight annotations in the current selection.</summary>
			<returns>The routed command to delete all ink-note, text-note, and highlight annotations in the current selection.</returns>
		</member>
		<member name="F:System.Windows.Annotations.AnnotationService.DeleteStickyNotesCommand">
			<summary>Represents the command to delete all ink-note and text-note annotations in the current selection.</summary>
			<returns>The routed command to delete all ink-note and text-note annotations in the current selection.</returns>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationService.Enable(System.Windows.Annotations.Storage.AnnotationStore)">
			<summary>Enables the <see cref="T:System.Windows.Annotations.AnnotationService"></see> for use with a given <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see> and displays all visible annotations.</summary>
			<param name="annotationStore">The annotation store to use for reading, writing, and displaying annotations.</param>
			<exception cref="T:System.ArgumentNullException">annotationStore is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.Primitives.DocumentViewerBase)">
			<summary>Returns the <see cref="T:System.Windows.Annotations.AnnotationService"></see> instance associated with a specified document viewing control.</summary>
			<returns>The <see cref="T:System.Windows.Annotations.AnnotationService"></see> associated with the given document viewing control; or null if the specified document viewing control has no <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</returns>
			<param name="viewer">The document viewing control to return the <see cref="T:System.Windows.Annotations.AnnotationService"></see> instance for.</param>
			<exception cref="T:System.ArgumentNullException">viewer is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentReader)">
			<summary>Returns the <see cref="T:System.Windows.Annotations.AnnotationService"></see> associated with a specified <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Annotations.AnnotationService"></see> associated with the given document reader control; or null if the specified document reader has no <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</returns>
			<param name="reader">The document reader control to return the <see cref="T:System.Windows.Annotations.AnnotationService"></see> instance for.</param>
			<exception cref="T:System.ArgumentNullException">reader is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.AnnotationService.GetService(System.Windows.Controls.FlowDocumentScrollViewer)">
			<summary>Returns the <see cref="T:System.Windows.Annotations.AnnotationService"></see> associated with a specified <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Annotations.AnnotationService"></see> associated with the given document viewer control; or null if the specified viewer control has no <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</returns>
			<param name="viewer">The document viewer control to return the <see cref="T:System.Windows.Annotations.AnnotationService"></see> instance for.</param>
			<exception cref="T:System.ArgumentNullException">viewer is null.</exception>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationService.IsEnabled">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Annotations.AnnotationService"></see> is enabled.</summary>
			<returns>true if the <see cref="T:System.Windows.Annotations.AnnotationService"></see> is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Annotations.AnnotationService.Store">
			<summary>Gets the <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see> used by this <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see> used by this <see cref="T:System.Windows.Annotations.AnnotationService"></see>.</returns>
		</member>
		<member name="T:System.Windows.Annotations.ContentLocator">
			<summary>Represents an ordered set of <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> elements that identify an item of content.</summary>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocator.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.ContentLocator"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocator.Clone">
			<summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</summary>
			<returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</returns>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocator.GetSchema">
			<summary>Always returns null.  See Annotations Schema for schema details.</summary>
			<returns>Always null.  See Annotations Schema for schema details</returns>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocator.ReadXml(System.Xml.XmlReader)">
			<summary>Deserializes the <see cref="T:System.Windows.Annotations.ContentLocator"></see> from a specified <see cref="T:System.Xml.XmlReader"></see>.</summary>
			<param name="reader">The XML reader to use to deserialize the <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</param>
			<exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.ContentLocator"></see> is not valid.</exception>
			<exception cref="T:System.ArgumentNullException">reader is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)">
			<summary>Returns a value that indicates whether the starting sequence of <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> elements in a specified <see cref="T:System.Windows.Annotations.ContentLocator"></see> are identical to those in this <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</summary>
			<returns>true if the starting sequence of <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> elements in this <see cref="T:System.Windows.Annotations.ContentLocator"></see> matches those in the specified locator; otherwise, false.</returns>
			<param name="locator">The <see cref="T:System.Windows.Annotations.ContentLocator"></see> with the list of <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> elements to compare with this <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</param>
			<exception cref="T:System.ArgumentNullException">locator is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocator.WriteXml(System.Xml.XmlWriter)">
			<summary>Serializes the <see cref="T:System.Windows.Annotations.ContentLocator"></see> to a specified <see cref="T:System.Xml.XmlWriter"></see>.</summary>
			<param name="writer">The XML writer to use to serialize the <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</param>
			<exception cref="T:System.ArgumentNullException">writer is null.</exception>
		</member>
		<member name="P:System.Windows.Annotations.ContentLocator.Parts">
			<summary>Gets the collection of <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</summary>
			<returns>The collection of <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocator"></see>.</returns>
		</member>
		<member name="T:System.Windows.Annotations.ContentLocatorBase">
			<summary>Represents an object that identifies an item of content.</summary>
		</member>
		<member name="E:System.Windows.Annotations.ContentLocatorBase.System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
			<summary>This event supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorBase.Clone">
			<summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorBase"></see>.</summary>
			<returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorBase"></see>.</returns>
		</member>
		<member name="T:System.Windows.Annotations.ContentLocatorGroup">
			<summary>Represents an ordered set of <see cref="T:System.Windows.Annotations.ContentLocator"></see> elements that identify an item of content.</summary>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorGroup.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorGroup.Clone">
			<summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see>.</summary>
			<returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see>.</returns>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorGroup.GetSchema">
			<summary>Always returns null.  See Annotations Schema for schema details.</summary>
			<returns>Always null.  See Annotations Schema for schema details.</returns>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorGroup.ReadXml(System.Xml.XmlReader)">
			<summary>Deserializes the <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see> from a specified <see cref="T:System.Xml.XmlReader"></see>.</summary>
			<param name="reader">The XML reader to use to deserialize the <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see>.</param>
			<exception cref="T:System.Xml.XmlException">The serialized XML for the <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see> is not valid.</exception>
			<exception cref="T:System.ArgumentNullException">reader is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorGroup.WriteXml(System.Xml.XmlWriter)">
			<summary>Serializes the <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see> to a specified <see cref="T:System.Xml.XmlWriter"></see>.</summary>
			<param name="writer">The XML writer to use to serialize the <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see>.</param>
			<exception cref="T:System.ArgumentNullException">writer is null.</exception>
		</member>
		<member name="P:System.Windows.Annotations.ContentLocatorGroup.Locators">
			<summary>Gets the collection of the <see cref="T:System.Windows.Annotations.ContentLocator"></see> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see>.</summary>
			<returns>The collection of <see cref="T:System.Windows.Annotations.ContentLocator"></see> elements that make up this <see cref="T:System.Windows.Annotations.ContentLocatorGroup"></see>.</returns>
		</member>
		<member name="T:System.Windows.Annotations.ContentLocatorPart">
			<summary>Represents a set of name/value pairs that identify an item of content.</summary>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorPart.#ctor(System.Xml.XmlQualifiedName)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> class with a specified type name and namespace.</summary>
			<param name="partType">The type name and namespace for the <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see>.</param>
			<exception cref="T:System.ArgumentException">The strings partType.<see cref="P:System.Xml.XmlQualifiedName.Name"></see> or partType.<see cref="P:System.Xml.XmlQualifiedName.Namespace"></see> (or both) are null or empty.</exception>
			<exception cref="T:System.ArgumentNullException">The partType parameter is null.</exception>
		</member>
		<member name="E:System.Windows.Annotations.ContentLocatorPart.System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
			<summary>This event supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorPart.Clone">
			<summary>Creates a modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see>.</summary>
			<returns>A modifiable deep copy clone of this <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see>.</returns>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorPart.Equals(System.Object)">
			<summary>Returns a value that indicates whether a given <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> is identical to this <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see>.</summary>
			<returns>true if the <see cref="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs"></see> within both parts are identical; otherwise, false.</returns>
			<param name="obj">The part to compare for equality.</param>
		</member>
		<member name="M:System.Windows.Annotations.ContentLocatorPart.GetHashCode">
			<summary>Returns the hash code for this part.</summary>
			<returns>The hash code for this part.</returns>
		</member>
		<member name="P:System.Windows.Annotations.ContentLocatorPart.NameValuePairs">
			<summary>Gets a collection of the name/value pairs that define this part.</summary>
			<returns>The collection of the name/value pairs that define this <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see>.</returns>
		</member>
		<member name="P:System.Windows.Annotations.ContentLocatorPart.PartType">
			<summary>Gets the type name and namespace of the part.</summary>
			<returns>The type name and namespace of the part.</returns>
		</member>
		<member name="N:System.Windows.Annotations.Storage">
			<summary>Provides classes that define the storage architecture and mediums to save and retreive user-created annotations.</summary>
		</member>
		<member name="T:System.Windows.Annotations.Storage.AnnotationStore">
			<summary>When overridden in a derived class, represents a data store for writing and reading user annotations.    </summary>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see> class.  </summary>
		</member>
		<member name="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged">
			<summary>Occurs when an anchor on any <see cref="T:System.Windows.Annotations.Annotation"></see> in the store changes.</summary>
		</member>
		<member name="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged">
			<summary>Occurs when an author on any <see cref="T:System.Windows.Annotations.Annotation"></see> in the store changes.</summary>
		</member>
		<member name="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged">
			<summary>Occurs when a cargo on any <see cref="T:System.Windows.Annotations.Annotation"></see> in the store changes.</summary>
		</member>
		<member name="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged">
			<summary>Occurs when an <see cref="T:System.Windows.Annotations.Annotation"></see> is added to or deleted from the store.</summary>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.AddAnnotation(System.Windows.Annotations.Annotation)">
			<summary>Adds a new <see cref="T:System.Windows.Annotations.Annotation"></see> to the store.</summary>
			<param name="newAnnotation">The annotation to add to the store.</param>
			<exception cref="T:System.ArgumentNullException">newAnnotation is null.</exception>
			<exception cref="T:System.ArgumentException">An <see cref="T:System.Windows.Annotations.Annotation"></see> with the same <see cref="P:System.Windows.Annotations.Annotation.Id"></see> property value already exists in the store.</exception>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.DeleteAnnotation(System.Guid)">
			<summary>Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id"></see> from the store.</summary>
			<returns>The annotation that was deleted; otherwise, null if an annotation with the specified annotationId was not found in the store.</returns>
			<param name="annotationId">The globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id"></see> property of the annotation to be deleted.</param>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.Dispose(System.Boolean)">
			<summary>Releases the unmanaged resources used by the store and optionally releases the managed resources.</summary>
			<param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.Flush">
			<summary>Forces any annotation data retained in internal buffers to be written to the underlying storage device.</summary>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotation(System.Guid)">
			<summary>Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id"></see> from the store.</summary>
			<returns>The annotation with the given annotationId; or null, if an annotation with the specified annotationId was not found in the store.</returns>
			<param name="annotationId">The globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id"></see> property of the annotation to be returned.</param>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations">
			<summary>Returns a list of all the annotations in the store.</summary>
			<returns>The list of all annotations currently contained in the store.</returns>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
			<summary>Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> sequence.</summary>
			<returns>The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> with locators that start and match the given anchorLocator; otherwise, null if no matching annotations were found.</returns>
			<param name="anchorLocator">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> sequence to return matching annotations for.</param>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAnchorChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AnchorChanged"></see> event.</summary>
			<param name="args">The event data.</param>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnAuthorChanged(System.Windows.Annotations.AnnotationAuthorChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.AuthorChanged"></see> event.</summary>
			<param name="args">The event data.</param>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnCargoChanged(System.Windows.Annotations.AnnotationResourceChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.CargoChanged"></see> event.</summary>
			<param name="args">The event data.</param>
		</member>
		<member name="M:System.Windows.Annotations.Storage.AnnotationStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="P:System.Windows.Annotations.Storage.AnnotationStore.AutoFlush">
			<summary>Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store. </summary>
			<returns>true if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, false if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.AnnotationStore.Flush"></see>.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Storage.AnnotationStore.IsDisposed">
			<summary>Gets a value that indicates whether <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called.</summary>
			<returns>true if <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called; otherwise, false.  The default is false.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Storage.AnnotationStore.SyncRoot">
			<summary>Gets the object to use as a synchronization lock for <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see> critical sections.</summary>
			<returns>The object to use as a synchronization lock for <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see> critical sections.</returns>
		</member>
		<member name="T:System.Windows.Annotations.Storage.StoreContentAction">
			<summary>Specifies the actions performed on an <see cref="T:System.Windows.Annotations.Annotation"></see> in an <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see>.</summary>
		</member>
		<member name="F:System.Windows.Annotations.Storage.StoreContentAction.Added">
			<summary>The <see cref="T:System.Windows.Annotations.Annotation"></see> was added to the store.</summary>
		</member>
		<member name="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted">
			<summary>The <see cref="T:System.Windows.Annotations.Annotation"></see> was deleted from the store.</summary>
		</member>
		<member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)">
			<summary>Initializes a new instance of the <see cref="M:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.#ctor(System.Windows.Annotations.Storage.StoreContentAction,System.Windows.Annotations.Annotation)"></see> class.</summary>
			<param name="annotation">The annotation added or removed.</param>
			<param name="action">The action of the event.</param>
			<exception cref="T:System.ArgumentNullException">annotation or action is null.</exception>
		</member>
		<member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Action">
			<summary>Gets the action performed.</summary>
			<returns>An action <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Added"></see> or <see cref="F:System.Windows.Annotations.Storage.StoreContentAction.Deleted"></see> value that identifies the operation performed.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Storage.StoreContentChangedEventArgs.Annotation">
			<summary>Gets the <see cref="T:System.Windows.Annotations.Annotation"></see> that changed in the store.</summary>
			<returns>The <see cref="T:System.Windows.Annotations.Annotation"></see> that changed in the store.</returns>
		</member>
		<member name="T:System.Windows.Annotations.Storage.StoreContentChangedEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Annotations.Storage.AnnotationStore.StoreContentChanged"></see> event raised by the <see cref="T:System.Windows.Annotations.Storage.AnnotationStore"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Annotations.Storage.XmlStreamStore">
			<summary>Represents an XML data store for writing and reading user annotations.</summary>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore"></see> class with a specified I/O <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="stream">The I/O stream for reading and writing user annotations.</param>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore"></see> class with a specified I/O <see cref="T:System.IO.Stream"></see> and dictionary of known compatible namespaces.</summary>
			<param name="stream">The I/O stream for reading and writing user annotations.</param>
			<param name="knownNamespaces">A dictionary with a list of known compatible namespaces.</param>
			<exception cref="T:System.Xml.XmlException">stream contains invalid XML.</exception>
			<exception cref="T:System.ArgumentException">The knownNamespaces dictionary contains a duplicate namespace.-or-The knownNamespaces dictionary contains an element that has a null key.</exception>
			<exception cref="T:System.ArgumentNullException">stream is null.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)">
			<summary>Adds a new <see cref="T:System.Windows.Annotations.Annotation"></see> to the store.</summary>
			<param name="newAnnotation">The annotation to add to the store.</param>
			<exception cref="T:System.InvalidOperationException">An I/O <see cref="T:System.IO.Stream"></see> has not been set for the store.</exception>
			<exception cref="T:System.ArgumentNullException">newAnnotation is null.</exception>
			<exception cref="T:System.ArgumentException">An <see cref="T:System.Windows.Annotations.Annotation"></see> with the same <see cref="P:System.Windows.Annotations.Annotation.Id"></see> already is in the store.</exception>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)">
			<summary>Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id"></see> from the store. </summary>
			<returns>The annotation that was deleted; otherwise, null if an annotation with the specified annotationId was not found in the store.</returns>
			<param name="annotationId">The globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id"></see> property of the annotation to be deleted.</param>
			<exception cref="T:System.InvalidOperationException">An I/O <see cref="T:System.IO.Stream"></see> has not been set for the store.</exception>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush">
			<summary>Forces any annotation data retained in internal buffers to be written to the underlying storage device.</summary>
			<exception cref="T:System.InvalidOperationException">An I/O <see cref="T:System.IO.Stream"></see> has not been set for the store.</exception>
			<exception cref="T:System.UnauthorizedAccessException">The store I/O <see cref="T:System.IO.Stream"></see> is read-only and cannot be accessed for output.</exception>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)">
			<summary>Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id"></see> from the store.</summary>
			<returns>The annotation with the given annotationId; otherwise, null if an annotation with the specified annotationId was not found in the store.</returns>
			<param name="annotationId">The globally unique identifier (GUID)<see cref="P:System.Windows.Annotations.Annotation.Id"></see> property of the annotation to be returned.</param>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations">
			<summary>Returns a list of all the annotations in the store.</summary>
			<returns>The list of all annotations that are currently in the store.</returns>
			<exception cref="T:System.ObjectDisposedException"><see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose"></see> has been called on the store.</exception>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)">
			<summary>Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> sequence.</summary>
			<returns>The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors"></see> with locators that start and match the given anchorLocator; otherwise, null if no matching annotations were found.</returns>
			<param name="anchorLocator">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart"></see> sequence to return matching annotations for.</param>
		</member>
		<member name="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)">
			<summary>Returns a list of namespaces that are compatible as an input namespace.</summary>
			<returns>A list of compatible namespaces that match name; otherwise, null if there are no compatible namespaces found.</returns>
			<param name="name">The starting URI sequence to return the list of namespaces for.</param>
		</member>
		<member name="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush">
			<summary>Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.</summary>
			<returns>true if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, false if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush"></see>.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces">
			<summary>Gets a list of the namespaces that were ignored when the XML stream was loaded.</summary>
			<returns>The list of the namespaces that were ignored when the XML stream was loaded.</returns>
		</member>
		<member name="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces">
			<summary>Gets a list of all namespaces that are predefined by the Annotations Framework.</summary>
			<returns>The list of namespaces that are predefined by the Microsoft Annotations Framework.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ButtonAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Button"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.#ctor(System.Windows.Controls.Button)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer"></see> class.</summary>
			<param name="owner">The element associated with this automation peer.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type of the element that is associated with the UI Automation peer.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the control that is associated with this UI Automation peer.</summary>
			<returns>A string that contains "Button".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the object that supports the specified control pattern of the element that is associated with this automation peer.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke"></see>, this method returns a this pointer, otherwise this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonAutomationPeer.System.Windows.Automation.Provider.IInvokeProvider.Invoke">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer">
			<summary>When overridden in derived classes, creates a link between UI Automation and <see cref="T:System.Windows.Controls.Primitives.ButtonBase"></see> elements.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.ButtonBase)">
			<summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ButtonBase"></see> that is associated with this peer.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAcceleratorKeyCore">
			<summary>Gets the  for the element associated with this <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey"></see>.</summary>
			<returns>A string containing the accelerator key.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetAutomationIdCore">
			<summary>Gets the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId"></see> for the element associated with this <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"></see>.</summary>
			<returns>The string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.AutomationId"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ButtonBaseAutomationPeer.GetNameCore">
			<summary>Gets the name of the class of the element associated with this <see cref="T:System.Windows.Automation.Peers.ButtonBaseAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>A string that contains the class name, minus the accelerator key.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.CheckBox"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.#ctor(System.Windows.Controls.CheckBox)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.CheckBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationControlType"></see> for the element associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.CheckBox"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.CheckBoxAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the element associated with this <see cref="T:System.Windows.Automation.Peers.CheckBoxAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "CheckBox".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ComboBox"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.#ctor(System.Windows.Controls.ComboBox)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ComboBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> class.</summary>
			<param name="item">The <see cref="T:System.Windows.Controls.ComboBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ComboBox"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetChildrenCore">
			<summary>Gets a collection of child elements. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>A collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the class that defines the type that is associated with this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ComboBox".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for this <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"></see>.</summary>
			<returns>If pattern is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value"></see> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse"></see>, this method returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.ComboBoxAutomationPeer"></see>; otherwise, this method calls the base implementation on <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"></see>. </returns>
			<param name="pattern">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ComboBoxAutomationPeer.System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.ContentTextAutomationPeer">
			<summary>Represents a base class for exposing <see cref="T:System.Windows.Automation.TextPattern"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ContentTextAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
			<summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Automation.TextPattern"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentTextAutomationPeer"></see>.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ContextMenu"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.#ctor(System.Windows.Controls.ContextMenu)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ContextMenu"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.ContextMenu"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ContextMenuAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ContextMenu"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ContextMenu".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.DocumentAutomationPeer">
			<summary>Exposes <see cref="F:System.Windows.Automation.ControlType.Document"></see> control types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the control that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetBoundingRectangleCore">
			<summary>Gets the <see cref="T:System.Windows.Rect"></see> that represents the screen coordinates of the element that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"></see>.</summary>
			<returns>The bounding rectangle.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements for the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>Because <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see> gives access to its content through <see cref="T:System.Windows.Automation.TextPattern"></see>, this method always returns null.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Document".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetClickablePointCore">
			<summary>Gets a <see cref="T:System.Windows.Point"></see> that represents the clickable space that is on the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"></see>.</summary>
			<returns>The point that represents the clickable space that is on the element.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see>. </summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text"></see>, this method returns an <see cref="T:System.Windows.Automation.Provider.ITextProvider"></see> reference.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsControlElementCore">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see> is understood by the end user as interactive or the user might understand the <see cref="T:System.Windows.FrameworkContentElement"></see> as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>true.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentAutomationPeer.IsOffscreenCore">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see> is off the screen. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"></see>.</summary>
			<returns>true if the element is not on the screen; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentPageView)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer.GetAutomationIdCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.AutomationIdentifier"></see> for the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"></see>.</summary>
			<returns>A string that contains the automation identifier.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.DocumentViewer"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.#ctor(System.Windows.Controls.DocumentViewer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.DocumentViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.DocumentViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "DocumentViewer".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.DocumentViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer"></see>. </summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem"></see>, this method returns the <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see> for this <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer"></see>. This method also sets <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer"></see> as the <see cref="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource"></see>. </returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.DocumentViewerBase)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "DocumentViewer".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.DocumentViewerBaseAutomationPeer"></see>. </summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text"></see>, this method returns an <see cref="T:System.Windows.Automation.Provider.ITextProvider"></see> reference. </returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.ExpanderAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Expander"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.#ctor(System.Windows.Controls.Expander)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Expander"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Expander"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Expander"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Expander".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Expander"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer"></see>. </summary>
			<returns>If pattern is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse"></see>, this method returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer"></see>, otherwise this method calls the base implementation on <see cref="T:System.Windows.Automation.Peers.UIElementAutomationPeer"></see> which returns null.</returns>
			<param name="pattern">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ExpanderAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.FixedPageAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Documents.FixedPage"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.#ctor(System.Windows.Documents.FixedPage)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Documents.FixedPage"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Documents.FixedPage"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FixedPageAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Documents.FixedPage"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FixedPageAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "FixedPage".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentPageViewer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentPageViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains " FlowDocumentPageViewer".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentReader)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer"></see>. </summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.MultipleView"></see>, this method returns a this pointer. Otherwise, this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentReaderAutomationPeer.System.Windows.Automation.Provider.IMultipleViewProvider.SetCurrentView(System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.#ctor(System.Windows.Controls.FlowDocumentScrollViewer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "FlowDocumentScrollViewer".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see>. </summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem"></see>, this method returns the <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see> for this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see>. This method also sets this <see cref="T:System.Windows.Automation.Peers.FlowDocumentScrollViewerAutomationPeer"></see> as the <see cref="P:System.Windows.Automation.Peers.AutomationPeer.EventsSource"></see>.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.FrameAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Frame"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.#ctor(System.Windows.Controls.Frame)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Frame"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Frame"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Frame"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Frame".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.FrameworkContentElement"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.#ctor(System.Windows.FrameworkContentElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetAutomationIdCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.AutomationIdentifier"></see> for the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Automation.AutomationIdentifier"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetHelpTextCore">
			<summary>Gets the string that describes the functionality of the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"></see>.</summary>
			<returns>The string describing the functionality of the element.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer.GetLabeledByCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Label"></see> that is targeted to the <see cref="T:System.Windows.FrameworkContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkContentElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label"></see>.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.FrameworkElement"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.#ctor(System.Windows.FrameworkElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.FrameworkElement"></see> associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetAutomationIdCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.AutomationIdentifier"></see> for the <see cref="T:System.Windows.FrameworkElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"></see>.</summary>
			<returns>The automation identifier for the element associated with the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"></see>, or <see cref="F:System.String.Empty"></see> if there isn't an automation identifier.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetHelpTextCore">
			<summary>Gets the string that describes the functionality of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"></see>.</summary>
			<returns>The help text, usually from the <see cref="T:System.Windows.Controls.ToolTip"></see>, or <see cref="F:System.String.Empty"></see> if there is no help text.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetLabeledByCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Label"></see> that is targeted to the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.FrameworkElementAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The text label of the element that is associated with this automation peer.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.GridSplitter"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.#ctor(System.Windows.Controls.GridSplitter)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.GridSplitter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.GridSplitter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "GridSplitter".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>. </summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform"></see>, this method returns a this pointer; otherwise this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridSplitterAutomationPeer.System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.GridViewAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.GridView"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.#ctor(System.Windows.Controls.GridView,System.Windows.Controls.ListView)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.GridView"></see> associated with this <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer"></see>.</param>
			<param name="listview">The listview that the <see cref="T:System.Windows.Controls.GridView"></see> is using as a view mode.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System.Windows.Automation.Peers.IViewAutomationPeer.ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewAutomationPeer.System.Windows.Automation.Peers.IViewAutomationPeer.ViewDetached">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer">
			<summary>Exposes the cells in a <see cref="T:System.Windows.Controls.GridView"></see> to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>If this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer"></see> is associated with a <see cref="T:System.Windows.Controls.TextBlock"></see> element, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text"></see>; otherwise, this method returns <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>The name of the element.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem"></see> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.TableItem"></see>, this method returns the current <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer"></see>.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewCellAutomationPeer.IsControlElementCore">
			<summary>Gets or sets a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer"></see> is understood by the end user as interactive or the user might understand the element as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>If this <see cref="T:System.Windows.Automation.Peers.GridViewCellAutomationPeer"></see> is associated with a <see cref="T:System.Windows.Controls.TextBlock"></see> element, this method returns true; otherwise, this method returns a list of child elements.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.#ctor(System.Windows.Controls.GridViewColumnHeader)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.HeaderItem"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "GridViewColumnHeader".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer"></see>. </summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Transform"></see> or <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke"></see>, this method returns a this pointer; otherwise this method returns null.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System.Windows.Automation.Provider.IInvokeProvider.Invoke">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer.System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.#ctor(System.Windows.Controls.GridViewHeaderRowPresenter)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Header"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "GridViewHeaderRowPresenter".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer">
			<summary>Exposes the data items in the collection of <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> in <see cref="T:System.Windows.Controls.GridView"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ListViewAutomationPeer)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer"></see> class.</summary>
			<param name="owner">The data item that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer"></see>.</param>
			<param name="listviewAP">The <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see> that is the parent of this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.DataItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GridViewItemAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.GridViewItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ListViewItem".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.GroupBox"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.#ctor(System.Windows.Controls.GroupBox)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.GroupBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.GroupBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.GroupBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "GroupBox".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupBoxAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The string that contains the label.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.GroupItemAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.GroupItem"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.#ctor(System.Windows.Controls.GroupItem)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.GroupItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.GroupItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Group"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.GroupItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.GroupItemAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.GroupItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.GroupItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "GroupItem".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Documents.Hyperlink"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.#ctor(System.Windows.Documents.Hyperlink)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Documents.Hyperlink"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Documents.Hyperlink"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Hyperlink"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Documents.Hyperlink"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Hyperlink".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.Documents.Hyperlink"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The string that contains the label.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Documents.Hyperlink"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke"></see>, this method returns a this pointer; otherwise, this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.IsControlElementCore">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Documents.Hyperlink"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.HyperlinkAutomationPeer"></see> is understood by the end user as interactive the user might understand the <see cref="T:System.Windows.Documents.Hyperlink"></see> as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>true.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.HyperlinkAutomationPeer.System.Windows.Automation.Provider.IInvokeProvider.Invoke">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.ImageAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Image"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.#ctor(System.Windows.Controls.Image)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Image"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Image"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Image"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ImageAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Image"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ImageAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Image".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.InkCanvas"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.#ctor(System.Windows.Controls.InkCanvas)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.InkCanvas"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.InkCanvas"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.InkCanvasAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.InkCanvas"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "InkCanvas".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.InkPresenter"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.#ctor(System.Windows.Controls.InkPresenter)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.InkPresenter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.InkPresenter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.InkPresenterAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.InkPresenter"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.InkPresenterAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "InkPresenter".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ItemAutomationPeer">
			<summary>Exposes a data item in an <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection to UI Automation. This class is abstract.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.ItemsControlAutomationPeer)">
			<summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
			<param name="itemsControlAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"></see> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl"></see> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection.</param>
			<param name="item">The data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAcceleratorKeyCore">
			<summary>Gets the accelerator key for the <see cref="T:System.Windows.UIElement"></see> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey"></see>.</summary>
			<returns>The accelerator key.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAccessKeyCore">
			<summary>Gets the access key for the <see cref="T:System.Windows.UIElement"></see> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey"></see>.</summary>
			<returns>The access key.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetAutomationIdCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.AutomationIdentifier"></see> for the <see cref="T:System.Windows.UIElement"></see> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"></see>.</summary>
			<returns>A string that contains the UI Automation identifier.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetBoundingRectangleCore">
			<summary>Gets the <see cref="T:System.Windows.Rect"></see> that represents the bounding rectangle of the specified <see cref="T:System.Windows.UIElement"></see>. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"></see>.</summary>
			<returns>The bounding rectangle.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.UIElement"></see> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetClickablePointCore">
			<summary>Gets a <see cref="T:System.Windows.Point"></see> that represents the clickable space that is on the specified <see cref="T:System.Windows.UIElement"></see>. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"></see>.</summary>
			<returns>The point that represents the clickable space that is on the specified <see cref="T:System.Windows.UIElement"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetHelpTextCore">
			<summary>Gets the string that describes the functionality of the <see cref="T:System.Windows.UIElement"></see> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"></see>.</summary>
			<returns>The help text.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemStatusCore">
			<summary>Gets a string that conveys the visual status of the specified <see cref="T:System.Windows.UIElement"></see>. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus"></see>.</summary>
			<returns>The status. An example includes "Busy" or "Online".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetItemTypeCore">
			<summary>Gets a human-readable string that contains the type of item that the specified <see cref="T:System.Windows.UIElement"></see> represents. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType"></see>.</summary>
			<returns>The item type. An example includes "Mail Message" or "Contact".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetLabeledByCore">
			<summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Label"></see> that is targeted to the specified <see cref="T:System.Windows.UIElement"></see>. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see> for the element that is targeted by the <see cref="T:System.Windows.Controls.Label"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.UIElement"></see> that corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The text label.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.GetOrientationCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> is laid out in a particular direction. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation"></see>.</summary>
			<returns>The direction of the specified <see cref="T:System.Windows.UIElement"></see>. Optionally, the method returns <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None"></see> if the <see cref="T:System.Windows.UIElement"></see> is not laid out in a particular direction.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.HasKeyboardFocusCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> currently has keyboard input focus. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus"></see>.</summary>
			<returns>true if the specified <see cref="T:System.Windows.UIElement"></see> has keyboard input focus; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsContentElementCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> contains data that is presented to the user. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"></see>.</summary>
			<returns>true if the element is a content element; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsControlElementCore">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.UIElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> is understood by the end user as interactive. (The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection.) or that the user might understand the <see cref="T:System.Windows.UIElement"></see> as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>true if the element is a control; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsEnabledCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> can receive and send events. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled"></see>.</summary>
			<returns>true if the UI Automation peer can receive and send events; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsKeyboardFocusableCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> can accept keyboard focus. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable"></see>.</summary>
			<returns>true if the element can accept keyboard focus; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsOffscreenCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> is off the screen. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"></see>.</summary>
			<returns>true if the specified <see cref="T:System.Windows.UIElement"></see> is not on the screen; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsPasswordCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> contains protected content. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword"></see>.</summary>
			<returns>true if the specified <see cref="T:System.Windows.UIElement"></see> contains protected content; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.IsRequiredForFormCore">
			<summary>Gets a value that indicates whether the specified <see cref="T:System.Windows.UIElement"></see> is required to be completed on a form. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm"></see>.</summary>
			<returns>true if the specified <see cref="T:System.Windows.UIElement"></see> is required to be completed; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemAutomationPeer.SetFocusCore">
			<summary>Sets the keyboard input focus on the specified <see cref="T:System.Windows.UIElement"></see>. The <see cref="T:System.Windows.UIElement"></see> corresponds to the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus"></see>.</summary>
		</member>
		<member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.Item">
			<summary>Gets the data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>.</summary>
			<returns>The data item.</returns>
		</member>
		<member name="P:System.Windows.Automation.Peers.ItemAutomationPeer.ItemsControlAutomationPeer">
			<summary>Gets the <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"></see> that is associated with the <see cref="T:System.Windows.Controls.ItemsControl"></see> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection.</summary>
			<returns>The <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"></see>.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ItemsControl"></see> types to UI Automation. This class is abstract.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.#ctor(System.Windows.Controls.ItemsControl)">
			<summary>Provides initialization for base class values when called by the constructor of a derived class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ItemsControl"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
			<summary>When overridden in a derived class, creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> for a data item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection of this <see cref="T:System.Windows.Controls.ItemsControl"></see>.</summary>
			<param name="item">The data item that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.ItemsControl"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ItemsControlAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ItemsControl"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ItemsControlAutomationPeer"></see>.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.IViewAutomationPeer">
			<summary>Allows a customized view of a <see cref="T:System.Windows.Controls.ListBox"></see> to implement an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see>.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> class.</summary>
			<returns>The new <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> instance.</returns>
			<param name="item">The <see cref="T:System.Windows.Controls.ListViewItem"></see> that is associated with the <see cref="T:System.Windows.Controls.ListView"></see> that is used by this <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer"></see>. </param>
		</member>
		<member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetAutomationControlType">
			<summary>Gets the control type for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer"></see>.</summary>
			<returns>A value in the <see cref="T:System.Windows.Automation.Peers.AutomationControlType"></see> enumeration.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetChildren(System.Collections.Generic.List{System.Windows.Automation.Peers.AutomationPeer})">
			<summary>Gets the collection of immediate child elements of the specified UI Automation peer.</summary>
			<returns>The list of child elements.</returns>
			<param name="children">The UI Automation peer.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern that is associated with the specified patternInterface.</summary>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Called by <see cref="T:System.Windows.Controls.ListView"></see> when the collection of items changes.</summary>
			<param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.IViewAutomationPeer.ViewDetached">
			<summary>Called when the custom view is no longer applied to the <see cref="T:System.Windows.Controls.ListView"></see>.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.LabelAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Label"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.#ctor(System.Windows.Controls.Label)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Label"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Label"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Label"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Label".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.Controls.Label"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The string that contains the label.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.LabelAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Label"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"></see>.</summary>
			<returns>A null reference (Nothing in Visual Basic).</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.ListBoxAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ListBox"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.#ctor(System.Windows.Controls.ListBox)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ListBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.CreateItemAutomationPeer(System.Object)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> class.</summary>
			<param name="item">The <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ListBox".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer">
			<summary>Exposes the items in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection of this <see cref="T:System.Windows.Controls.ListBox"></see> to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>.</param>
			<param name="selectorAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"></see> that is the parent of this <see cref="T:System.Windows.Automation.Peers.ListBoxItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ListBoxItem".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem"></see>, this method returns the current instance of this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemAutomationPeer.System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer">
			<summary>Exposes the <see cref="T:System.Windows.UIElement"></see> sub-tree for the data items in a <see cref="T:System.Windows.Controls.ListBox"></see> to UI Automation. </summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.#ctor(System.Windows.Controls.ListBoxItem)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.ListItem"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ListBoxItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListBoxItemWrapperAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ListBoxItem".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ListViewAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ListView"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.#ctor(System.Windows.Controls.ListView)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ListView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.CreateItemAutomationPeer(System.Object)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> class.</summary>
			<returns>The <see cref="T:System.Windows.Automation.Peers.ItemAutomationPeer"></see> instance that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>.</returns>
			<param name="item">The <see cref="T:System.Windows.Controls.ListViewItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.ListView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.ListView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ListView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ListView".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ListViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ListView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the view that this <see cref="T:System.Windows.Controls.ListView"></see> is using. Default <see cref="T:System.Windows.Controls.ListView"></see> implementation uses the <see cref="T:System.Windows.Controls.GridView"></see>, and this method returns <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer"></see>.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="P:System.Windows.Automation.Peers.ListViewAutomationPeer.ViewAutomationPeer">
			<summary>Gets the <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer"></see> for this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>. </summary>
			<returns>The interface instance that is associated with this <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.MediaElementAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.MediaElement"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.#ctor(System.Windows.Controls.MediaElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.MediaElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.MediaElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.MediaElementAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.MediaElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MediaElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "MediaElement".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.MenuAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Menu"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.#ctor(System.Windows.Controls.Menu)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Menu"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Menu"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Menu"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Menu"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Menu".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.MenuItemAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.MenuItem"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.#ctor(System.Windows.Controls.MenuItem)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.MenuItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAccessKeyCore">
			<summary>Gets the access key for the <see cref="T:System.Windows.Controls.MenuItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey"></see>.</summary>
			<returns>The access key for the <see cref="T:System.Windows.Controls.MenuItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.MenuItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.MenuItem"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.MenuItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.MenuItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "MenuItem".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.Controls.MenuItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The string that contains the label.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.MenuItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.MenuItemAutomationPeer"></see>.</summary>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System.Windows.Automation.Provider.IInvokeProvider.Invoke">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.MenuItemAutomationPeer.System.Windows.Automation.Provider.IToggleProvider.Toggle">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Navigation.NavigationWindow"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.#ctor(System.Windows.Navigation.NavigationWindow)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Navigation.NavigationWindow"></see> associated with this <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.NavigationWindowAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "NavigationWindow".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.PasswordBox"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.#ctor(System.Windows.Controls.PasswordBox)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.PasswordBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.PasswordBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.PasswordBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "PasswordBox".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.PasswordBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value"></see> enumeration value.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.IsPasswordCore">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.PasswordBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.PasswordBoxAutomationPeer"></see> contains protected content. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword"></see>.</summary>
			<returns>true.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.PasswordBoxAutomationPeer.System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ProgressBar"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.#ctor(System.Windows.Controls.ProgressBar)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ProgressBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.ProgressBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ProgressBar"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ProgressBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ProgressBar".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ProgressBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue"></see> and <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate"></see> is true, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.ProgressBarAutomationPeer"></see>; otherwise, this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ProgressBarAutomationPeer.System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.RadioButton"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.#ctor(System.Windows.Controls.RadioButton)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.RadioButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.RadioButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>..</summary>
			<returns>A <see cref="F:System.Windows.Automation.Peers.AutomationControlType.RadioButton"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "RadioButton".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.RadioButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RadioButtonAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem"></see>, this method returns a this pointer; otherwise, this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.RadioButtonAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.Select">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.#ctor(System.Windows.Controls.Primitives.RangeBase)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RangeBaseAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.RangeValue"></see>, this method returns a this pointer; otherwise, this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.RangeBaseAutomationPeer.System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.RepeatButton)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Button"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "RepeatButton".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Invoke"></see>, this method returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.RepeatButtonAutomationPeer"></see>; otherwise, null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.RepeatButtonAutomationPeer.System.Windows.Automation.Provider.IInvokeProvider.Invoke">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.RichTextBox"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.#ctor(System.Windows.Controls.RichTextBox)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.RichTextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.RichTextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Document"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements for <see cref="T:System.Windows.Controls.RichTextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.RichTextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "RichTextBox".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.RichTextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.RichTextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.RichTextBoxAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Text"></see>, this method returns an <see cref="T:System.Windows.Automation.Provider.ITextProvider"></see> reference. If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll"></see>, this method returns a new <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see>.  </returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.ScrollBar)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.ScrollBar"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains the word "ScrollBar".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetClickablePointCore">
			<summary>Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Point"></see> that has values of <see cref="F:System.Double.NaN"></see>, <see cref="F:System.Double.NaN"></see>; the only clickable points in a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> are the child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollBarAutomationPeer.GetOrientationCore">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"></see> is laid out in a specific direction. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Horizontal"></see> or <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.Vertical"></see>, depending on the orientation of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ScrollViewer"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.#ctor(System.Windows.Controls.ScrollViewer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Pane"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ScrollViewer".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.ScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll"></see>, this method returns a this pointer; otherwise, this method returns null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.IsControlElementCore">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ScrollViewer"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see> is understood by the end user as interactive or as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>If the <see cref="P:System.Windows.FrameworkElement.TemplatedParent"></see> is null, this method returns true; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System.Windows.Automation.Provider.IScrollProvider.Scroll(System.Windows.Automation.ScrollAmount,System.Windows.Automation.ScrollAmount)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ScrollViewerAutomationPeer.System.Windows.Automation.Provider.IScrollProvider.SetScrollPercent(System.Double,System.Double)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.SelectorAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.Selector"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.#ctor(System.Windows.Controls.Primitives.Selector)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.Selector"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.Selector"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.List"></see> enumeration value. </returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.Selector"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection"></see>, this method returns a pointer to the current instance; otherwise null.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer">
			<summary>Exposes the items in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection of this <see cref="T:System.Windows.Controls.Primitives.Selector"></see> to UI Automation. </summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.SelectorAutomationPeer)">
			<summary>Provides initialization for base class values when they are called by the constructor of a derived class.</summary>
			<param name="owner">The <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with this <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer"></see>.</param>
			<param name="selectorAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.SelectorAutomationPeer"></see> that is associated with the <see cref="T:System.Windows.Controls.Primitives.Selector"></see> that holds the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern that is associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Selection"></see>, this method returns the current instance of this <see cref="T:System.Windows.Automation.Peers.SelectorItemAutomationPeer"></see>.</returns>
			<param name="patternInterface">A value in the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.SelectorItemAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.Select">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.SeparatorAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Separator"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.#ctor(System.Windows.Controls.Separator)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Separator"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Separator"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Separator"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.SeparatorAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Separator"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SeparatorAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Separator".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.SliderAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Slider"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.#ctor(System.Windows.Controls.Slider)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Slider"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Slider"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Slider"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Slider"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Slider".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.SliderAutomationPeer.GetClickablePointCore">
			<summary>Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Point"></see> containing <see cref="F:System.Double.NaN"></see>, <see cref="F:System.Double.NaN"></see>; the only clickable points in a <see cref="T:System.Windows.Controls.TabControl"></see> are the child <see cref="T:System.Windows.Controls.TabItem"></see> elements.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.StatusBarAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBar)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.StatusBar"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>A list of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.StatusBarAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "StatusBar".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.#ctor(System.Windows.Controls.Primitives.StatusBarItem)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.StatusBarItemAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "StatusBarItem".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.TabControlAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.TabControl"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.#ctor(System.Windows.Controls.TabControl)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.TabControl"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
			<summary>Creates a new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>.</summary>
			<param name="item">The <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with the new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the collection of child elements for the <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with the new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tab"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with the new <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "TabControl".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabControlAutomationPeer.GetClickablePointCore">
			<summary>This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Point"></see> containing <see cref="F:System.Double.NaN"></see>, <see cref="F:System.Double.NaN"></see>; the only clickable points in a <see cref="T:System.Windows.Controls.TabControl"></see> are the child <see cref="T:System.Windows.Controls.TabItem"></see> elements. </returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.TabItemAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.TabItem"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.#ctor(System.Object,System.Windows.Automation.Peers.TabControlAutomationPeer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see> class.</summary>
			<param name="tabControlAutomationPeer">The <see cref="T:System.Windows.Automation.Peers.TabControlAutomationPeer"></see> that is the parent of this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>.</param>
			<param name="owner">The <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.TabItem"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>The collection of child elements.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "TabItem".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The string that contains the label. If set, this method returns the value of the <see cref="P:System.Windows.Automation.AutomationProperties.Name"></see> property; otherwise this method will return the value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> property.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabItemAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer">
			<summary>Exposes the <see cref="T:System.Windows.UIElement"></see> subtree for the data items in a <see cref="T:System.Windows.Controls.TabControl"></see> to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer.#ctor(System.Windows.Controls.TabItem)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.TabItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TabItemWrapperAutomationPeer"></see>.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.TableAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Documents.Table"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableAutomationPeer.#ctor(System.Windows.Documents.Table)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Documents.Table"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Documents.Table"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Table"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Documents.Table"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Table".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Documents.Table"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Grid"></see>, this method returns a this pointer; otherwise, this method returns null.</returns>
			<param name="patternInterface">A value from the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableAutomationPeer.IsContentElementCore">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Documents.Table"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer"></see> is an element that contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"></see>.</summary>
			<returns>true.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableAutomationPeer.IsControlElementCore">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Documents.Table"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableAutomationPeer"></see> is understood by the end user as interactive or as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>true.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.TableCellAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Documents.TableCell"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.#ctor(System.Windows.Documents.TableCell)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Documents.TableCell"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Documents.TableCell"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Documents.TableCell"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "TableCell".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetLocalizedControlTypeCore">
			<summary>Gets the localized version of the control type for the <see cref="T:System.Windows.Documents.TableCell"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see>.</summary>
			<returns>A string that contains "cell".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Documents.TableCell"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.GridItem"></see>, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see>; otherwise, this method returns null.</returns>
			<param name="patternInterface">A value from the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.IsContentElementCore">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Documents.TableCell"></see> for this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see> is an element that contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"></see>.</summary>
			<returns>true.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TableCellAutomationPeer.IsControlElementCore">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Documents.TableCell"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TableCellAutomationPeer"></see> is understood by the end user as interactive or as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>true.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.TextAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Automation.TextPattern"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextAutomationPeer.#ctor(System.Windows.FrameworkElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Automation.TextPattern"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextAutomationPeer.GetNameCore">
			<summary>Gets the text label of the element that is associated with this <see cref="T:System.Windows.Automation.Peers.TextAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>The value of <see cref="P:System.Windows.Automation.AutomationProperties.Name"></see> or <see cref="P:System.Windows.Automation.AutomationProperties.LabeledBy"></see> if either is set; otherwise this method returns an empty string. </returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.TextBlockAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.TextBlock"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.#ctor(System.Windows.Controls.TextBlock)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.TextBlock"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.TextBlock"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Text"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Controls.TextBlock"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>A collection of child elements, or null if the <see cref="T:System.Windows.Controls.TextBlock"></see> is empty.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.TextBlock"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains the word "TextBlock".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBlockAutomationPeer.IsControlElementCore">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.TextBlock"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBlockAutomationPeer"></see> is something that the end user would understand as being interactive or as contributing to the logical structure of the control in the GUI. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"></see>.</summary>
			<returns>false if the element is part of a template; otherwise true.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.TextBoxAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.TextBox"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.#ctor(System.Windows.Controls.TextBox)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.TextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.TextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Edit"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.TextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "TextBox".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TextBox"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Value"></see>, returns a reference to the current instance of the <see cref="T:System.Windows.Automation.Peers.TextBoxAutomationPeer"></see>. If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Scroll"></see>, returns a new instance of a <see cref="T:System.Windows.Automation.Peers.ScrollViewerAutomationPeer"></see>.</returns>
			<param name="patternInterface">A value from the enumeration.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextBoxAutomationPeer.System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.TextElementAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Documents.TextElement"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.#ctor(System.Windows.Documents.TextElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Documents.TextElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetBoundingRectangleCore">
			<summary>Gets the <see cref="T:System.Windows.Rect"></see> representing the bounding rectangle of the <see cref="T:System.Windows.Documents.TextElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Rect"></see> that contains the coordinates of the element, or <see cref="P:System.Windows.Rect.Empty"></see> if the element is not a <see cref="T:System.Windows.Interop.HwndSource"></see> and a <see cref="T:System.Windows.PresentationSource"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.Documents.TextElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>null.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.GetClickablePointCore">
			<summary>Gets a <see cref="T:System.Windows.Point"></see> that represents the clickable space that is on the <see cref="T:System.Windows.Documents.TextElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Point"></see> on the element that allows a click. The point values are (<see cref="F:System.Double.NaN"></see>, <see cref="F:System.Double.NaN"></see>) if the element is not a <see cref="T:System.Windows.Interop.HwndSource"></see> and a <see cref="T:System.Windows.PresentationSource"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TextElementAutomationPeer.IsOffscreenCore">
			<summary>Gets a value that indicates whether <see cref="T:System.Windows.Documents.TextElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TextElementAutomationPeer"></see> is off of the screen. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"></see>.</summary>
			<returns>true if the element is not on the screen; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ThumbAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.#ctor(System.Windows.Controls.Primitives.Thumb)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Thumb"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Thumb".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ThumbAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>null.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.#ctor(System.Windows.Controls.Primitives.ToggleButton)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Button".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.Toggle"></see>, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.ToggleButtonAutomationPeer"></see>, otherwise null.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToggleButtonAutomationPeer.System.Windows.Automation.Provider.IToggleProvider.Toggle">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.ToolBarAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ToolBar"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.#ctor(System.Windows.Controls.ToolBar)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ToolBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.ToolBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolBar"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToolBarAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ToolBar"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolBarAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains the word "ToolBar".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.ToolTipAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.ToolTip"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.#ctor(System.Windows.Controls.ToolTip)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer"></see>.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.ToolTip"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.ToolTip"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.ToolTip"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.ToolTipAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.ToolTip"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "ToolTip".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.TreeViewAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.TreeView"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.#ctor(System.Windows.Controls.TreeView)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.TreeView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Tree"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetChildrenCore">
			<summary>Gets the collection of child elements of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"></see>.</summary>
			<returns>A collection of <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see> elements, or null if the <see cref="T:System.Windows.Controls.TreeView"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer"></see> is empty.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "TreeView".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.ContentElement"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>.</summary>
			<returns>The current instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see>, or null.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.TreeViewItem"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.#ctor(System.Windows.Controls.TreeViewItem)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.TreeViewItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.TreeViewItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.TreeItem"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.TreeViewItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "TreeViewItem".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
			<summary>Gets the control pattern for the <see cref="T:System.Windows.Controls.TreeViewItem"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see>.</summary>
			<returns>If patternInterface is <see cref="F:System.Windows.Automation.Peers.PatternInterface.ScrollItem"></see>, <see cref="F:System.Windows.Automation.Peers.PatternInterface.SelectionItem"></see>, or <see cref="F:System.Windows.Automation.Peers.PatternInterface.ExpandCollapse"></see>, this method returns the current instance of the <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see>; otherwise, it returns null.</returns>
			<param name="patternInterface">One of the enumeration values.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Collapse">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System.Windows.Automation.Provider.IExpandCollapseProvider.Expand">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System.Windows.Automation.Provider.IScrollItemProvider.ScrollIntoView">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.AddToSelection">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.RemoveFromSelection">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.TreeViewItemAutomationPeer.System.Windows.Automation.Provider.ISelectionItemProvider.Select">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Automation.Peers.UserControlAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.UserControl"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.#ctor(System.Windows.Controls.UserControl)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.UserControl"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.UserControl"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.UserControlAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.UserControl"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer"></see>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>The string that contains the name of the control.</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Controls.Viewport3D"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.#ctor(System.Windows.Controls.Viewport3D)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Controls.Viewport3D"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Controls.Viewport3D"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns><see cref="F:System.Windows.Automation.Peers.AutomationControlType.Custom"></see></returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.Viewport3DAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Controls.Viewport3D"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains "Viewport3D".</returns>
		</member>
		<member name="T:System.Windows.Automation.Peers.WindowAutomationPeer">
			<summary>Exposes <see cref="T:System.Windows.Window"></see> types to UI Automation.</summary>
		</member>
		<member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.#ctor(System.Windows.Window)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer"></see> class.</summary>
			<param name="owner">The <see cref="T:System.Windows.Window"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetAutomationControlTypeCore">
			<summary>Gets the control type for the <see cref="T:System.Windows.Window"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"></see>.</summary>
			<returns>The <see cref="F:System.Windows.Automation.Peers.AutomationControlType.Window"></see> enumeration value.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetBoundingRectangleCore">
			<summary>Gets the <see cref="T:System.Windows.Rect"></see> representing the bounding rectangle of the <see cref="T:System.Windows.Window"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Rect"></see> that represents the screen coordinates of the <see cref="T:System.Windows.Window"></see>.</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetClassNameCore">
			<summary>Gets the name of the <see cref="T:System.Windows.Window"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"></see>.</summary>
			<returns>A string that contains the word "Window".</returns>
		</member>
		<member name="M:System.Windows.Automation.Peers.WindowAutomationPeer.GetNameCore">
			<summary>Gets the text label of the <see cref="T:System.Windows.Window"></see> that is associated with this <see cref="T:System.Windows.Automation.Peers.ContentElementAutomationPeer"></see>. Called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"></see>.</summary>
			<returns>A string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.Name"></see> or  <see cref="P:System.Windows.FrameworkElement.Name"></see> of the <see cref="T:System.Windows.Window"></see>, or <see cref="F:System.String.Empty"></see> if the name is null.</returns>
		</member>
		<member name="N:System.Windows.Controls">
			<summary>Provides classes to create elements, known as controls, that enable a user to interact with an application. The control classes are at the core of the user's experience with any application because they allow a user to view, select, or enter data or other information. </summary>
		</member>
		<member name="T:System.Windows.Controls.AccessText">
			<summary>Specifies with an underscore the character that is used as the access key.</summary>
		</member>
		<member name="M:System.Windows.Controls.AccessText.#ctor">
			<summary>Initializes a new instance of AccessText. </summary>
		</member>
		<member name="F:System.Windows.Controls.AccessText.BackgroundProperty">
			<summary>Identifies the Background dependency property. </summary>
			<returns>The identifier for the Background dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.BaselineOffsetProperty">
			<summary>Identifies the BaselineOffset dependency property. </summary>
			<returns>The identifier for the BaselineOffset dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.FontFamilyProperty">
			<summary>Identifies the FontFamily dependency property. </summary>
			<returns>The identifier for the FontFamily dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.FontSizeProperty">
			<summary>Identifies the FontSize dependency property. </summary>
			<returns>The identifier for the FontSize dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.FontStretchProperty">
			<summary>Identifies the FontStretch dependency property. </summary>
			<returns>The identifier for the FontStretch dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.FontStyleProperty">
			<summary>Identifies the FontStyle dependency property. </summary>
			<returns>The identifier for the FontStyle dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.FontWeightProperty">
			<summary>Identifies the FontWeight dependency property. </summary>
			<returns>The identifier for the FontWeight dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.ForegroundProperty">
			<summary>Identifies the Foreground dependency property. </summary>
			<returns>The identifier for the Foreground dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.LineHeightProperty">
			<summary>Identifies the LineHeight dependency property. </summary>
			<returns>The identifier for the LineHeight dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.LineStackingStrategyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.AccessText.LineStackingStrategy"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.TextAlignmentProperty">
			<summary>Identifies the TextAlignment dependency property. </summary>
			<returns>The identifier for the TextAlignment dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.TextDecorationsProperty">
			<summary>Identifies the TextDecorations dependency property. </summary>
			<returns>The identifier for the TextDecorations dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.TextEffectsProperty">
			<summary>Identifies the TextEffects dependency property. </summary>
			<returns>The identifier for the TextEffects dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.TextProperty">
			<summary>Identifies the Text dependency property. </summary>
			<returns>The identifier for the Text dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.TextTrimmingProperty">
			<summary>Identifies the TextTrimming dependency property. </summary>
			<returns>The identifier for the TextTrimming dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.AccessText.TextWrappingProperty">
			<summary>Identifies the TextWrapping dependency property. </summary>
			<returns>The identifier for the TextWrapping dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.AccessText.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges and sizes the content of an AccessText object. </summary>
			<returns>The size of the content.</returns>
			<param name="arrangeSize">The computed size that is used to arrange the content.</param>
		</member>
		<member name="M:System.Windows.Controls.AccessText.GetVisualChild(System.Int32)">
			<summary>Gets the index of a visual child element.</summary>
			<returns>Returns an integer that represents the index of a visual child element.</returns>
			<param name="I ndex">The index of the visual child element to return.</param>
		</member>
		<member name="M:System.Windows.Controls.AccessText.MeasureOverride(System.Windows.Size)">
			<summary>Remeasures the control. </summary>
			<returns>The size of the control. Cannot exceed the maximum size limit for the control.</returns>
			<param name="constraint">The maximum size limit for the control. The return value cannot exceed this size.</param>
		</member>
		<member name="M:System.Windows.Controls.AccessText.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.AccessText.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.AccessText.AccessKey">
			<summary>Provides read-only access to the character that follows the first underline character.</summary>
			<returns>The character to return.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.Background">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> that fills the content area. </summary>
			<returns>The <see cref="T:System.Windows.Media.Brush"></see> that fills the content area. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.BaselineOffset">
			<summary>Gets or sets a value that adjusts the baseline offset position of text in an <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>A <see cref="T:System.Double"></see> that specifies the amount to adjust the baseline offset position.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.FontFamily">
			<summary>Gets or sets the font family to use with the <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>The font family to use. The default value is the font that is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.FontSize">
			<summary>Gets or sets the font size to use with the <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>The font size to use. The default value is the font size that is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.FontStretch">
			<summary>Gets or sets a <see cref="T:System.Windows.FontStretch"></see> property that selects a normal, condensed, or expanded font from a <see cref="T:System.Windows.Media.FontFamily"></see>. </summary>
			<returns>The relative degree that the font is stretched. The default value is <see cref="P:System.Windows.FontStretches.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.FontStyle">
			<summary>Gets or sets the font style to use with the <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>The font style to use, for example, normal, italic, or oblique. The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.FontWeight">
			<summary>Gets or sets the font weight to use with the <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>The font weight to use. The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.Foreground">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> that draws the text content of the element. </summary>
			<returns>The <see cref="T:System.Windows.Media.Brush"></see> that draws the text. The default value is <see cref="P:System.Windows.Media.Brushes.Black"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.LineHeight">
			<summary>Gets or sets the height of each line box. </summary>
			<returns>A double that specifies the height of each line box. This value must be equal to or greater than 0.0034 and equal to or less then 160000. A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of Auto) causes the line height is determined automatically from the current font characteristics. The default is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.LineStackingStrategy">
			<summary>Gets or sets how the <see cref="P:System.Windows.Controls.AccessText.LineHeight"></see> property is enforced.</summary>
			<returns>A <see cref="T:System.Windows.LineStackingStrategy"></see> value that determines the behavior of the <see cref="P:System.Windows.Controls.AccessText.LineHeight"></see> property.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.LogicalChildren">
			<summary>Gets an enumerator that iterates the logical child elements of the <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>An enumerator that iterates the logical child elements of this element.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.Text">
			<summary>Gets or sets the text that is displayed by the <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>The text without the first underscore character. The default is an empty string.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.TextAlignment">
			<summary>Gets or sets the horizontal alignment of the content. </summary>
			<returns>The horizontal alignment of the text.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.TextDecorations">
			<summary>Gets or sets the decorations that are added to the text of an <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>The <see cref="T:System.Windows.TextDecorations"></see> applied to the text of an <see cref="T:System.Windows.Controls.AccessText"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.TextEffects">
			<summary>Gets or sets the effects that are added to the text of an <see cref="T:System.Windows.Controls.AccessText"></see> element. </summary>
			<returns>The <see cref="T:System.Windows.Media.TextEffectCollection"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.TextTrimming">
			<summary>Gets or sets how the textual content of an AccessText element is clipped if it overflows the line box. </summary>
			<returns>The trimming behavior to use. The default value is <see cref="F:System.Windows.TextTrimming.None"></see></returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.TextWrapping">
			<summary>Gets or sets whether the textual content of an <see cref="T:System.Windows.Controls.AccessText"></see> element is wrapped if it overflows the line box. </summary>
			<returns>The wrapping behavior to use. The default value is <see cref="F:System.Windows.TextWrapping.NoWrap"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.AccessText.VisualChildrenCount">
			<summary>Gets the number of child elements that are visual.</summary>
			<returns>Returns an integer that represents the number of child elements that are visible.</returns>
		</member>
		<member name="T:System.Windows.Controls.AdornedElementPlaceholder">
			<summary>Represents the element used in a <see cref="T:System.Windows.Controls.ControlTemplate"></see> to specify where an adorned control is placed relative to other elements in the <see cref="T:System.Windows.Controls.ControlTemplate"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.AdornedElementPlaceholder.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.AdornedElementPlaceholder.ArrangeOverride(System.Windows.Size)">
			<summary>Positions the first visual child object and returns the size in layout required by this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object.</summary>
			<returns>The actual size needed by the element.</returns>
			<param name="arrangeBounds">The size that this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object should use to arrange its child element.</param>
		</member>
		<member name="M:System.Windows.Controls.AdornedElementPlaceholder.GetVisualChild(System.Int32)">
			<summary>Retrieves the <see cref="T:System.Windows.Media.Visual"></see> child object at the specified index.</summary>
			<returns>The visual child object at the specified index.</returns>
			<param name="index">The index that specifies the child object to retrieve.</param>
		</member>
		<member name="M:System.Windows.Controls.AdornedElementPlaceholder.MeasureOverride(System.Windows.Size)">
			<summary>Determines the size of the <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object.</summary>
			<returns>The desired size of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object.</returns>
			<param name="constraint">An upper limit value that the return value should not exceed.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object is not part of a template.</exception>
		</member>
		<member name="M:System.Windows.Controls.AdornedElementPlaceholder.OnInitialized(System.EventArgs)">
			<summary>Raises the <see cref="P:System.Windows.FrameworkElement.IsInitialized"></see> event. This method is called when <see cref="P:System.Windows.FrameworkElement.IsInitialized"></see> is set to true internally.</summary>
			<param name="e">Arguments of the event.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object is not part of a template.</exception>
		</member>
		<member name="M:System.Windows.Controls.AdornedElementPlaceholder.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.AdornedElementPlaceholder.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.AdornedElementPlaceholder.AdornedElement">
			<summary>Gets the <see cref="T:System.Windows.UIElement"></see> that this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object is reserving space for.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> that this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object is reserving space for. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.AdornedElementPlaceholder.Child">
			<summary>Gets or sets the single child object of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object.</summary>
			<returns>The single child object of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.AdornedElementPlaceholder.LogicalChildren">
			<summary>Gets an enumerator for the logical child elements of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object.</summary>
			<returns>An enumerator for the logical child elements of this <see cref="T:System.Windows.Controls.AdornedElementPlaceholder"></see> object. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.AdornedElementPlaceholder.VisualChildrenCount">
			<summary>Gets the number of visual child objects.</summary>
			<returns>Either 0 or 1. The default value is 0.</returns>
		</member>
		<member name="T:System.Windows.Controls.BooleanToVisibilityConverter">
			<summary>Represents the converter that converts Boolean values to and from <see cref="T:System.Windows.Visibility"></see> enumeration values. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Controls.BooleanToVisibilityConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.BooleanToVisibilityConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.BooleanToVisibilityConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a Boolean value to a <see cref="T:System.Windows.Visibility"></see> enumeration value.</summary>
			<returns><see cref="F:System.Windows.Visibility.Visible"></see> if value is true; otherwise, <see cref="F:System.Windows.Visibility.Collapsed"></see>.</returns>
			<param name="culture">This parameter is not used.</param>
			<param name="targetType">This parameter is not used.</param>
			<param name="parameter">This parameter is not used.</param>
			<param name="value">The Boolean value to convert. This value can be a standard Boolean value or a nullable Boolean value.</param>
		</member>
		<member name="M:System.Windows.Controls.BooleanToVisibilityConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a <see cref="T:System.Windows.Visibility"></see> enumeration value to a Boolean value.</summary>
			<returns>true if value is <see cref="F:System.Windows.Visibility.Visible"></see>; otherwise, false.</returns>
			<param name="culture">This parameter is not used.</param>
			<param name="targetType">This parameter is not used.</param>
			<param name="parameter">This parameter is not used.</param>
			<param name="value">A <see cref="T:System.Windows.Visibility"></see> enumeration value. </param>
		</member>
		<member name="T:System.Windows.Controls.Border">
			<summary>Draws a border, background, or both around another element. </summary>
		</member>
		<member name="M:System.Windows.Controls.Border.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Border"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Border.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Border.Background"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Border.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Border.BorderBrushProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Border.BorderBrush"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Border.BorderBrush"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Border.BorderThicknessProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Border.BorderThickness"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Border.BorderThickness"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Border.CornerRadiusProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Border.CornerRadius"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Border.CornerRadius"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Border.PaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Border.Padding"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Border.Padding"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the contents of a <see cref="T:System.Windows.Controls.Border"></see> element.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.Border"></see> element and its child elements.</returns>
			<param name="finalSize">The <see cref="T:System.Windows.Size"></see> this element uses to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.Border.MeasureOverride(System.Windows.Size)">
			<summary>Measures the child elements of a <see cref="T:System.Windows.Controls.Border"></see> before they are arranged during the <see cref="M:System.Windows.Controls.Border.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the upper size limit of the element.</returns>
			<param name="constraint">An upper <see cref="T:System.Windows.Size"></see> limit that cannot be exceeded.</param>
		</member>
		<member name="M:System.Windows.Controls.Border.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Draws the contents of a <see cref="T:System.Windows.Media.DrawingContext"></see> object during the render pass of a <see cref="T:System.Windows.Controls.Border"></see>. </summary>
			<param name="dc">The <see cref="T:System.Windows.Media.DrawingContext"></see> that defines the object to be drawn.</param>
		</member>
		<member name="P:System.Windows.Controls.Border.Background">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> that fills the area between the bounds of a <see cref="T:System.Windows.Controls.Border"></see>. </summary>
			<returns><see cref="T:System.Windows.Media.Brush"></see> that draws the background. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Border.BorderBrush">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> that draws the outer border color. </summary>
			<returns>The <see cref="T:System.Windows.Media.Brush"></see> that draws the outer border color. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Border.BorderThickness">
			<summary>Gets or sets the relative <see cref="T:System.Windows.Thickness"></see> of a <see cref="T:System.Windows.Controls.Border"></see>. </summary>
			<returns>The <see cref="T:System.Windows.Thickness"></see> that describes the width of the boundaries of the <see cref="T:System.Windows.Controls.Border"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Border.CornerRadius">
			<summary>Gets or sets a value that represents the degree to which the corners of a <see cref="T:System.Windows.Controls.Border"></see> are rounded. </summary>
			<returns>The <see cref="T:System.Windows.CornerRadius"></see> that describes the degree to which corners are rounded. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Border.Padding">
			<summary>Gets or sets a <see cref="T:System.Windows.Thickness"></see> value that describes the amount of space between a <see cref="T:System.Windows.Controls.Border"></see> and its child element. </summary>
			<returns>The <see cref="T:System.Windows.Thickness"></see> that describes the amount of space between a <see cref="T:System.Windows.Controls.Border"></see> and its single child element. This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.BorderGapMaskConverter">
			<summary>Represents a converter that converts the dimensions of a <see cref="T:System.Windows.Controls.GroupBox"></see> control into a <see cref="T:System.Windows.Media.VisualBrush"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.BorderGapMaskConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.BorderGapMaskConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.BorderGapMaskConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Creates a <see cref="T:System.Windows.Media.VisualBrush"></see> that draws the border for a <see cref="T:System.Windows.Controls.GroupBox"></see> control. This method cannot be inherited.</summary>
			<returns>A <see cref="T:System.Windows.Media.VisualBrush"></see> that draws the border around a <see cref="T:System.Windows.Controls.GroupBox"></see> control that includes a gap for the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> content.</returns>
			<param name="culture">This parameter is not used.</param>
			<param name="targetType">This parameter is not used.</param>
			<param name="parameter">The width of the visible line to the left of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> in the <see cref="T:System.Windows.Controls.GroupBox"></see>.</param>
			<param name="values">An array of three numbers that represent the following <see cref="T:System.Windows.Controls.GroupBox"></see> control parameters:The width of the <see cref="T:System.Windows.Controls.GroupBox"></see> <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> content.The width of the <see cref="T:System.Windows.Controls.GroupBox"></see> control.The height of the <see cref="T:System.Windows.Controls.GroupBox"></see> control.</param>
		</member>
		<member name="T:System.Windows.Controls.Button">
			<summary>Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Controls.Button.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Button"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Button.IsCancelProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Button.IsCancel"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Button.IsDefaultedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Button.IsDefaulted"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Button.IsDefaultProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Button.IsDefault"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Controls.Button.IsCancel">
			<summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button"></see> is the Cancel button. A user can activate the Cancel button by pressing the Escape key. </summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Button"></see> is the Cancel button; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Button.IsDefault">
			<summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button"></see> is the default button. A user invokes the default button by pressing the Enter key.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Button"></see> is the default button; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Button.IsDefaulted">
			<summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button"></see> is the button that is activated when a user presses Enter. </summary>
			<returns>true if the button will be activated when the user presses Enter; otherwise, false. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.Canvas">
			<summary>Defines an area within which you can explicitly position child elements by using coordinates that are relative to the <see cref="T:System.Windows.Controls.Canvas"></see> area.</summary>
		</member>
		<member name="M:System.Windows.Controls.Canvas.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Canvas"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Canvas.BottomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Bottom"></see> attached property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Canvas.Bottom"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Canvas.LeftProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Left"></see> attached property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Canvas.Left"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Canvas.RightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Right"></see> attached property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Canvas.Right"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Canvas.TopProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Canvas.Top"></see> attached property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Canvas.Top"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.Canvas"></see> element.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.Canvas"></see> element and its descendants.</returns>
			<param name="arrangeSize">The size that this <see cref="T:System.Windows.Controls.Canvas"></see> element should use to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.GetBottom(System.Windows.UIElement)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.Canvas.Bottom"></see> attached property for a given dependency object. </summary>
			<returns>The <see cref="P:System.Windows.Controls.Canvas.Bottom"></see> coordinate of the specified element.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.GetLayoutClip(System.Windows.Size)">
			<summary>Returns a clipping geometry that indicates the area that will be clipped if the <see cref="P:System.Windows.UIElement.ClipToBounds"></see> property is set to true. </summary>
			<returns>A <see cref="T:System.Windows.Media.Geometry"></see> that represents the area that is clipped if <see cref="P:System.Windows.UIElement.ClipToBounds"></see> is true.</returns>
			<param name="layoutSlotSize">The available size of the element.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.GetLeft(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Left"></see> attached property for a given dependency object. </summary>
			<returns>The <see cref="P:System.Windows.Controls.Canvas.Left"></see> coordinate of the specified element.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.GetRight(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Right"></see> attached property for a given dependency object. </summary>
			<returns>The <see cref="P:System.Windows.Controls.Canvas.Right"></see> coordinate of the specified element.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.GetTop(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Canvas.Top"></see> attached property for a given dependency object. </summary>
			<returns>The <see cref="P:System.Windows.Controls.Canvas.Top"></see> coordinate of the specified element.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.MeasureOverride(System.Windows.Size)">
			<summary>Measures the child elements of a <see cref="T:System.Windows.Controls.Canvas"></see> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.Canvas.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> that represents the size that is required to arrange child content.</returns>
			<param name="constraint">An upper limit <see cref="T:System.Windows.Size"></see> that should not be exceeded.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.SetBottom(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Bottom"></see> attached property for a given dependency object. </summary>
			<param name="element">The element to which the property value is written.</param>
			<param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Bottom"></see> coordinate of the specified element.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.SetLeft(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Left"></see> attached property for a given dependency object. </summary>
			<param name="element">The element to which the property value is written.</param>
			<param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Left"></see> coordinate of the specified element.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.SetRight(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Right"></see> attached property for a given dependency object. </summary>
			<param name="element">The element to which the property value is written.</param>
			<param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Right"></see> coordinate of the specified element.</param>
		</member>
		<member name="M:System.Windows.Controls.Canvas.SetTop(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Canvas.Top"></see> attached property for a given dependency object. </summary>
			<param name="element">The element to which the property value is written.</param>
			<param name="length">Sets the <see cref="P:System.Windows.Controls.Canvas.Top"></see> coordinate of the specified element.</param>
		</member>
		<member name="P:System.Windows.Controls.Canvas.Bottom">
			<summary>Gets or sets a value that represents the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the offset position from the bottom of a parent <see cref="T:System.Windows.Controls.Canvas"></see>. The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Canvas.Left">
			<summary>Gets or sets a value that represents the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the offset position from the left side of a parent <see cref="T:System.Windows.Controls.Canvas"></see>. The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Canvas.Right">
			<summary>Gets or sets a value that represents the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the offset position from the right side of a parent <see cref="T:System.Windows.Controls.Canvas"></see>. The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Canvas.Top">
			<summary>Gets or sets a value that represents the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the offset position from the top of a parent <see cref="T:System.Windows.Controls.Canvas"></see>. The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.CharacterCasing">
			<summary>Specifies the case of characters typed manually into a <see cref="T:System.Windows.Controls.TextBox"></see> control. </summary>
		</member>
		<member name="F:System.Windows.Controls.CharacterCasing.Lower">
			<summary>Characters typed into a <see cref="T:System.Windows.Controls.TextBox"></see> are converted to lowercase.</summary>
		</member>
		<member name="F:System.Windows.Controls.CharacterCasing.Normal">
			<summary>Characters typed into a <see cref="T:System.Windows.Controls.TextBox"></see> are not converted.</summary>
		</member>
		<member name="F:System.Windows.Controls.CharacterCasing.Upper">
			<summary>Characters typed into a <see cref="T:System.Windows.Controls.TextBox"></see> are converted to uppercase.</summary>
		</member>
		<member name="T:System.Windows.Controls.CheckBox">
			<summary>Represents a control that a user can select and clear.   </summary>
		</member>
		<member name="M:System.Windows.Controls.CheckBox.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.CheckBox"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.CheckBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
			<summary>Called when the access key for a <see cref="T:System.Windows.Controls.CheckBox"></see> is invoked. </summary>
			<param name="e">The <see cref="T:System.Windows.Input.AccessKeyEventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Controls.CheckBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary> Responds to a <see cref="T:System.Windows.Controls.CheckBox"></see><see cref="E:System.Windows.UIElement.KeyDown"></see> event. </summary>
			<param name="e">The <see cref="T:System.Windows.Input.KeyEventArgs"></see> that contains the event data. </param>
		</member>
		<member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem"></see> event.</summary>
		</member>
		<member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Cancel">
			<summary>Gets or sets a value that indicates whether this item should not be re-virtualized.</summary>
			<returns>true if you want to prevent revirtualization of this item; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.UIElement">
			<summary>Gets an instance of the visual element that represents the data value.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> that represents the data value.</returns>
		</member>
		<member name="P:System.Windows.Controls.CleanUpVirtualizedItemEventArgs.Value">
			<summary>Gets an <see cref="T:System.Object"></see> that represents the original data value.</summary>
			<returns>The <see cref="T:System.Object"></see> that represents the original data value.</returns>
		</member>
		<member name="T:System.Windows.Controls.CleanUpVirtualizedItemEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem"></see> event.</summary>
		</member>
		<member name="T:System.Windows.Controls.ClickMode">
			<summary> Specifies when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event should fire. </summary>
		</member>
		<member name="F:System.Windows.Controls.ClickMode.Hover">
			<summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event should fire when the mouse hovers over a control.</summary>
		</member>
		<member name="F:System.Windows.Controls.ClickMode.Press">
			<summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event will occur as soon as a button is pressed.</summary>
		</member>
		<member name="F:System.Windows.Controls.ClickMode.Release">
			<summary>Specifies that the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event will occur when a button is pressed and released.</summary>
		</member>
		<member name="T:System.Windows.Controls.ColumnDefinition">
			<summary>Defines column-specific properties that apply to <see cref="T:System.Windows.Controls.Grid"></see> elements. </summary>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinition.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ColumnDefinition"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.ColumnDefinition.MaxWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth"></see> dependency property. This field is read-only. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ColumnDefinition.MaxWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ColumnDefinition.MinWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ColumnDefinition.MinWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ColumnDefinition.WidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ColumnDefinition.Width"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ColumnDefinition.Width"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinition.ActualWidth">
			<summary>Gets a value that represents the actual calculated width of a <see cref="T:System.Windows.Controls.ColumnDefinition"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the actual calculated width in device independent pixels. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinition.MaxWidth">
			<summary>Gets or sets a value that represents the maximum width of a <see cref="T:System.Windows.Controls.ColumnDefinition"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the maximum width. The default value is <see cref="F:System.Double.PositiveInfinity"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinition.MinWidth">
			<summary>Gets or sets a value that represents the minimum width of a <see cref="T:System.Windows.Controls.ColumnDefinition"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the minimum width. The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinition.Offset">
			<summary>Gets a value that represents the offset value of this <see cref="T:System.Windows.Controls.ColumnDefinition"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the offset of the column. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinition.Width">
			<summary>Gets the calculated width of a <see cref="T:System.Windows.Controls.ColumnDefinition"></see> element, or sets the <see cref="T:System.Windows.GridLength"></see> value of a column that is defined by the <see cref="T:System.Windows.Controls.ColumnDefinition"></see>. </summary>
			<returns>The <see cref="T:System.Windows.GridLength"></see> that represents the width of the Column. The default value is 1.0.</returns>
		</member>
		<member name="T:System.Windows.Controls.ColumnDefinitionCollection">
			<summary>Provides access to an ordered, strongly typed collection of <see cref="T:System.Windows.Controls.ColumnDefinition"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.Add(System.Windows.Controls.ColumnDefinition)">
			<summary>Adds a <see cref="T:System.Windows.Controls.ColumnDefinition"></see> element to a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<param name="value">Identifies the <see cref="T:System.Windows.Controls.ColumnDefinition"></see> to add to the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.Contains(System.Windows.Controls.ColumnDefinition)">
			<summary>Determines whether a given <see cref="T:System.Windows.Controls.ColumnDefinition"></see> exists within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ColumnDefinition"></see> exists within the collection; otherwise false.</returns>
			<param name="value">Identifies the <see cref="T:System.Windows.Controls.ColumnDefinition"></see> that is being tested.</param>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.CopyTo(System.Windows.Controls.ColumnDefinition[],System.Int32)">
			<summary>Copies an array of <see cref="T:System.Windows.Controls.ColumnDefinition"></see> objects to a given index position within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<param name="array">An array of <see cref="T:System.Windows.Controls.ColumnDefinition"></see> objects.</param>
			<param name="index">Identifies the index position within array to which the <see cref="T:System.Windows.Controls.ColumnDefinition"></see> objects are copied.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
			<exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
			<exception cref="T:System.ArgumentNullException">array is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.IndexOf(System.Windows.Controls.ColumnDefinition)">
			<summary>Returns the index position of a given <see cref="T:System.Windows.Controls.ColumnDefinition"></see> within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<returns>The index of value if found in the collection; otherwise, -1.</returns>
			<param name="value">The <see cref="T:System.Windows.Controls.ColumnDefinition"></see> whose index position is desired.</param>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.Insert(System.Int32,System.Windows.Controls.ColumnDefinition)">
			<summary>Inserts a <see cref="T:System.Windows.Controls.ColumnDefinition"></see> at the specified index position within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<param name="value">The <see cref="T:System.Windows.Controls.ColumnDefinition"></see> to insert.</param>
			<param name="index">The position within the collection where the item is inserted.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.Remove(System.Windows.Controls.ColumnDefinition)">
			<summary>Removes a <see cref="T:System.Windows.Controls.ColumnDefinition"></see> from a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ColumnDefinition"></see> was found in the collection and removed; otherwise, false.</returns>
			<param name="value">The <see cref="T:System.Windows.Controls.ColumnDefinition"></see> to remove from the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveAt(System.Int32)">
			<summary>Removes a <see cref="T:System.Windows.Controls.ColumnDefinition"></see> from a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> at the specified index position.</summary>
			<param name="index">The position within the collection at which the <see cref="T:System.Windows.Controls.ColumnDefinition"></see> is removed.</param>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
			<summary>Removes a range of <see cref="T:System.Windows.Controls.ColumnDefinition"></see> objects from a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<param name="count">The total number of <see cref="T:System.Windows.Controls.ColumnDefinition"></see> objects to remove from the collection.</param>
			<param name="index">The position within the collection at which the first <see cref="T:System.Windows.Controls.ColumnDefinition"></see> is removed.</param>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.System.Collections.IEnumerable.GetEnumerator">
			<summary>Returns an <see cref="T:System.Collections.IEnumerator"></see> that can iterate the children of this <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.ColumnDefinitionCollection.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinitionCollection.Count">
			<summary>Gets the total number of items within this instance of <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<returns>The total number of items in the collection. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsReadOnly">
			<summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> is read-only.</summary>
			<returns>true if the collection is read-only; otherwise false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinitionCollection.IsSynchronized">
			<summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> is synchronized (thread safe).</summary>
			<returns>true if access to this collection is synchronized; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinitionCollection.Item(System.Int32)">
			<summary>Gets a value that indicates the current item within a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The current item in the collection.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index position in the collection.</exception>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinitionCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</summary>
			<returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinitionCollection.System.Collections.IList.IsFixedSize">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> has a fixed size.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> has a fixed size; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ColumnDefinitionCollection.System.Collections.IList.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index position in the list.</exception>
		</member>
		<member name="T:System.Windows.Controls.ComboBox">
			<summary> Represents a selection control in a drop-down list form. The items in the <see cref="T:System.Windows.Controls.ComboBox"></see> can be shown and hidden by clicking the <see cref="T:System.Windows.Controls.Button"></see> on the control. </summary>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBox"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.ComboBox.DropDownClosed">
			<summary> Occurs when the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> of a <see cref="T:System.Windows.Controls.ComboBox"></see> closes. </summary>
		</member>
		<member name="E:System.Windows.Controls.ComboBox.DropDownOpened">
			<summary> Occurs when the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> of a <see cref="T:System.Windows.Controls.ComboBox"></see> opens. </summary>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.IsDropDownOpenProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.IsDropDownOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.IsEditableProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsEditable"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.IsEditable"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.IsReadOnlyProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.IsReadOnly"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.MaxDropDownHeightProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.MaxDropDownHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.SelectionBoxItemTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.StaysOpenOnEditProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ComboBox.TextProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ComboBox.Text"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBox.Text"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.GetContainerForItemOverride">
			<summary>Creates or identifies the element used to display the specified item.</summary>
			<returns>A <see cref="T:System.Windows.Controls.ComboBoxItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.IsItemItsOwnContainerOverride(System.Object)">
			<summary> Determines if the specified item is (or is eligible to be) its own ItemContainer. </summary>
			<returns>A Boolean value true if the item is its own ItemContainer; otherwise, false.</returns>
			<param name="item">Specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnApplyTemplate">
			<summary>Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see> is called.</summary>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnDropDownClosed(System.EventArgs)">
			<summary> Reports when a combo box's popup closes. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownClosed"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnDropDownOpened(System.EventArgs)">
			<summary> Reports when a combo box's popup opens. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.ComboBox.DropDownOpened"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary> Reports that the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin"></see> property changed. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary> Called when the <see cref="P:System.Windows.UIElement.IsMouseCaptured"></see> property changes. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Invoked when a <see cref="E:System.Windows.Input.Keyboard.KeyDown"></see> attached routed event occurs.</summary>
			<param name="e">Event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary> Called to report that the left mouse button was released. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Invoked when a <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown"></see> attached routed event occurs.</summary>
			<param name="e">Event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
			<summary> Responds to a <see cref="T:System.Windows.Controls.ComboBox"></see> selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"></see>. </param>
		</member>
		<member name="M:System.Windows.Controls.ComboBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary> Prepares the specified element to display the specified item. </summary>
			<param name="item">Specified item.</param>
			<param name="element">Element used to display the specified item.</param>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.IsDropDownOpen">
			<summary> Gets or sets a value that indicates whether the drop-down for a combo box is currently open.  </summary>
			<returns>A Boolean value, the default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.IsEditable">
			<summary>Gets or sets a value that enables or disables editing of the text in text box of the <see cref="T:System.Windows.Controls.ComboBox"></see>. This is a  dependency property.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ComboBox"></see> can be edited; otherwise false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.IsReadOnly">
			<summary>Gets or sets a value that enables selection-only mode, in which the contents of the combo box are selectable but not editable. This is a dependency property.</summary>
			<returns>A Boolean value that indicates whether a <see cref="T:System.Windows.Controls.ComboBox"></see> is read-only; true if the <see cref="T:System.Windows.Controls.ComboBox"></see> is read-only false otherwise. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.IsSelectionBoxHighlighted">
			<summary>Gets whether the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem"></see> is highlighted.</summary>
			<returns>A Boolean value, true if the <see cref="P:System.Windows.Controls.ComboBox.SelectionBoxItem"></see> is highlighted; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.MaxDropDownHeight">
			<summary> Gets or sets the maximum height for a combo box drop-down. </summary>
			<returns>A double that represents the height that is retrieved or the height to set. The default value as defined to the property system is a calculated value based on taking a one-third fraction of the system max screen height parameters, but this default is potentially overridden by various control templates.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.SelectionBoxItem">
			<summary>Gets the item that is displayed in the selection box.</summary>
			<returns>The selected item.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.SelectionBoxItemTemplate">
			<summary>Gets the item template of the selection box content.</summary>
			<returns>An item template.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.StaysOpenOnEdit">
			<summary> Gets or sets whether a <see cref="T:System.Windows.Controls.ComboBox"></see> that is open and displays a drop-down control will remain open when a user clicks the <see cref="T:System.Windows.Controls.TextBox"></see>. </summary>
			<returns>A Boolean value, the default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ComboBox.Text">
			<summary> Gets or sets the text of the currently selected item. </summary>
			<returns>A string, the default value is an empty string.</returns>
		</member>
		<member name="T:System.Windows.Controls.ComboBoxItem">
			<summary> Implements a selectable item inside a <see cref="T:System.Windows.Controls.ComboBox"></see>.  </summary>
		</member>
		<member name="M:System.Windows.Controls.ComboBoxItem.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBoxItem"></see> class</summary>
		</member>
		<member name="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)">
			<summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property changes. </summary>
			<param name="oldContent">Old content.</param>
			<param name="newContent">New content.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary>Announces that the keyboard is focused on this element. </summary>
			<param name="e">Keyboard input event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
			<summary> Responds to a <see cref="E:System.Windows.UIElement.MouseEnter"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary> Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary> Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs"></see>.</param>
		</member>
		<member name="P:System.Windows.Controls.ComboBoxItem.IsHighlighted">
			<summary>Gets a value that indicates whether the item is highlighted. </summary>
			<returns>A Boolean value, the default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.ContentControl">
			<summary>Represents a control with a single piece of content.  </summary>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentControl"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.ContentControl.ContentProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContentControl.ContentTemplateProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContentControl.ContentTemplateSelectorProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContentControl.HasContentProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContentControl.HasContent"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentControl.HasContent"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
			<summary>Adds a specified object as the child of a <see cref="T:System.Windows.Controls.ContentControl"></see>. </summary>
			<param name="value">The object to add.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.AddText(System.String)">
			<summary>Adds a specified text string to a <see cref="T:System.Windows.Controls.ContentControl"></see>. </summary>
			<param name="T ext">The string to add.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.OnContentChanged(System.Object,System.Object)">
			<summary> Called when the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property changes. </summary>
			<param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property.</param>
			<param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
			<summary> Called when the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"></see> property changes. </summary>
			<param name="oldContentTemplate">The old value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"></see> property.</param>
			<param name="newContentTemplate">The new value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplate"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
			<summary> Called when the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector"></see> property changes. </summary>
			<param name="newContentTemplateSelector">The new value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector"></see> property.</param>
			<param name="oldContentTemplateSelector">The old value of the <see cref="P:System.Windows.Controls.ContentControl.ContentTemplateSelector"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.ShouldSerializeContent">
			<summary>Indicates whether the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property should be persisted.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property should be persisted; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.ContentControl.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.ContentControl.Content">
			<summary> Gets or sets the content of a <see cref="T:System.Windows.Controls.ContentControl"></see>. This is a dependency property.</summary>
			<returns>An object that contains the control's content. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentControl.ContentTemplate">
			<summary> Gets or sets the data template used to display the content of the <see cref="T:System.Windows.Controls.ContentControl"></see>. This is a dependency property.</summary>
			<returns>A data template. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentControl.ContentTemplateSelector">
			<summary> Gets or sets a template selector that enables an application writer to provide custom template-selection logic. This is a dependency property.</summary>
			<returns>A data template selector. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentControl.HasContent">
			<summary> Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ContentControl"></see> contains content. This is a dependency property.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ContentControl"></see> has content; otherwise false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentControl.LogicalChildren">
			<summary> Gets an enumerator to the content control's logical child elements. </summary>
			<returns>An enumerator. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.ContentPresenter">
			<summary>Displays the content of a <see cref="T:System.Windows.Controls.ContentControl"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ContentPresenter"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.ContentPresenter.ContentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.Content"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentPresenter.Content"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContentPresenter.ContentSourceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentPresenter.ContentSource"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContentPresenter.ContentTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContentPresenter.RecognizesAccessKeyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.ArrangeOverride(System.Windows.Size)">
			<summary>Position the single child element and determines the content of a <see cref="T:System.Windows.Controls.ContentPresenter"></see> object. </summary>
			<returns>The actual size needed by the element.</returns>
			<param name="arrangeSize">The size that this <see cref="T:System.Windows.Controls.ContentPresenter"></see> object should use to arrange its child element.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.ChooseTemplate">
			<summary>Returns the template to use. This may depend on the content or other properties.</summary>
			<returns>The <see cref="T:System.Windows.DataTemplate"></see> to use.</returns>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.MeasureOverride(System.Windows.Size)">
			<summary>Determines the size of the <see cref="T:System.Windows.Controls.ContentPresenter"></see> object based on the sizing properties, margin, and requested size of the child content.</summary>
			<returns>The size that is required to arrange child content.</returns>
			<param name="constraint">An upper limit value that the return value should not exceed.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"></see> changes. </summary>
			<param name="oldContentTemplate">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"></see> property.</param>
			<param name="newContentTemplate">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector"></see> property changes. </summary>
			<param name="newContentTemplateSelector">The new value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector"></see> property.</param>
			<param name="oldContentTemplateSelector">The old value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.OnTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplate"></see> changes </summary>
			<param name="oldTemplate">The old <see cref="T:System.Windows.DataTemplate"></see> object value.</param>
			<param name="newTemplate">The new <see cref="T:System.Windows.DataTemplate"></see> object value.</param>
		</member>
		<member name="M:System.Windows.Controls.ContentPresenter.ShouldSerializeContentTemplateSelector">
			<summary>Returns whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector"></see> property on instances of this class.</summary>
			<returns>Returns true if the <see cref="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentPresenter.Content">
			<summary>Gets or sets the data used to generate the child elements of a <see cref="T:System.Windows.Controls.ContentPresenter"></see>.</summary>
			<returns>The data used to generate the child elements. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentPresenter.ContentSource">
			<summary>Gets or sets the base name to use during automatic aliasing.</summary>
			<returns>The base name to use during automatic aliasing. The default value is "Content".</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentPresenter.ContentTemplate">
			<summary>Gets or sets the template used to display the content of the control. </summary>
			<returns>A <see cref="T:System.Windows.DataTemplate"></see> that defines the visualization of the content. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentPresenter.ContentTemplateSelector">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"></see>, which allows the application writer to provide custom logic for choosing the template that is used to display the content of the control.</summary>
			<returns>A <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> object that supplies logic to return a <see cref="T:System.Windows.DataTemplate"></see> to apply. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContentPresenter.RecognizesAccessKey">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContentPresenter"></see> should use <see cref="T:System.Windows.Controls.AccessText"></see> in its style. </summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ContentPresenter"></see> should use <see cref="T:System.Windows.Controls.AccessText"></see> in its style; otherwise false. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.ContextMenu">
			<summary>Represents a <see cref="T:System.Windows.Controls.Menu"></see> control that contains a pop-up menu. The <see cref="T:System.Windows.Controls.ContextMenu"></see> allows a control to expose functionality through the use of a <see cref="T:System.Windows.Controls.Menu"></see> that is specific to the context of the control. </summary>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.ContextMenu.Closed">
			<summary> Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu"></see> closes. </summary>
		</member>
		<member name="E:System.Windows.Controls.ContextMenu.Opened">
			<summary> Occurs when a particular instance of a context menu opens. </summary>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.ClosedEvent">
			<summary> Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.Controls.ContextMenu.Closed"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.IsOpenProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.OpenedEvent">
			<summary> Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.Controls.ContextMenu.Opened"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.PlacementProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.Placement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.StaysOpenProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)">
			<summary> Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed"></see> event occurs. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer">
			<summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.ContextMenu"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.ContextMenu"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary> Called when a <see cref="E:System.Windows.ContentElement.KeyDown"></see> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu"></see>. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.ContentElement.KeyUp"></see> event.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyUp"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)">
			<summary> Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened"></see> event occurs. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Called when a context menu's visual parent changes. </summary>
			<param name="oldParent">The object that the context menu was previously attached to.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary> Prepares the specified element to display the specified item. </summary>
			<param name="item">Specified item.</param>
			<param name="element">Element used to display the specified item.</param>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback">
			<summary> Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu"></see> should be placed on the screen. </summary>
			<returns>Callback that indicates the location of the <see cref="T:System.Windows.Controls.ContextMenu"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.HasDropShadow">
			<summary>Gets or sets whether the context menu has a drop shadow.</summary>
			<returns>A Boolean value that is true if the context menu has a drop shadow; false otherwise. The default is false. </returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.HorizontalOffset">
			<summary> Gets or sets where along the x-direction to place the <see cref="T:System.Windows.Controls.ContextMenu"></see> with respect to the parent control. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the horizontal offset of the <see cref="T:System.Windows.Controls.ContextMenu"></see>. This property cannot be set to a negative number. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.IsOpen">
			<summary> Gets or set the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen"></see> property of a context menu. </summary>
			<returns>A Boolean value, the default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.Placement">
			<summary> Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement"></see> property of a <see cref="T:System.Windows.Controls.ContextMenu"></see>. </summary>
			<returns>A value from the <see cref="T:System.Windows.Controls.Primitives.PlacementMode"></see> enumeration. The default value is Bottom.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.PlacementRectangle">
			<summary> Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle"></see> property of a <see cref="T:System.Windows.Controls.ContextMenu"></see>. </summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.PlacementTarget">
			<summary> Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget"></see> property of a <see cref="T:System.Windows.Controls.ContextMenu"></see>. </summary>
			<returns>A PlacementTarget. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.StaysOpen">
			<summary> Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu"></see> should close automatically. </summary>
			<returns>A Boolean value, true if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen"></see> property changes to false; otherwise false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenu.VerticalOffset">
			<summary>Gets or sets where along the y-direction to place the <see cref="T:System.Windows.Controls.ContextMenu"></see> with respect to the parent control. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical offset of the <see cref="T:System.Windows.Controls.ContextMenu"></see>. This property cannot be set to a negative number. The default value is zero (0).</returns>
		</member>
		<member name="T:System.Windows.Controls.ContextMenuEventArgs">
			<summary> Provides data for a context menu event. </summary>
		</member>
		<member name="T:System.Windows.Controls.ContextMenuEventHandler">
			<summary> Represents the methods that handle the ContextMenuClosing and ContextMenuOpening events. </summary>
		</member>
		<member name="T:System.Windows.Controls.ContextMenuService">
			<summary> Service class that provides the system implementation for displaying a <see cref="T:System.Windows.Controls.ContextMenu"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.ContextMenuClosingEvent">
			<summary> Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing"></see> event, as exposed on classes that implement this event. </summary>
			<returns>Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.ContextMenuOpeningEvent">
			<summary>Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> event, as exposed on classes that implement this event.</summary>
			<returns>The <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> event's identifier.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.ContextMenuProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.HasDropShadowProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.HasDropShadow"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.HorizontalOffsetProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.IsEnabledProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.PlacementProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.Placement"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.Placement"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.PlacementRectangleProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.PlacementTargetProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.ShowOnDisabledProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ContextMenuService.VerticalOffsetProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetContextMenu(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.FrameworkElement.ContextMenu"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetHasDropShadow(System.Windows.DependencyObject)">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu"></see> has a drop shadow. </summary>
			<returns>A Boolean value, true if the <see cref="T:System.Windows.Controls.ContextMenu"></see> has a drop shadow; false otherwise.</returns>
			<param name="element">Object to query concerning whether it has a drop shadow.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetHorizontalOffset(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetIsEnabled(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetPlacement(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.Placement"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.Placement"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.Placement"></see>  property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetPlacementRectangle(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetPlacementTarget(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetShowOnDisabled(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.GetVerticalOffset(System.Windows.DependencyObject)">
			<summary> Gets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset"></see> property of the specified object. </summary>
			<returns>Value of the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset"></see> property.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetContextMenu(System.Windows.DependencyObject,System.Windows.Controls.ContextMenu)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ContextMenu"></see> property of the specified object.</summary>
			<param name="element">Object to set the property on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu"></see> has a drop shadow.</summary>
			<param name="element">Object to set the property on.</param>
			<param name="value">Boolean value to set, true if the <see cref="T:System.Windows.Controls.ContextMenu"></see> has a drop shadow; false otherwise.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.HorizontalOffset"></see> property of the specified object. </summary>
			<param name="element">Object to set the value on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.IsEnabled"></see> property of the specified object. </summary>
			<param name="element">Object to set value on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.Placement"></see>  property of the specified object. </summary>
			<param name="element">Object to set the value on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle"></see> property of the specified object. </summary>
			<param name="element">Object to set the value on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget"></see> property of the specified object. </summary>
			<param name="element">Object to set value on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled"></see> property of the specified object. </summary>
			<param name="element">Object to set value on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ContextMenuService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.ContextMenuService.VerticalOffset"></see> property of the specified object. </summary>
			<param name="element">Object to set value on.</param>
			<param name="value">Value to set.</param>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.ContextMenu">
			<summary>Gets or sets the content of a <see cref="T:System.Windows.Controls.ContextMenu"></see>. </summary>
			<returns>Returns the <see cref="T:System.Windows.Controls.ContextMenu"></see> content; if there is no content the property returns null. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.HasDropShadow">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu"></see> has the drop shadow effect enabled. </summary>
			<returns>A Boolean value, true if the <see cref="T:System.Windows.Controls.ContextMenu"></see> has the drop shadow effect enable; false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.HorizontalOffset">
			<summary>Gets or sets a value that indicates where along the x-direction to place the <see cref="T:System.Windows.Controls.ContextMenu"></see> with respect to the parent control.</summary>
			<returns><see cref="T:System.Double"></see> that specifies the horizontal placement of the <see cref="T:System.Windows.Controls.ContextMenu"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.IsEnabled">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu"></see> can be shown.</summary>
			<returns>A Boolean value that is true if the <see cref="T:System.Windows.Controls.ContextMenu"></see> is shown; false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.Placement">
			<summary>Gets or sets a value that specifies the placement of the <see cref="T:System.Windows.Controls.ContextMenu"></see> relative to the <see cref="P:System.Windows.Controls.ContextMenuService.PlacementTarget"></see> or <see cref="P:System.Windows.Controls.ContextMenuService.PlacementRectangle"></see>.</summary>
			<returns>Returns where the <see cref="T:System.Windows.Controls.ContextMenu"></see> should be placed in relation to its parent. The property sets a <see cref="T:System.Windows.Controls.Primitives.PlacementMode"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.PlacementRectangle">
			<summary>Gets or sets a rectangle that is used to determine the placement of a <see cref="T:System.Windows.Controls.ContextMenu"></see>.</summary>
			<returns>Returns a RECT structure.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.PlacementTarget">
			<summary>Gets or sets the parent control of the <see cref="T:System.Windows.Controls.ContextMenu"></see>.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> that is the parent of the <see cref="T:System.Windows.Controls.ContextMenu"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.ShowOnDisabled">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu"></see> should be shown when its parent is grayed out.</summary>
			<returns>A Boolean value that is true if the <see cref="T:System.Windows.Controls.ContextMenu"></see> should be shown when its parent is grayed out; false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Controls.ContextMenuService.VerticalOffset">
			<summary>Gets or sets a value that indicates where along the y-direction to place the <see cref="T:System.Windows.Controls.ContextMenu"></see> with respect to the parent control.</summary>
			<returns><see cref="T:System.Double"></see> that specifies the vertical placement of the <see cref="T:System.Windows.Controls.ContextMenu"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.Control">
			<summary>Represents the base class for all user-interactive elements </summary>
		</member>
		<member name="M:System.Windows.Controls.Control.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Control"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.Control.MouseDoubleClick">
			<summary>Occurs when a mouse button is clicked two or more times. </summary>
		</member>
		<member name="E:System.Windows.Controls.Control.PreviewMouseDoubleClick">
			<summary>Occurs when a user clicks the mouse button two or more times. </summary>
		</member>
		<member name="F:System.Windows.Controls.Control.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.Background"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.BorderBrushProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.BorderBrush"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.BorderBrush"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.BorderThicknessProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.BorderThickness"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.BorderThickness"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.FontFamilyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontFamily"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontFamily"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.FontSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontSize"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontSize"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.FontStretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontStretch"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontStretch"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.FontStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontStyle"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.FontWeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.FontWeight"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.FontWeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.ForegroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.Foreground"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Foreground"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.HorizontalContentAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.HorizontalContentAlignment"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.IsTabStopProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.IsTabStop"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.IsTabStop"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.MouseDoubleClickEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"></see> routed event. This field is read-only.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.PaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.Padding"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Padding"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.PreviewMouseDoubleClickEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick"></see> routed event. This field is read-only.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.TabIndexProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.TabIndex"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.TabIndex"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.TemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.Template"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.Template"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Control.VerticalContentAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Control.VerticalContentAlignment"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)">
			<summary>Called to arrange and size the content of a <see cref="T:System.Windows.Controls.Control"></see> object. </summary>
			<returns>The size of the control.</returns>
			<param name="arrangeBounds">The computed size that is used to arrange the content.</param>
		</member>
		<member name="M:System.Windows.Controls.Control.MeasureOverride(System.Windows.Size)">
			<summary>Called to remeasure a control. </summary>
			<returns>The size of the control.</returns>
			<param name="constraint">Measurement constraints, a control cannot return a size larger than the constraint.</param>
		</member>
		<member name="M:System.Windows.Controls.Control.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.Control.MouseDoubleClick"></see>  event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Control.OnPreviewMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when the mouse button is clicked twice.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.Control.PreviewMouseDoubleClick"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
			<summary>Called whenever the control's template changes. </summary>
			<returns>A template.</returns>
			<param name="oldTemplate">The old template.</param>
			<param name="newTemplate">The new template.</param>
		</member>
		<member name="M:System.Windows.Controls.Control.ToString">
			<summary>Returns the string representation of a <see cref="T:System.Windows.Controls.Control"></see> object. </summary>
			<returns>A string that represents the control.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.Background">
			<summary>Gets or sets a brush that describes the background of a control. This is a  dependency property.</summary>
			<returns>The brush that is used to fill the background of the control. The default value is Transparent. </returns>
		</member>
		<member name="P:System.Windows.Controls.Control.BorderBrush">
			<summary>Gets or sets a brush that describes the border background of a control. This is a  dependency property.</summary>
			<returns>The brush that is used to fill the control's border; the default value is Transparent.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.BorderThickness">
			<summary>Gets or sets a thickness that describes the border thickness of a control. </summary>
			<returns>A thickness value; the default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.FontFamily">
			<summary>Gets or sets the name of the specified font. </summary>
			<returns>A font family. The default value is the system dialog font.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.FontSize">
			<summary>Gets or sets the font size. </summary>
			<returns>A font size. The default value is the system dialog font size. The font size must be a positive number and in the range of the <see cref="P:System.Windows.SystemFonts.MessageFontSize"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.FontStretch">
			<summary>Gets or sets the degree to which a font is condensed or expanded on the screen. </summary>
			<returns>A <see cref="T:System.Windows.FontStretches"></see> enumeration value. The default value is <see cref="P:System.Windows.FontStretches.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.FontStyle">
			<summary>Gets or sets the font style. </summary>
			<returns>A <see cref="T:System.Windows.FontStyles"></see> enumeration value. The default value is <see cref="P:System.Windows.FontStyles.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.FontWeight">
			<summary>Gets or sets the weight or thickness of the specified font. </summary>
			<returns>A <see cref="T:System.Windows.FontWeights"></see> enumeration value. The default value is <see cref="P:System.Windows.FontWeights.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.Foreground">
			<summary>Gets or sets a brush that describes the foreground color.  </summary>
			<returns>The brush that paints the foreground of the control.The default value is the system dialog font color.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.HorizontalContentAlignment">
			<summary>Gets or sets the horizontal alignment of a control's content.  </summary>
			<returns>The horizontal alignment of a control's content. The default is <see cref="F:System.Windows.HorizontalAlignment.Left"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.IsTabStop">
			<summary>Gets or sets whether a control is included in tab navigation. </summary>
			<returns>true if is included in tab navigation; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.Padding">
			<summary>Gets or sets the padding inside a control. </summary>
			<returns>A Thickness. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.TabIndex">
			<summary>Gets or sets a value that determines the order in which elements are logically navigated. </summary>
			<returns>A value that determines the order of logical navigation for a device. The default value is one (1).</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.Template">
			<summary>Gets or sets a control template. </summary>
			<returns>A Template.</returns>
		</member>
		<member name="P:System.Windows.Controls.Control.VerticalContentAlignment">
			<summary>Gets or sets the vertical alignment of a control's content.  </summary>
			<returns>The vertical alignment of a control's content. The default value is <see cref="F:System.Windows.VerticalAlignment.Top"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.ControlTemplate">
			<summary>Specifies the visual structure and behavioral aspects of a <see cref="T:System.Windows.Controls.Control"></see> that can be shared across multiple instances of the control.</summary>
		</member>
		<member name="M:System.Windows.Controls.ControlTemplate.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ControlTemplate"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.ControlTemplate.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ControlTemplate"></see> class with the specified target type.</summary>
			<param name="targetType">The type this template is intended for.</param>
		</member>
		<member name="M:System.Windows.Controls.ControlTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
			<summary>Checks the templated parent against a set of rules.</summary>
			<param name="templatedParent">The element this template is applied to.</param>
			<exception cref="T:System.ArgumentException">The <see cref="P:System.Windows.Controls.ControlTemplate.TargetType"></see> of a <see cref="T:System.Windows.Controls.ControlTemplate"></see> must match the type of the <see cref="T:System.Windows.Controls.Control"></see> that it is being applied to.</exception>
			<exception cref="T:System.ArgumentNullException">The templatedParent must not be null.</exception>
			<exception cref="T:System.ArgumentException">You must associate the <see cref="T:System.Windows.Controls.ControlTemplate"></see> with a <see cref="T:System.Windows.Controls.Control"></see> by setting the <see cref="P:System.Windows.Controls.Control.Template"></see> property before using the <see cref="T:System.Windows.Controls.ControlTemplate"></see> on the <see cref="T:System.Windows.Controls.Control"></see>.</exception>
		</member>
		<member name="P:System.Windows.Controls.ControlTemplate.TargetType">
			<summary>Gets or sets the type for which this <see cref="T:System.Windows.Controls.ControlTemplate"></see> is intended.</summary>
			<returns>The default value is null.</returns>
			<exception cref="T:System.ArgumentNullException">The <see cref="P:System.Windows.Controls.ControlTemplate.TargetType"></see> property must not be null if the definition of the template has a <see cref="T:System.Windows.Controls.ContentPresenter"></see>.</exception>
			<exception cref="T:System.ArgumentException">The specified types is not valid. The <see cref="P:System.Windows.Controls.ControlTemplate.TargetType"></see> of a <see cref="T:System.Windows.Controls.ControlTemplate"></see> must be or inherit from a <see cref="T:System.Windows.Controls.Control"></see>, a <see cref="T:System.Windows.Controls.Page"></see>, or a <see cref="T:System.Windows.Navigation.PageFunctionBase"></see>.</exception>
		</member>
		<member name="P:System.Windows.Controls.ControlTemplate.Triggers">
			<summary>Gets a collection of <see cref="T:System.Windows.TriggerBase"></see> objects that apply property changes or perform actions based on specified conditions.</summary>
			<returns>A collection of <see cref="T:System.Windows.TriggerBase"></see> objects. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.DataTemplateSelector">
			<summary>Provides a way to choose a <see cref="T:System.Windows.DataTemplate"></see> based on the data object and the data-bound element.</summary>
		</member>
		<member name="M:System.Windows.Controls.DataTemplateSelector.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
			<summary>When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate"></see> based on custom logic.</summary>
			<returns>Returns a <see cref="T:System.Windows.DataTemplate"></see> or null. The default value is null.</returns>
			<param name="item">The data object for which to select the template.</param>
			<param name="container">The data-bound object.</param>
		</member>
		<member name="T:System.Windows.Controls.Decorator">
			<summary>Provides a base class for elements that apply effects onto or around a single child element, such as <see cref="T:System.Windows.Controls.Border"></see> or <see cref="T:System.Windows.Controls.Viewbox"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Decorator.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Decorator"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.Decorator"></see> element.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.Decorator"></see> element and its child.</returns>
			<param name="arrangeSize">The <see cref="T:System.Windows.Size"></see> this element uses to arrange its child content.</param>
		</member>
		<member name="M:System.Windows.Controls.Decorator.GetVisualChild(System.Int32)">
			<summary>Gets the child <see cref="T:System.Windows.Media.Visual"></see> element at the specified index position.</summary>
			<returns>The child element at the specified index position.</returns>
			<param name="index">Index position of the child element.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is greater than the number of visual child elements.</exception>
		</member>
		<member name="M:System.Windows.Controls.Decorator.MeasureOverride(System.Windows.Size)">
			<summary>Measures the child element of a <see cref="T:System.Windows.Controls.Decorator"></see> to prepare for arranging it during the <see cref="M:System.Windows.Controls.Decorator.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>The target <see cref="T:System.Windows.Size"></see> of the element.</returns>
			<param name="constraint">An upper limit <see cref="T:System.Windows.Size"></see> that should not be exceeded.</param>
		</member>
		<member name="M:System.Windows.Controls.Decorator.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.Decorator.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.Decorator.Child">
			<summary>Gets or sets the single child element of a <see cref="T:System.Windows.Controls.Decorator"></see>.</summary>
			<returns>The single child element of a <see cref="T:System.Windows.Controls.Decorator"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Decorator.LogicalChildren">
			<summary>Gets an enumerator that can be used to iterate the logical child elements of a <see cref="T:System.Windows.Controls.Decorator"></see>.</summary>
			<returns>An enumerator that can be used to iterate the logical child elements of a <see cref="T:System.Windows.Controls.Decorator"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Decorator.VisualChildrenCount">
			<summary>Gets a value that is equal to the number of visual child elements of this instance of <see cref="T:System.Windows.Controls.Decorator"></see>.</summary>
			<returns>The number of visual child elements.</returns>
		</member>
		<member name="T:System.Windows.Controls.DefinitionBase">
			<summary>Defines the functionality required to support a shared-size group that is used by the <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> and <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> classes. This is an abstract class. </summary>
		</member>
		<member name="F:System.Windows.Controls.DefinitionBase.SharedSizeGroupProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Controls.DefinitionBase.SharedSizeGroup">
			<summary>Gets or sets a value that identifies a <see cref="T:System.Windows.Controls.ColumnDefinition"></see> or <see cref="T:System.Windows.Controls.RowDefinition"></see> as a member of a defined group that shares sizing properties. </summary>
			<returns>A <see cref="T:System.String"></see> that identifies a shared-size group.</returns>
		</member>
		<member name="T:System.Windows.Controls.Dock">
			<summary>Specifies the <see cref="T:System.Windows.Controls.Dock"></see> position of a child element that is inside a <see cref="T:System.Windows.Controls.DockPanel"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Dock.Bottom">
			<summary>A child element that is positioned at the bottom of the <see cref="T:System.Windows.Controls.DockPanel"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Dock.Left">
			<summary>A child element that is positioned on the left side of the <see cref="T:System.Windows.Controls.DockPanel"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Dock.Right">
			<summary>A child element that is positioned on the right side of the <see cref="T:System.Windows.Controls.DockPanel"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Dock.Top">
			<summary>A child element that is positioned at the top of the <see cref="T:System.Windows.Controls.DockPanel"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.DockPanel">
			<summary>Defines an area where you can arrange child elements either horizontally or vertically, relative to each other. </summary>
		</member>
		<member name="M:System.Windows.Controls.DockPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DockPanel"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.DockPanel.DockProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DockPanel.Dock"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DockPanel.Dock"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.DockPanel.LastChildFillProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DockPanel.LastChildFill"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DockPanel.LastChildFill"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content (child elements) of a <see cref="T:System.Windows.Controls.DockPanel"></see> element.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.DockPanel"></see> element.</returns>
			<param name="arrangeSize">The <see cref="T:System.Windows.Size"></see> this element uses to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.DockPanel.GetDock(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.DockPanel.Dock"></see> attached property for a specified <see cref="T:System.Windows.UIElement"></see>.</summary>
			<returns>The <see cref="P:System.Windows.Controls.DockPanel.Dock"></see> property value for the element.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.DockPanel.MeasureOverride(System.Windows.Size)">
			<summary>Measures the child elements of a <see cref="T:System.Windows.Controls.DockPanel"></see> prior to arranging them during the <see cref="M:System.Windows.Controls.DockPanel.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> that represents the element size you want.</returns>
			<param name="constraint">A maximum <see cref="T:System.Windows.Size"></see> to not exceed.</param>
		</member>
		<member name="M:System.Windows.Controls.DockPanel.SetDock(System.Windows.UIElement,System.Windows.Controls.Dock)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.DockPanel.Dock"></see> attached property to a specified element. </summary>
			<param name="element">The element to which the attached property is written.</param>
			<param name="dock">The needed <see cref="T:System.Windows.Controls.Dock"></see> value.</param>
		</member>
		<member name="P:System.Windows.Controls.DockPanel.LastChildFill">
			<summary>Gets or sets a value that indicates whether the last child element within a <see cref="T:System.Windows.Controls.DockPanel"></see> stretches to fill the remaining available space. </summary>
			<returns>true if the last child element stretches to fill the remaining space; otherwise false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.DockPanel.Dock">
			<summary>Gets or sets a value that indicates the position of a child element within a parent <see cref="T:System.Windows.Controls.DockPanel"></see>.</summary>
			<returns>The position of a child element that is inside a <see cref="T:System.Windows.Controls.DockPanel"></see>. The default value is <see cref="F:System.Windows.Controls.Dock.Left"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.DocumentViewer">
			<summary>Represents a document viewing control that can host paginated <see cref="T:System.Windows.Documents.FixedDocument"></see> content such as an <see cref="T:System.Windows.Xps.Packaging.XpsDocument"></see>. </summary>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.DocumentViewer"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.CanDecreaseZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.CanIncreaseZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.CanMoveDownProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveDown"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.CanMoveLeftProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveLeft"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.CanMoveRightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveRight"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.CanMoveUpProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.CanMoveUp"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.ExtentHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.ExtentHeight"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.ExtentWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.HorizontalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset"></see>dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalOffset"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.HorizontalPageSpacingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.MaxPagesAcrossProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.ShowPageBordersProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.ShowPageBorders"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.VerticalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.VerticalOffset"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.VerticalPageSpacingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.ViewportHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.ViewportHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.ViewportWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.ViewportWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.DocumentViewer.ZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.DocumentViewer.Zoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.DocumentViewer.Zoom"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)">
			<summary>Fits the document to a specified maximum number of page widths.</summary>
			<param name="pagesAcross">The maximum number of pages to fit in the current <see cref="P:System.Windows.Controls.DocumentViewer.ExtentWidth"></see>. </param>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)">
			<summary>Returns a collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> elements that are currently displayed.</summary>
			<returns>The collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> elements that are currently displayed in the <see cref="T:System.Windows.Controls.DocumentViewer"></see> control.</returns>
			<param name="changed">Returns true if the collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> elements changed after the last call to <see cref="M:System.Windows.Controls.DocumentViewer.GetPageViewsCollection(System.Boolean@)"></see>; otherwise, false.</param>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnApplyTemplate">
			<summary>Responds to calls to the <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see> method.</summary>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
			<summary>Responds to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)"></see> method from the <see cref="T:System.Windows.Controls.Primitives.DocumentViewerBase"></see> implementation.</summary>
			<param name="rect">The rectangular region of the element to make visible.</param>
			<param name="pageNumber">The number of the page to be viewed.</param>
			<param name="element">The object to make visible.</param>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for this <see cref="T:System.Windows.Controls.DocumentViewer"></see> control.</summary>
			<returns>The new <see cref="T:System.Windows.Automation.Peers.DocumentViewerAutomationPeer"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnFitToMaxPagesAcrossCommand(System.Int32)">
			<summary>Responds to calls to the <see cref="M:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcross(System.Int32)"></see> method.</summary>
			<param name="pagesAcross">The number of pages to fit across the content area.</param>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnGoToPageCommand(System.Int32)">
			<summary>Responds to calls to the <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)"></see> method.</summary>
			<param name="pageNumber">The page number to position to.</param>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to <see cref="E:System.Windows.UIElement.KeyDown"></see> events.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Responds to <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> events.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.DocumentViewer.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
			<summary>Responds to <see cref="E:System.Windows.UIElement.PreviewMouseWheel"></see> events.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.CanDecreaseZoom">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer"></see> can zoom out more.</summary>
			<returns>true if the control can zoom out more; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.CanIncreaseZoom">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer"></see> can zoom in more.</summary>
			<returns>true if the control can zoom in more; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.CanMoveDown">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer"></see> can move down more in the document.</summary>
			<returns>true if the control can move down more in the document; otherwise, false if the document is at the bottom.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.CanMoveLeft">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer"></see> can move more to the left in the document.</summary>
			<returns>true if the control can move more left in the document; otherwise, false if the document is at the leftmost edge.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.CanMoveRight">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer"></see> can move more to the right in the document.</summary>
			<returns>true if the control can move more to the right in the document; otherwise, false if the document is at the rightmost edge.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.CanMoveUp">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.DocumentViewer"></see> can move up more in the document.</summary>
			<returns>true if the control can move up more in the document; otherwise, false if the document is at the topmost edge.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.ExtentHeight">
			<summary>Gets the overall vertical height of the paginated document.</summary>
			<returns>The overall vertical height of the paginated content specified in device independent pixels.  The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.ExtentWidth">
			<summary>Gets the overall horizontal width of the paginated document.</summary>
			<returns>The current horizontal width of the content layout area specified in device independent pixels.  The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.FitToHeightCommand">
			<summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand"></see> that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight"></see> operation.</summary>
			<returns>The routed command that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToHeight"></see> operation.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.FitToMaxPagesAcrossCommand">
			<summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand"></see> that performs the <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross"></see> operation.</summary>
			<returns>The routed command that performs the <see cref="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross"></see> operation.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.FitToWidthCommand">
			<summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand"></see> that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth"></see> operation.</summary>
			<returns>The routed command that performs the <see cref="M:System.Windows.Controls.DocumentViewer.FitToWidth"></see> operation.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.HorizontalOffset">
			<summary>Gets or sets the horizontal scroll position.</summary>
			<returns>The current horizontal scroll position specified in device independent pixels.  The initial default value is 0.0.</returns>
			<exception cref="T:System.ArgumentException">The value specified to set is negative.</exception>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.HorizontalPageSpacing">
			<summary>Gets or sets the horizontal space between pages.</summary>
			<returns>The horizontal space between displayed pages specified in device independent pixels.  The default value is 10.0.</returns>
			<exception cref="T:System.ArgumentException">The value specified to set is negative.</exception>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.MaxPagesAcross">
			<summary>Gets or sets a value defining the maximum number of page columns to display.</summary>
			<returns>The maximum number of page columns to be displayed.  The default value is 1.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.ShowPageBorders">
			<summary>Gets or sets a value that indicates whether drop-shadow page borders are displayed.</summary>
			<returns>true if drop-shadow borders are displayed; otherwise, false.  The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.VerticalOffset">
			<summary>Gets or sets the vertical scroll position. </summary>
			<returns>The current vertical scroll position offset in device independent pixels.  The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.VerticalPageSpacing">
			<summary>Gets or sets the vertical spacing between displayed pages.</summary>
			<returns>The vertical space between displayed pages in device independent pixels.  The default value is 10.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.ViewportHeight">
			<summary>Gets the vertical size of the scrollable content area.</summary>
			<returns>The vertical size of the scrollable content area  in device independent pixels.  The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.ViewportWidth">
			<summary>Gets the horizontal size of the scrollable content area.</summary>
			<returns>The horizontal size of the scrollable content area in device independent pixels.  The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.ViewThumbnailsCommand">
			<summary>Gets the <see cref="T:System.Windows.Input.RoutedUICommand"></see> that performs the <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails"></see> operation.</summary>
			<returns>The routed command that performs the <see cref="M:System.Windows.Controls.DocumentViewer.ViewThumbnails"></see> operation.</returns>
		</member>
		<member name="P:System.Windows.Controls.DocumentViewer.Zoom">
			<summary>Gets or sets the document zoom percentage.</summary>
			<returns>The zoom percentage value, 5.0% to 5000.0%.  The default value is 100.0%.</returns>
		</member>
		<member name="T:System.Windows.Controls.ExceptionValidationRule">
			<summary>Represents a rule that checks for exceptions that are thrown during the update of the binding source property.</summary>
		</member>
		<member name="M:System.Windows.Controls.ExceptionValidationRule.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ExceptionValidationRule"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.ExceptionValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
			<summary>Performs validation checks on a value.</summary>
			<returns>A <see cref="T:System.Windows.Controls.ValidationResult"></see> object.</returns>
			<param name="cultureInfo">The culture to use in this rule.</param>
			<param name="value">The value (from the binding target) to check.</param>
		</member>
		<member name="T:System.Windows.Controls.ExpandDirection">
			<summary>Specifies the direction in which an <see cref="T:System.Windows.Controls.Expander"></see> control opens. </summary>
		</member>
		<member name="F:System.Windows.Controls.ExpandDirection.Down">
			<summary>The <see cref="T:System.Windows.Controls.Expander"></see> control opens down.</summary>
		</member>
		<member name="F:System.Windows.Controls.ExpandDirection.Left">
			<summary>The <see cref="T:System.Windows.Controls.Expander"></see> control opens left.</summary>
		</member>
		<member name="F:System.Windows.Controls.ExpandDirection.Right">
			<summary>The <see cref="T:System.Windows.Controls.Expander"></see> control opens right. </summary>
		</member>
		<member name="F:System.Windows.Controls.ExpandDirection.Up">
			<summary>The <see cref="T:System.Windows.Controls.Expander"></see> control opens up.</summary>
		</member>
		<member name="T:System.Windows.Controls.Expander">
			<summary>Represents the control that displays a header that has a collapsible window that displays content.</summary>
		</member>
		<member name="M:System.Windows.Controls.Expander.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Expander"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.Expander.Collapsed">
			<summary>Occurs when the content window of an <see cref="T:System.Windows.Controls.Expander"></see> control closes and only the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> is visible.</summary>
		</member>
		<member name="E:System.Windows.Controls.Expander.Expanded">
			<summary>Occurs when the content window of an <see cref="T:System.Windows.Controls.Expander"></see> control opens to display both its header and content. </summary>
		</member>
		<member name="F:System.Windows.Controls.Expander.CollapsedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Expander.Collapsed"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Expander.Collapsed"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Expander.ExpandDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Expander.ExpandDirection"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Expander.ExpandDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Expander.ExpandedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Expander.Expanded"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Expander.Expanded"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Expander.IsExpandedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Expander.IsExpanded"></see> dependency property. This field is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Expander.IsExpanded"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Expander.OnCreateAutomationPeer">
			<summary>Creates the implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Expander"></see> control.</summary>
			<returns>A new <see cref="T:System.Windows.Automation.Peers.ExpanderAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.Expander"></see> control.</returns>
		</member>
		<member name="P:System.Windows.Controls.Expander.ExpandDirection">
			<summary>Gets or sets the direction in which the <see cref="T:System.Windows.Controls.Expander"></see> content window opens. </summary>
			<returns>An <see cref="T:System.Windows.Controls.ExpandDirection"></see> enumeration value that defines which direction the content window opens. The default value is Down. </returns>
		</member>
		<member name="P:System.Windows.Controls.Expander.IsExpanded">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Expander"></see> content window is visible.</summary>
			<returns>true if the content window is expanded; otherwise, false. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.FlowDocumentPageViewer">
			<summary>Represents a control for viewing flow content in a fixed viewing mode that shows content one page at a time.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoomPropertyKey">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoomPropertyKey">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.MaxZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.MinZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentPageViewer.ZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.DecreaseZoom">
			<summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.Find">
			<summary>Toggles the Find dialog.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.IncreaseZoom">
			<summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnApplyTemplate">
			<summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCancelPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
			<summary>Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Arguments of the event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnCreateAutomationPeer">
			<summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementation for this control, as part of the WPF automation infrastructure.</summary>
			<returns>The appropriate <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementation for this control.</returns>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDecreaseZoomCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnDocumentChanged">
			<summary>Called when the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> property is changed.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFindCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Find"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnFirstPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.FirstPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnGoToPageCommand(System.Int32)">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.GoToPage"></see> routed command.</summary>
			<param name="pageNumber">The page number to go to.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnIncreaseZoomCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.UIElement.KeyDown"></see>  routed event.</summary>
			<param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs"></see> object that contains the arguments associated with the <see cref="E:System.Windows.UIElement.KeyDown"></see> routed event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnLastPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.LastPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.UIElement.MouseWheel"></see>  routed event.</summary>
			<param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs"></see> object containing arguments associated with the <see cref="E:System.Windows.UIElement.MouseWheel"></see> routed event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnNextPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.NextPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPageViewsChanged">
			<summary>Handles the <see cref="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged"></see>  routed event.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPreviousPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentPageViewer.OnPrintCompleted">
			<summary>Called when a printing job has completed.</summary>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanDecreaseZoom">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> level can be decreased. This is a dependency property.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> level can be decreased; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentPageViewer.CanIncreaseZoom">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> level can be increased. This is a dependency property.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> level can be increased; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentPageViewer.MaxZoom">
			<summary>Gets or sets the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see>. This is a dependency property.</summary>
			<returns>The maximum allowable zoom level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see>.This property is interpreted as a percentage.The default value is 200.0 (a maximum zoom of 200%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentPageViewer.MinZoom">
			<summary>Gets or sets the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see>. This is a dependency property.</summary>
			<returns>The minimum allowable zoom level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see>.This property is interpreted as a percentage.The default value is 80.0 (a minimum zoom of 80%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentPageViewer.Zoom">
			<summary>Gets or sets the current zoom level for the <see cref="T:System.Windows.Controls.FlowDocumentPageViewer"></see>. This is a dependency property.</summary>
			<returns>The current zoom level.This property is interpreted as a percentage.The default value is 100.0 (a zoom level of 100%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentPageViewer.ZoomIncrement">
			<summary>Gets or sets the zoom increment. This is a dependency property.</summary>
			<returns>The current zoom increment.This property is interpreted as a percentage.The default value is 10.0 (zoom increments by 10%).</returns>
		</member>
		<member name="T:System.Windows.Controls.FlowDocumentReader">
			<summary>Provides a control for viewing flow content, with built-in support for multiple viewing modes.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToNextPageProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPageProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.DocumentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.Document"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.Document"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.IsFindEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.IsPrintEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.MaxZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.MaxZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.MinZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.MinZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.PageCountProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.PageCount"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.PageNumberProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.PageNumber"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand">
			<summary>Identifies the <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.ViewingModeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.ViewingMode"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.ZoomIncrementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReader.ZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.CancelPrint">
			<summary>Cancels any current printing job.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.CanGoToPage(System.Int32)">
			<summary>Returns a value that indicates whether or the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> is able to jump to the specified page number.</summary>
			<returns>A Boolean value that indicates whether or the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> is able to jump to the specified page number.</returns>
			<param name="pageNumber">A page number to check for as a valid jump target.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.DecreaseZoom">
			<summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.Find">
			<summary>Toggles the Find dialog.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.IncreaseZoom">
			<summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnApplyTemplate">
			<summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnCancelPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnDecreaseZoomCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnFindCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Find"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnIncreaseZoomCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnInitialized(System.EventArgs)">
			<summary>Handles the <see cref="E:System.Windows.FrameworkElement.Initialized"></see>  routed event.</summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> object containing the arguments associated with the <see cref="E:System.Windows.FrameworkElement.Initialized"></see> routed event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged"></see>  routed event.</summary>
			<param name="e">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"></see> object containing the arguments associated with the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged"></see> routed event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>  Invoked whenever an unhandled Keyboard.KeyDown attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnPrintCompleted">
			<summary>Called when a printing job has completed.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.OnSwitchViewingModeCommand(System.Windows.Controls.FlowDocumentReaderViewingMode)">
			<summary>Handles the <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)"></see> routed command.</summary>
			<param name="viewingMode">A member of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode"></see> enumeration specifying the viewing mode to switch to.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.Print">
			<summary>Invokes a standard Print dialog which can be used to print the contents of the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> and configure printing preferences.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)">
			<summary>Executes the <see cref="F:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCommand"></see> command.</summary>
			<param name="viewingMode">A member of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode"></see> numeration specifying the desired viewing mode.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingModeCore(System.Windows.Controls.FlowDocumentReaderViewingMode)">
			<summary>Handles the <see cref="M:System.Windows.Controls.FlowDocumentReader.SwitchViewingMode(System.Windows.Controls.FlowDocumentReaderViewingMode)"></see> command.</summary>
			<param name="viewingMode">A member of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode"></see> numeration specifying the desired viewing mode.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. Use the <see cref="P:System.Windows.Controls.FlowDocumentReader.Document"></see> property to add a <see cref="T:System.Windows.Documents.FlowDocument"></see> as the content child for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentReader.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.CanDecreaseZoom">
			<summary>Gets a value that indicates whether or not the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level can be decreased.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level can be decreased; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToNextPage">
			<summary>Gets a value that indicates whether or not the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> can execute the <see cref="P:System.Windows.Input.NavigationCommands.NextPage"></see> routed command to jump to the next page of content.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> can jump to the next page of content; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.CanGoToPreviousPage">
			<summary>Gets a value that indicates whether or not the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> can execute the <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage"></see> routed command to jump to the previous page of content.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> can jump to the previous page of content; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.CanIncreaseZoom">
			<summary>Gets a value that indicates whether or not the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level can be increased.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level can be increased; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.Document">
			<summary>Gets or sets a <see cref="T:System.Windows.Documents.FlowDocument"></see> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.FlowDocument"></see> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.The default property is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.IsFindEnabled">
			<summary>Gets or sets a value that indicates whether or not the <see cref="P:System.Windows.Input.ApplicationCommands.Find"></see> routed command is enabled.</summary>
			<returns>true to enable the <see cref="P:System.Windows.Input.ApplicationCommands.Find"></see> routed command; otherwise, false.The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled">
			<summary>Gets or sets a value that indicates whether or not SinglePage is available as a viewing mode.</summary>
			<returns>true to indicate that SinglePage is available as a viewing mode; otherwise, false.The default value is true.</returns>
			<exception cref="T:System.ArgumentException">Raised when all viewing modes are disabled by setting this property to false while <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled"></see> and <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled"></see> are also false.</exception>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.IsPrintEnabled">
			<summary>Gets or sets a value that indicates whether or not the <see cref="P:System.Windows.Input.ApplicationCommands.Print"></see> routed command is enabled.</summary>
			<returns>true to enable the <see cref="P:System.Windows.Input.ApplicationCommands.Print"></see> routed command; otherwise, false.The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled">
			<summary>Gets or sets a value that indicates whether or not SingleColumnScroll is available as a viewing mode.</summary>
			<returns>true to indicate that SingleColumnScroll is available as a viewing mode; otherwise, false.The default value is false.</returns>
			<exception cref="T:System.ArgumentException">Raised when all viewing modes are disabled by setting this property to false while <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled"></see> and <see cref="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled"></see> are also false.</exception>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.IsTwoPageViewEnabled">
			<summary>Gets or sets a value that indicates whether or not FacingPages is available as a viewing mode.</summary>
			<returns>true to indicate that FacingPages is available as a viewing mode; otherwise, false.The default value is true.</returns>
			<exception cref="T:System.ArgumentException">Raised when all viewing modes are disabled by setting this property to false while <see cref="P:System.Windows.Controls.FlowDocumentReader.IsPageViewEnabled"></see> and <see cref="P:System.Windows.Controls.FlowDocumentReader.IsScrollViewEnabled"></see> are also false.</exception>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>An enumerator for the logical children.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.MaxZoom">
			<summary>Gets or sets the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>A double value specifying the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.  This property is interpreted as a percentage.The default value is 200.0 (a maximum zoom of 200%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.MinZoom">
			<summary>Gets or sets the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>A double value specifying the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentReader.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.This property is interpreted as a percentage.The default value is 80.0 (a minimum zoom of 80%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.PageCount">
			<summary>Gets the current number of display pages for the content hosted by the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>The current number of display pages for the content hosted by the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.PageNumber">
			<summary>Gets the page number for the currently displayed page.</summary>
			<returns>The page number for the currently displayed page.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.ViewingMode">
			<summary>Gets or sets the viewing mode for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.Controls.FlowDocumentReaderViewingMode"></see> enumeration specifying the viewing mode.The default value is SinglePage.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.Zoom">
			<summary>Gets or sets the current zoom level.</summary>
			<returns>The current zoom level.This property is interpreted as a percentage.The default value is 100.0 (a zoom level of 100%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentReader.ZoomIncrement">
			<summary>Gets or sets the zoom increment.</summary>
			<returns>The current zoom increment.This property is interpreted as a percentage.The default value is 10.0 (zoom increments by 10%).</returns>
		</member>
		<member name="T:System.Windows.Controls.FlowDocumentReaderViewingMode">
			<summary>Names viewing modes for the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> control.</summary>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Page">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> should show content one page at a time.</summary>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.Scroll">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> should show content in continuous scrolling mode.</summary>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentReaderViewingMode.TwoPage">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.FlowDocumentReader"></see> should show content two pages at a time, similar to an open book.</summary>
		</member>
		<member name="T:System.Windows.Controls.FlowDocumentScrollViewer">
			<summary>Provides a control for viewing flow content in a continuous scrolling mode.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoomProperty">
			<summary>Identifies the <see cref="F:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoomProperty"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.DocumentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisibleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.MinZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.FlowDocumentScrollViewer.ZoomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.CancelPrint">
			<summary>Cancels any current printing job.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.DecreaseZoom">
			<summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Find">
			<summary>Toggles the Find dialog.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.IncreaseZoom">
			<summary>Executes the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnApplyTemplate">
			<summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCancelPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
			<summary>Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Arguments of the event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnDecreaseZoomCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.DecreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnFindCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Find"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnIncreaseZoomCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.IncreaseZoom"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.UIElement.KeyDown"></see>  routed event.</summary>
			<param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs"></see> object containing the arguments associated with the <see cref="E:System.Windows.UIElement.KeyDown"></see> routed event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.UIElement.MouseWheel"></see>  routed event.</summary>
			<param name="e">A <see cref="T:System.Windows.Input.MouseWheelEventArgs"></see> object containing arguments associated with the <see cref="E:System.Windows.UIElement.MouseWheel"></see> routed event.</param>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.OnPrintCompleted">
			<summary>Called when a printing job has completed.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.Print">
			<summary>Invokes a standard Print dialog which can be used to print the contents of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> and configure printing preferences.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. Use the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Document"></see> property to add a <see cref="T:System.Windows.Documents.FlowDocument"></see> as the content child for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.FlowDocumentScrollViewer.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanDecreaseZoom">
			<summary>Gets a value that indicates whether or not the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level can be decreased.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level can be decreased; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.CanIncreaseZoom">
			<summary>Gets a value that indicates whether or not the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level can be increased.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level can be increased; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Document">
			<summary>Gets or sets a <see cref="T:System.Windows.Documents.FlowDocument"></see> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.FlowDocument"></see> that hosts the content to be displayed by the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.The default property is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.HorizontalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a horizontal scroll bar is shown.</summary>
			<returns>A value defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility"></see> enumeration.The default value is Auto.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsSelectionEnabled">
			<summary>Gets or sets a value that indicates whether or not selection of content within the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> is enabled.</summary>
			<returns>true to indicate that selection is enabled; otherwise, false.The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.IsToolBarVisible">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see> toolbar is visible.</summary>
			<returns>true to indicate that the toolbar is visible; otherwise, false.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
			<returns>An enumerator for the logical children.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MaxZoom">
			<summary>Gets or sets the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
			<returns>A double value specifying the maximum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.  This property is interpreted as a percentage.The default value is 200.0 (a maximum zoom of 200%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.MinZoom">
			<summary>Gets or sets the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.</summary>
			<returns>A double value specifying the minimum allowable <see cref="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom"></see> level for the <see cref="T:System.Windows.Controls.FlowDocumentScrollViewer"></see>.This property is interpreted as a percentage.The default value is 80.0 (a minimum zoom of 80%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.VerticalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a vertical scroll bar is shown.</summary>
			<returns>A value defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility"></see> enumeration. The default value is Visible.</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.Zoom">
			<summary>Gets or sets the current zoom level.</summary>
			<returns>The current zoom level.This property is interpreted as a percentage.The default value is 100.0 (a zoom level of 100%).</returns>
		</member>
		<member name="P:System.Windows.Controls.FlowDocumentScrollViewer.ZoomIncrement">
			<summary>Gets or sets the zoom increment.</summary>
			<returns>The current zoom increment.This property is interpreted as a percentage.The default value is 10.0 (zoom increments by 10%).</returns>
		</member>
		<member name="T:System.Windows.Controls.Frame">
			<summary>Frame is a content control that supports navigation.</summary>
		</member>
		<member name="M:System.Windows.Controls.Frame.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Frame"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.ContentRendered">
			<summary>Occurs after <see cref="T:System.Windows.Controls.Frame"></see> content has been rendered.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.FragmentNavigation">
			<summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.LoadCompleted">
			<summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.Navigated">
			<summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property, although it may not have completed loading.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.Navigating">
			<summary>Occurs when a new navigation is requested.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.NavigationFailed">
			<summary>Occurs when an error is raised while navigating to the requested content.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.NavigationProgress">
			<summary>Occurs periodically during a download to provide navigation progress information.</summary>
		</member>
		<member name="E:System.Windows.Controls.Frame.NavigationStopped">
			<summary>Occurs when the <see cref="M:System.Windows.Controls.Frame.StopLoading"></see> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.BackStackProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Frame.BackStack"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.CanGoBackProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CanGoBack"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.CanGoForwardProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Frame.CanGoForward"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.ForwardStackProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Frame.ForwardStack"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.JournalOwnershipProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Frame.JournalOwnership"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.NavigationUIVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.SandboxExternalContentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Frame.SandboxExternalContent"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Frame.SourceProperty">
			<summary>Identifies the Source dependency property. </summary>
			<returns>The identifier for the Source dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Frame.AddBackEntry(System.Windows.Navigation.CustomContentState)">
			<summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState"></see> object.</summary>
			<param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that represents application-defined state that is associated with a specific piece of content.</param>
			<exception cref="T:System.InvalidOperationException">state is null, and a <see cref="T:System.Windows.Navigation.CustomContentState"></see> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState"></see>.</exception>
		</member>
		<member name="M:System.Windows.Controls.Frame.AddChild(System.Object)">
			<summary>Adds a child to an object.</summary>
			<param name="value">Object to add</param>
		</member>
		<member name="M:System.Windows.Controls.Frame.AddText(System.String)">
			<summary>Adds text to an object.</summary>
			<param name="text">Text to add</param>
		</member>
		<member name="M:System.Windows.Controls.Frame.GoBack">
			<summary>Navigates to the most recent item in back navigation history, if a <see cref="T:System.Windows.Controls.Frame"></see> manages its own navigation history.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Controls.Frame.GoBack"></see> is called when there are no entries in back navigation history.</exception>
		</member>
		<member name="M:System.Windows.Controls.Frame.GoForward">
			<summary>Navigates to the most recent item in forward navigation history, if a <see cref="T:System.Windows.Controls.Frame"></see> manages its own navigation history.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Controls.Frame.GoForward"></see> is called when there are no entries in back navigation history.</exception>
		</member>
		<member name="M:System.Windows.Controls.Frame.Navigate(System.Object)">
			<summary>Navigate asynchronously to content that is contained by an object.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="content">An <see cref="T:System.Object"></see> that contains the content to navigate to.</param>
		</member>
		<member name="M:System.Windows.Controls.Frame.Navigate(System.Uri)">
			<summary>Navigate asynchronously to content that is specified by a uniform resource identifier (URI).</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="source">A <see cref="T:System.Uri"></see> object initialized with the URI for the desired content.</param>
		</member>
		<member name="M:System.Windows.Controls.Frame.Navigate(System.Object,System.Object)">
			<summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="extraData">A <see cref="T:System.Object"></see> that contains data to be used for processing during navigation.</param>
			<param name="content">An <see cref="T:System.Object"></see> that contains the content to navigate to.</param>
		</member>
		<member name="M:System.Windows.Controls.Frame.Navigate(System.Uri,System.Object)">
			<summary>Navigate asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="source">A <see cref="T:System.Uri"></see> object initialized with the URI for the desired content.</param>
			<param name="extraData">A <see cref="T:System.Object"></see> that contains data to be used for processing during navigation.</param>
		</member>
		<member name="M:System.Windows.Controls.Frame.OnApplyTemplate">
			<summary>Called when the template generation for the visual tree is created.</summary>
		</member>
		<member name="M:System.Windows.Controls.Frame.OnContentRendered(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.Frame.ContentRendered"></see> event.</summary>
			<param name="args">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Frame.OnCreateAutomationPeer">
			<summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.Frame"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.Frame"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Frame.RemoveBackEntry">
			<summary>Removes the most recent journal entry from back history.</summary>
			<returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry"></see> in back navigation history, if there is one.</returns>
		</member>
		<member name="M:System.Windows.Controls.Frame.ShouldSerializeContent">
			<summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value, true if the content should be serialized; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.BackStack">
			<summary>Returns an <see cref="T:System.Collections.IEnumerable"></see> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Controls.Frame"></see>. This is a dependency property.</summary>
			<returns><see cref="T:System.Collections.IEnumerable"></see> if at least one entry has been added to back navigation history. If there are not entries, or the <see cref="T:System.Windows.Controls.Frame"></see> does not own its own navigation history, <see cref="P:System.Windows.Controls.Frame.BackStack"></see> isnull.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.BaseUri">
			<summary>Gets or sets the base uniform resource identifier (URI) for a <see cref="T:System.Windows.Controls.Frame"></see>.</summary>
			<returns>The base uniform resource identifier (URI) of the <see cref="T:System.Windows.Controls.Frame"></see> control.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.CanGoBack">
			<summary>Gets whether there is at least one entry in back navigation history. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that is true if there is at least one entry in back navigation history. If there are no entries in back navigation history, or the <see cref="T:System.Windows.Controls.Frame"></see> does not own its own navigation history, <see cref="P:System.Windows.Controls.Frame.CanGoBack"></see> is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.CanGoForward">
			<summary>Gets whether there is at least one entry in forward navigation history. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that is true if there is at least one entry in forward navigation history. If there are no entries in forward navigation history, or the <see cref="T:System.Windows.Controls.Frame"></see> does not own its own navigation history, <see cref="P:System.Windows.Controls.Frame.CanGoForward"></see> is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.CurrentSource">
			<summary>Gets the uniform resource identifier (URI) of the content that was last navigated to.</summary>
			<returns>A <see cref="T:System.Uri"></see> for the content that was last navigated to, if navigated to by using a URI; otherwise, null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.ForwardStack">
			<summary>Returns an <see cref="T:System.Collections.IEnumerable"></see> that you use to enumerate the entries in forward navigation history for a <see cref="T:System.Windows.Controls.Frame"></see>.</summary>
			<returns><see cref="T:System.Collections.IEnumerable"></see> if at least one entry has been added to forward navigation history. If there are not entries, or the <see cref="T:System.Windows.Controls.Frame"></see> does not own its own navigation history, <see cref="P:System.Windows.Controls.Frame.ForwardStack"></see> isnull.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.JournalOwnership">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Controls.Frame"></see> is responsible for managing its own navigation history, or yields navigation history management to a parent navigator (<see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>).</summary>
			<returns>A <see cref="T:System.Windows.Navigation.JournalOwnership"></see> value that specifies whether <see cref="T:System.Windows.Controls.Frame"></see> manages its own journal. The default value is <see cref="F:System.Windows.Navigation.JournalOwnership.Automatic"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.NavigationService">
			<summary>Gets the navigation service used by this <see cref="T:System.Windows.Controls.Frame"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.Frame"></see> object that represents the navigation service used by this <see cref="T:System.Windows.Controls.Frame"></see>, if one is available. Otherwise, null is returned.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.NavigationUIVisibility">
			<summary>Gets or sets when the <see cref="T:System.Windows.Controls.Frame"></see> can show its navigation UI. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.Navigation.NavigationUIVisibility"></see> value that specifies when the <see cref="T:System.Windows.Controls.Frame"></see> can show its navigation UI. The default value is <see cref="F:System.Windows.Navigation.NavigationUIVisibility.Automatic"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Frame.SandboxExternalContent">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Controls.Frame"></see> isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set). This is a dependency property.</summary>
			<returns>true if content is isolated within a partial trust security sandbox; otherwise, false. The default is false.</returns>
			<exception cref="T:System.Security.SecurityException"><see cref="P:System.Windows.Controls.Frame.SandboxExternalContent"></see> is set when an application is executing in partial trust.</exception>
		</member>
		<member name="P:System.Windows.Controls.Frame.Source">
			<summary>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Uri"></see> that contains the URI for the current content, or the content that is currently being navigated to.</returns>
		</member>
		<member name="T:System.Windows.Controls.Grid">
			<summary>Defines a flexible grid area that consists of columns and rows.</summary>
		</member>
		<member name="M:System.Windows.Controls.Grid.#ctor">
			<summary>Initializes a new instance of <see cref="T:System.Windows.Controls.Grid"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Grid.ColumnProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Grid.Column"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.Column"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Grid.ColumnSpanProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Grid.ColumnSpan"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.ColumnSpan"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Grid.IsSharedSizeScopeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Grid.RowProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Grid.Row"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.Row"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Grid.RowSpanProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Grid.RowSpan"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.RowSpan"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Grid.ShowGridLinesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Grid.ShowGridLines"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Grid.ShowGridLines"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.Grid"></see> element.</summary>
			<returns><see cref="T:System.Windows.Size"></see> that represents the arranged size of this Grid element and its children.</returns>
			<param name="arrangeSize">Specifies the size this <see cref="T:System.Windows.Controls.Grid"></see> element should use to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.GetColumn(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.Column"></see> attached property from a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.Grid.Column"></see> attached property.</returns>
			<param name="element">The element from which to read the property value.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.GetColumnSpan(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan"></see> attached property from a given <see cref="T:System.Windows.UIElement"></see>.</summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan"></see> attached property.</returns>
			<param name="element">The element from which to read the property value.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.GetIsSharedSizeScope(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope"></see> attached property from a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope"></see> attached property.</returns>
			<param name="element">The element from which to read the property value.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.GetRow(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.Row"></see> attached property from a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.Grid.Row"></see> attached property.</returns>
			<param name="element">The element from which to read the property value.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.GetRowSpan(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Grid.RowSpan"></see> attached property from a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.Grid.RowSpan"></see> attached property.</returns>
			<param name="element">The element from which to read the  property value.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.GetVisualChild(System.Int32)">
			<summary>Gets the child <see cref="T:System.Windows.Media.Visual"></see> at the specified index position.</summary>
			<param name="index">The zero-based index position of the desired <see cref="T:System.Windows.Media.Visual"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.MeasureOverride(System.Windows.Size)">
			<summary>Measures the children of a <see cref="T:System.Windows.Controls.Grid"></see> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.Grid.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns><see cref="T:System.Windows.Size"></see> that represents the required size to arrange child content.</returns>
			<param name="constraint">Indicates an upper limit size that should not be exceeded.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
			<summary>Called when the visual children of a <see cref="T:System.Windows.Controls.Grid"></see> element change.</summary>
			<param name="visualRemoved">Identifies the visual child that's removed.</param>
			<param name="visualAdded">Identifies the visual child that's added.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.SetColumn(System.Windows.UIElement,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.Column"></see> attached property to a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.Column"></see> attached property.</param>
			<param name="value">The property value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.SetColumnSpan(System.Windows.UIElement,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.ColumnSpan"></see> attached property to a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.ColumnSpan"></see> attached property.</param>
			<param name="value">The property value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.SetIsSharedSizeScope(System.Windows.UIElement,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope"></see> attached property to a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.IsSharedSizeScope"></see> attached property.</param>
			<param name="value">The property value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.SetRow(System.Windows.UIElement,System.Int32)">
			<summary> Sets the value of the <see cref="P:System.Windows.Controls.Grid.Row"></see> attached property to a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<param name="element">The element on which to set the attached property.</param>
			<param name="value">The property value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.SetRowSpan(System.Windows.UIElement,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Grid.RowSpan"></see> attached property to a given <see cref="T:System.Windows.UIElement"></see>. </summary>
			<param name="element">The element on which to set the <see cref="P:System.Windows.Controls.Grid.RowSpan"></see> attached property.</param>
			<param name="value">The property value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.Grid.ShouldSerializeColumnDefinitions">
			<summary>Returns true if <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> associated with this instance of <see cref="T:System.Windows.Controls.Grid"></see> is not empty.</summary>
			<returns>true if <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> associated with this instance of <see cref="T:System.Windows.Controls.Grid"></see> is not empty; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.Grid.ShouldSerializeRowDefinitions">
			<summary>Returns true if <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> associated with this instance of <see cref="T:System.Windows.Controls.Grid"></see> is not empty.</summary>
			<returns>true if <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> associated with this instance of <see cref="T:System.Windows.Controls.Grid"></see> is not empty; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.Grid.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.Grid.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.Grid.ColumnDefinitions">
			<summary>Gets a <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> defined on this instance of <see cref="T:System.Windows.Controls.Grid"></see>. </summary>
			<returns>A <see cref="T:System.Windows.Controls.ColumnDefinitionCollection"></see> defined on this instance of <see cref="T:System.Windows.Controls.Grid"></see></returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of this <see cref="T:System.Windows.Controls.Grid"></see>.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.RowDefinitions">
			<summary>Gets a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> defined on this instance of <see cref="T:System.Windows.Controls.Grid"></see>. </summary>
			<returns>A <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> defined on this instance of <see cref="T:System.Windows.Controls.Grid"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.ShowGridLines">
			<summary>Gets or sets a value that indicates whether grid lines are visible within this <see cref="T:System.Windows.Controls.Grid"></see>. </summary>
			<returns>true if grid lines are visible; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.VisualChildrenCount">
			<summary>Gets a value that represents the total number of <see cref="T:System.Windows.Media.Visual"></see> children within this instance of <see cref="T:System.Windows.Controls.Grid"></see>.</summary>
			<returns><see cref="T:System.Int32"></see> that represents the total number of child <see cref="T:System.Windows.Media.Visual"></see> objects. The default value is zero.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.Column">
			<summary>Gets or sets a value that indicates which column child content within a <see cref="T:System.Windows.Controls.Grid"></see> should appear in.</summary>
			<returns><see cref="T:System.Int32"></see> that represents the column in which child content should appear. The default value is zero.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.ColumnSpan">
			<summary>Gets or sets a value that indicates the total number of columns that child content spans within a <see cref="T:System.Windows.Controls.Grid"></see>.</summary>
			<returns><see cref="T:System.Int32"></see> that represents the number of columns that child content should span. The default value is 1.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.IsSharedSizeScope">
			<summary>Gets or sets a value that indicates that multiple Grid elements are sharing size information.</summary>
			<returns>true if this instance of <see cref="T:System.Windows.Controls.Grid"></see> is sharing size properties with another <see cref="T:System.Windows.Controls.Grid"></see>; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.Row">
			<summary>Gets or sets a value that indicates which row child content within a <see cref="T:System.Windows.Controls.Grid"></see> should appear in.</summary>
			<returns><see cref="T:System.Int32"></see> that represents the row in which child content should appear. The default value is zero.</returns>
		</member>
		<member name="P:System.Windows.Controls.Grid.RowSpan">
			<summary>Gets or sets a value that indicates the total number of rows that child content spans within a <see cref="T:System.Windows.Controls.Grid"></see>.</summary>
			<returns><see cref="T:System.Int32"></see> that represents the number of rows that child content should span. The default value is 1.</returns>
		</member>
		<member name="T:System.Windows.Controls.GridResizeBehavior">
			<summary>Specifies the rows or columns that are resized by a <see cref="T:System.Windows.Controls.GridSplitter"></see> control.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment">
			<summary>Space is redistributed based on the value of the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment"></see> and <see cref="P:System.Windows.FrameworkElement.VerticalAlignment"></see> properties. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridResizeBehavior.CurrentAndNext">
			<summary>For a horizontal <see cref="T:System.Windows.Controls.GridSplitter"></see>, space is redistributed between the row that is specified for the <see cref="T:System.Windows.Controls.GridSplitter"></see> and the next row that is below it. For a vertical <see cref="T:System.Windows.Controls.GridSplitter"></see>, space is redistributed between the column that is specified for the <see cref="T:System.Windows.Controls.GridSplitter"></see> and the next column that is to the right.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndCurrent">
			<summary>For a horizontal <see cref="T:System.Windows.Controls.GridSplitter"></see>, space is redistributed between the row that is specified for the <see cref="T:System.Windows.Controls.GridSplitter"></see> and the next row that is above it. For a vertical <see cref="T:System.Windows.Controls.GridSplitter"></see>, space is redistributed between the column that is specified for the <see cref="T:System.Windows.Controls.GridSplitter"></see> and the next column that is to the left.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridResizeBehavior.PreviousAndNext">
			<summary>For a horizontal <see cref="T:System.Windows.Controls.GridSplitter"></see>, space is redistributed between the rows that are above and below the row that is specified for the <see cref="T:System.Windows.Controls.GridSplitter"></see>. For a vertical <see cref="T:System.Windows.Controls.GridSplitter"></see>, space is redistributed between the columns that are to the left and right of the column that is specified for the <see cref="T:System.Windows.Controls.GridSplitter"></see>.</summary>
		</member>
		<member name="T:System.Windows.Controls.GridResizeDirection">
			<summary>Specifies whether a <see cref="T:System.Windows.Controls.GridSplitter"></see> control redistributes space between rows or between columns.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridResizeDirection.Auto">
			<summary>Space is redistributed based on the values of the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment"></see>, <see cref="P:System.Windows.FrameworkElement.VerticalAlignment"></see>, <see cref="P:System.Windows.FrameworkElement.ActualWidth"></see>, and <see cref="P:System.Windows.FrameworkElement.ActualHeight"></see> properties of the <see cref="T:System.Windows.Controls.GridSplitter"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridResizeDirection.Columns">
			<summary>Space is redistributed between columns.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridResizeDirection.Rows">
			<summary>Space is redistributed between rows.</summary>
		</member>
		<member name="T:System.Windows.Controls.GridSplitter">
			<summary>Represents the control that redistributes space between columns or rows of a <see cref="T:System.Windows.Controls.Grid"></see> control. </summary>
		</member>
		<member name="M:System.Windows.Controls.GridSplitter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GridSplitter"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridSplitter.DragIncrementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.GridSplitter.DragIncrement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.GridSplitter.KeyboardIncrementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.GridSplitter.KeyboardIncrement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.GridSplitter.PreviewStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.PreviewStyle"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridSplitter.ResizeBehaviorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ResizeBehavior"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridSplitter.ResizeDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.GridSplitter.ResizeDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.GridSplitter.ShowsPreviewProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.GridSplitter.OnCreateAutomationPeer">
			<summary>Creates the implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.GridSplitter"></see> control.</summary>
			<returns>A new <see cref="T:System.Windows.Automation.Peers.GridSplitterAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.ToolTip"></see> control.</returns>
		</member>
		<member name="M:System.Windows.Controls.GridSplitter.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Called when a key is pressed.</summary>
			<param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs"></see> that contains the event data. </param>
		</member>
		<member name="M:System.Windows.Controls.GridSplitter.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary>Called when the <see cref="T:System.Windows.Controls.GridSplitter"></see> control loses keyboard focus.</summary>
			<param name="e">A <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs"></see> that contains the event data. </param>
		</member>
		<member name="M:System.Windows.Controls.GridSplitter.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
			<summary>Responds to a change in the dimensions of the <see cref="T:System.Windows.Controls.GridSplitter"></see> control.</summary>
			<param name="sizeInfo">Information about the change in size of the <see cref="T:System.Windows.Controls.GridSplitter"></see>.</param>
		</member>
		<member name="P:System.Windows.Controls.GridSplitter.DragIncrement">
			<summary>Gets or sets the minimum distance that a user must drag a mouse to resize rows or columns with a <see cref="T:System.Windows.Controls.GridSplitter"></see> control. </summary>
			<returns>A double value that represents the minimum distance that a user must use the mouse to drag a <see cref="T:System.Windows.Controls.GridSplitter"></see> to resize rows or columns. The default value is 1.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridSplitter.KeyboardIncrement">
			<summary>Gets or sets the distance that each press of an arrow key moves a <see cref="T:System.Windows.Controls.GridSplitter"></see> control. </summary>
			<returns>The distance that the <see cref="T:System.Windows.Controls.GridSplitter"></see> moves for each press of an arrow key. The default value is 10. </returns>
		</member>
		<member name="P:System.Windows.Controls.GridSplitter.PreviewStyle">
			<summary>Gets or sets the style that customizes the appearance, effects, or other style characteristics for the <see cref="T:System.Windows.Controls.GridSplitter"></see> control preview indicator that is displayed when the <see cref="P:System.Windows.Controls.GridSplitter.ShowsPreview"></see> property is set to true.</summary>
			<returns>Returns the <see cref="T:System.Windows.Style"></see> for the preview indicator that shows the potential change in <see cref="T:System.Windows.Controls.Grid"></see> dimensions as you move the <see cref="T:System.Windows.Controls.GridSplitter"></see> control. The default value is the style that the current theme supplies.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridSplitter.ResizeBehavior">
			<summary>Gets or sets which columns or rows are resized relative to the column or row for which the <see cref="T:System.Windows.Controls.GridSplitter"></see> control is defined.</summary>
			<returns>The <see cref="T:System.Windows.Controls.GridResizeBehavior"></see> enumeration value that indicates which columns or rows are resized by this <see cref="T:System.Windows.Controls.GridSplitter"></see> control. The default value is <see cref="F:System.Windows.Controls.GridResizeBehavior.BasedOnAlignment"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridSplitter.ResizeDirection">
			<summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.GridSplitter"></see> control resizes rows or columns. </summary>
			<returns>The <see cref="T:System.Windows.Controls.GridResizeDirection"></see> value that specifies how to determine whether to resize rows or columns. The default value is <see cref="F:System.Windows.Controls.GridResizeDirection.Auto"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridSplitter.ShowsPreview">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.GridSplitter"></see> control updates the column or row size as the user drags the control.</summary>
			<returns>true if a <see cref="T:System.Windows.Controls.GridSplitter"></see> preview is displayed; otherwise, false. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.GridView">
			<summary>Represents a view mode that displays data items in columns for a <see cref="T:System.Windows.Controls.ListView"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridView.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.GridView"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridView.AllowsColumnReorderProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridView.AllowsColumnReorder"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridView.ColumnCollectionProperty">
			<summary>Identifies the <see cref="F:System.Windows.Controls.GridView.ColumnCollectionProperty"></see> attachedproperty. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridView.ColumnHeaderContainerStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridView.ColumnHeaderContextMenuProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplate"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridView.ColumnHeaderTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridView.ColumnHeaderToolTipProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridView.ColumnHeaderToolTip"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.GridView.AddChild(System.Object)">
			<summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridView.AddText(System.String)">
			<summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridView.ClearItem(System.Windows.Controls.ListViewItem)">
			<summary>Removes all settings, bindings, and styling from a <see cref="T:System.Windows.Controls.ListViewItem"></see>.</summary>
			<param name="item">The <see cref="T:System.Windows.Controls.ListViewItem"></see> to clear.</param>
		</member>
		<member name="M:System.Windows.Controls.GridView.GetAutomationPeer(System.Windows.Controls.ListView)">
			<summary>Gets the <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementation for this <see cref="T:System.Windows.Controls.GridView"></see> object.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.GridViewAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.GridView"></see>.</returns>
			<param name="parent">The <see cref="T:System.Windows.Controls.ListView"></see> control that implements this <see cref="T:System.Windows.Controls.GridView"></see> view.</param>
		</member>
		<member name="M:System.Windows.Controls.GridView.GetColumnCollection(System.Windows.DependencyObject)">
			<summary>Gets the contents of the <see cref="P:System.Windows.Controls.GridView.ColumnCollection"></see> attached property.</summary>
			<returns>The <see cref="P:System.Windows.Controls.GridView.ColumnCollection"></see> of the specified <see cref="T:System.Windows.DependencyObject"></see>.</returns>
			<param name="element">The <see cref="T:System.Windows.DependencyObject"></see> that is associated with the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.GridView.PrepareItem(System.Windows.Controls.ListViewItem)">
			<summary>Prepares a <see cref="T:System.Windows.Controls.ListViewItem"></see> for display according to the definition of this <see cref="T:System.Windows.Controls.GridView"></see> object.</summary>
			<param name="item">The <see cref="T:System.Windows.Controls.ListViewItem"></see> to display.</param>
		</member>
		<member name="M:System.Windows.Controls.GridView.SetColumnCollection(System.Windows.DependencyObject,System.Windows.Controls.GridViewColumnCollection)">
			<summary>Sets the contents of the <see cref="P:System.Windows.Controls.GridView.ColumnCollection"></see> attached property.</summary>
			<param name="element">The <see cref="T:System.Windows.Controls.GridView"></see> object.</param>
			<param name="collection">The <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see> object to assign.</param>
		</member>
		<member name="M:System.Windows.Controls.GridView.ShouldSerializeColumnCollection(System.Windows.DependencyObject)">
			<summary>Determines whether to serialize the <see cref="P:System.Windows.Controls.GridView.ColumnCollection"></see> attached property.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.GridView.ColumnCollection"></see> must be serialized; otherwise, false.</returns>
			<param name="obj">The object on which the <see cref="P:System.Windows.Controls.GridView.ColumnCollection"></see> is set.</param>
		</member>
		<member name="M:System.Windows.Controls.GridView.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridView.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridView.ToString">
			<summary>Returns the string representation of the <see cref="T:System.Windows.Controls.GridView"></see> object.</summary>
			<returns>A string that indicates the number of columns in the <see cref="T:System.Windows.Controls.GridView"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.AllowsColumnReorder">
			<summary>Gets or sets whether columns in a <see cref="T:System.Windows.Controls.GridView"></see> can be reordered by a drag-and-drop operation.</summary>
			<returns>true if columns can be reordered; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.ColumnHeaderContainerStyle">
			<summary>Gets or sets the style to apply to column headers.</summary>
			<returns>The <see cref="T:System.Windows.Style"></see> that is used to define the display properties for column headers. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.ColumnHeaderContextMenu">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.ContextMenu"></see> for the <see cref="T:System.Windows.Controls.GridView"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ContextMenu"></see> for the column headers in a <see cref="T:System.Windows.Controls.GridView"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplate">
			<summary>Gets or sets a template to use to display the column headers.</summary>
			<returns>The <see cref="T:System.Windows.DataTemplate"></see> to use to display the column headers as part of the <see cref="T:System.Windows.Controls.GridView"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.ColumnHeaderTemplateSelector">
			<summary>Gets or sets the selector object that provides logic for selecting a template to use for each column header.</summary>
			<returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> object that determines the data template to use for each column header. The default value is null. </returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.ColumnHeaderToolTip">
			<summary>Gets or sets the content of a tooltip that appears when the mouse pointer pauses over one of the column headers.</summary>
			<returns>An object that represents the content that appears as a tooltip when the mouse pointer is paused over one of the column headers. The default value is not defined.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.Columns">
			<summary>Gets the collection of <see cref="T:System.Windows.Controls.GridViewColumn"></see> objects that is defined for this <see cref="T:System.Windows.Controls.GridView"></see>.</summary>
			<returns>The collection of columns in the <see cref="T:System.Windows.Controls.GridView"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.DefaultStyleKey">
			<summary>Gets the reference for the default style for the <see cref="T:System.Windows.Controls.GridView"></see>.</summary>
			<returns>The <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey"></see>. The default value is the <see cref="P:System.Windows.Controls.GridView.GridViewStyleKey"></see> in the current theme.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey">
			<summary>Gets the key that references the style that is defined for cells in column of a <see cref="T:System.Windows.Controls.GridView"></see>.</summary>
			<returns>A <see cref="T:System.Windows.ResourceKey"></see> that references the style for cells in a column that contains data. The default value references the default style for a <see cref="T:System.Windows.Controls.ListViewItem"></see> control in the current theme.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.GridViewScrollViewerStyleKey">
			<summary>Gets the key that references the style that is defined for the <see cref="T:System.Windows.Controls.ScrollViewer"></see> control that encloses the content that is displayed by a <see cref="T:System.Windows.Controls.GridView"></see>.</summary>
			<returns>A <see cref="T:System.Windows.ResourceKey"></see> that references the <see cref="T:System.Windows.Style"></see> that is applied to the <see cref="T:System.Windows.Controls.ScrollViewer"></see> control for a <see cref="T:System.Windows.Controls.GridView"></see>. The default value is the style for the <see cref="T:System.Windows.Controls.ScrollViewer"></see> object of a <see cref="T:System.Windows.Controls.ListView"></see> in the current theme.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.GridViewStyleKey">
			<summary>Gets the key that references the style that is defined for the <see cref="T:System.Windows.Controls.GridView"></see>.</summary>
			<returns>A <see cref="T:System.Windows.ResourceKey"></see> that references the <see cref="T:System.Windows.Style"></see> that is applied to the <see cref="T:System.Windows.Controls.GridView"></see>. The default value is the style for the <see cref="T:System.Windows.Controls.ListView"></see> in the current theme.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.ItemContainerDefaultStyleKey">
			<summary>Gets the reference to the default style for the container of the data items in the <see cref="T:System.Windows.Controls.GridView"></see>.</summary>
			<returns>The <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey"></see>. The default value is the <see cref="P:System.Windows.Controls.GridView.GridViewItemContainerStyleKey"></see> in the current theme.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridView.ColumnCollection">
			<summary>Gets or sets the attached property that contains the <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see> that is used to display content for the object on which this property is attached. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.GridViewColumn">
			<summary>Represents a column that displays data.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumn.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.GridViewColumn"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.GridViewColumn.System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
			<summary>Occurs when the value of any <see cref="T:System.Windows.Controls.GridViewColumn"></see> property changes.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumn.CellTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplate"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumn.CellTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumn.HeaderContainerStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumn.HeaderProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.Header"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplate"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumn.HeaderTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumn.WidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumn.Width"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumn.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.Controls.GridViewColumn.System.ComponentModel.INotifyPropertyChanged.PropertyChanged"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumn.ToString">
			<summary>Creates a string representation of the <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</summary>
			<returns>A string that identifies the object as a <see cref="T:System.Windows.Controls.GridViewColumn"></see> object and displays the value of the <see cref="P:System.Windows.Controls.GridViewColumn.Header"></see> property.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.ActualWidth">
			<summary>Gets the actual width of a <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</summary>
			<returns>A value that represents the current width of the column. The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.CellTemplate">
			<summary>Gets or sets the template to use to display the contents of a column cell.</summary>
			<returns>A <see cref="T:System.Windows.DataTemplate"></see> that is used to format a column cell. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.CellTemplateSelector">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> that determines the template to use to display cells in a column.</summary>
			<returns>A <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> that provides <see cref="T:System.Windows.DataTemplate"></see> selection for column cells. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.DisplayMemberBinding">
			<summary>Gets or sets the data item to bind to for this column.</summary>
			<returns>The specified data item type that displays in the column. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.Header">
			<summary>Gets or sets the content of the header of a <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</summary>
			<returns>The object to use for the column header. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.HeaderContainerStyle">
			<summary>Gets or sets the style to use for the header of the <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Style"></see> that defines the display properties for the column header. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplate">
			<summary>Gets or sets the template to use to display the content of the column header.</summary>
			<returns>A <see cref="T:System.Windows.DataTemplate"></see> to use to display the column header. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.HeaderTemplateSelector">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> that provides logic to select the template to use to display the column header.</summary>
			<returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> object that provides data template selection for each <see cref="T:System.Windows.Controls.GridViewColumn"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumn.Width">
			<summary>Gets or sets the width of the column.</summary>
			<returns>A value that represents the width of the column. The default value is Double.NaN, which tells the column to automatically size to the largest column item that is not the column header.</returns>
		</member>
		<member name="T:System.Windows.Controls.GridViewColumnCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Controls.GridViewColumn"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnCollection.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnCollection.ClearItems">
			<summary>Removes all of the <see cref="T:System.Windows.Controls.GridViewColumn"></see> objects from the <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnCollection.InsertItem(System.Int32,System.Windows.Controls.GridViewColumn)">
			<summary>Adds a <see cref="T:System.Windows.Controls.GridViewColumn"></see> to the collection at the specified index.</summary>
			<param name="column">The <see cref="T:System.Windows.Controls.GridViewColumn"></see> to insert.</param>
			<param name="index">The position to place the new <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnCollection.MoveItem(System.Int32,System.Int32)">
			<summary>Changes the position of a <see cref="T:System.Windows.Controls.GridViewColumn"></see> in the collection.</summary>
			<param name="oldIndex">The original position of the <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</param>
			<param name="newIndex">The new position of the <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"></see> event when the <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see> changes.</summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnCollection.RemoveItem(System.Int32)">
			<summary>Removes a <see cref="T:System.Windows.Controls.GridViewColumn"></see> from the <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see> at the specified index.</summary>
			<param name="index">The position of the <see cref="T:System.Windows.Controls.GridViewColumn"></see> to remove.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnCollection.SetItem(System.Int32,System.Windows.Controls.GridViewColumn)">
			<summary>Replaces the <see cref="T:System.Windows.Controls.GridViewColumn"></see> that is at the specified index with another <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</summary>
			<param name="column">The <see cref="T:System.Windows.Controls.GridViewColumn"></see> to place at the specified position.</param>
			<param name="index">The position at which the new <see cref="T:System.Windows.Controls.GridViewColumn"></see> replaces the old <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</param>
		</member>
		<member name="T:System.Windows.Controls.GridViewColumnHeader">
			<summary>Represents a column header for a <see cref="T:System.Windows.Controls.GridViewColumn"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumnHeader.ColumnProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumnHeader.Column"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumnHeader.RoleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewColumnHeader.Role"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
			<summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey"></see> for the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> is pressed.</summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnApplyTemplate">
			<summary>Responds to the creation of the visual tree for the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnClick">
			<summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event for a <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnCreateAutomationPeer">
			<summary>Provides an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementation for a <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.GridViewColumnHeaderAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostKeyboardFocus"></see> event for a <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseEnter"></see> event when the user pauses the mouse pointer on the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave"></see> event when the mouse moves off the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event when the user presses the left mouse button while pausing the mouse pointer on the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event when the user releases the left mouse button while pausing the mouse pointer on the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnMouseMove(System.Windows.Input.MouseEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove"></see> event that occurs when the user moves the mouse within a <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
			<summary>Responds to a change in <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> dimensions.</summary>
			<param name="sizeInfo">Information about the change in the size of the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>. </param>
		</member>
		<member name="M:System.Windows.Controls.GridViewColumnHeader.ShouldSerializeProperty(System.Windows.DependencyProperty)">
			<summary>Determines whether to serialize a <see cref="T:System.Windows.DependencyProperty"></see>.</summary>
			<returns>true if the <see cref="T:System.Windows.DependencyProperty"></see> must be serialized; otherwise, false. The default value is false.</returns>
			<param name="dp">The dependency property.</param>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumnHeader.Column">
			<summary>Gets the <see cref="T:System.Windows.Controls.GridViewColumn"></see> that is associated with the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.GridViewColumn"></see> that is associated with this <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewColumnHeader.Role">
			<summary>Gets the role of a <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.GridViewColumnHeaderRole"></see> enumeration value that specifies the current role of the column.</returns>
		</member>
		<member name="T:System.Windows.Controls.GridViewColumnHeaderRole">
			<summary>Defines the state or role of a <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see> control.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Floating">
			<summary>The column header is the object of a drag-and-drop operation to move a column.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Normal">
			<summary>The column header displays above its associated column.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewColumnHeaderRole.Padding">
			<summary>The column header is the last header in the row of column headers and is used for padding.</summary>
		</member>
		<member name="T:System.Windows.Controls.GridViewHeaderRowPresenter">
			<summary>Represents an object that is used to define the layout of a row of column headers. </summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.GridViewHeaderRowPresenter"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorderProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenuProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTipProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of the header row elements, and computes the actual size of the header row.</summary>
			<returns>The actual <see cref="T:System.Windows.Size"></see> for the column header row.</returns>
			<param name="arrangeSize">The area that is available for the column header row.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.MeasureOverride(System.Windows.Size)">
			<summary>Determines the area that is required to display the column header row.</summary>
			<returns>The required <see cref="T:System.Windows.Size"></see> for the column header row.</returns>
			<param name="constraint">The amount of area that is available to display the column header row.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnCreateAutomationPeer">
			<summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for the column header row.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.GridViewHeaderRowPresenterAutomationPeer"></see> object for this column header row. </returns>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture"></see> event for the <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event that occurs when the user presses the left mouse button inside a <see cref="T:System.Windows.Controls.GridViewColumnHeader"></see>. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event that occurs when the user releases the left mouse button. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewHeaderRowPresenter.OnMouseMove(System.Windows.Input.MouseEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove"></see> event that occurs when the user moves the mouse.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.AllowsColumnReorder">
			<summary>Gets or sets whether columns can change positions.</summary>
			<returns>true if columns can be moved by the drag-and-drop operation of a column header; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContainerStyle">
			<summary>Gets or sets the <see cref="T:System.Windows.Style"></see> to use for the column headers.</summary>
			<returns>The <see cref="T:System.Windows.Style"></see> to use for the column header container. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderContextMenu">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.ContextMenu"></see> for the column headers.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ContextMenu"></see> for the column header row. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplate">
			<summary>Gets or sets the template to use to display the column headers.</summary>
			<returns>The <see cref="T:System.Windows.DataTemplate"></see> that is used to display the column header content. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderTemplateSelector">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> that provides logic that selects the data template to use to display a column header.</summary>
			<returns>The <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> that chooses the <see cref="T:System.Windows.DataTemplate"></see> to use to display each column header. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewHeaderRowPresenter.ColumnHeaderToolTip">
			<summary>Gets or sets the content for a tooltip for the column header row.</summary>
			<returns>An object that represents the content of a tooltip for the column headers.</returns>
		</member>
		<member name="T:System.Windows.Controls.GridViewRowPresenter">
			<summary>Represents an object that specifies the layout of a row of data.</summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewRowPresenter.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.GridViewRowPresenter"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.GridViewRowPresenter.ContentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.GridViewRowPresenter.ArrangeOverride(System.Windows.Size)">
			<summary>Positions the content of a row according to the size of the corresponding <see cref="T:System.Windows.Controls.GridViewColumn"></see> objects.</summary>
			<returns>The actual <see cref="T:System.Windows.Size"></see> that is used to display the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content"></see>.</returns>
			<param name="arrangeSize">The area to use to display the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.GridViewRowPresenter.MeasureOverride(System.Windows.Size)">
			<summary>Determines the area that is required to display the row. </summary>
			<returns>The actual <see cref="T:System.Windows.Size"></see> of the area that displays the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content"></see>.</returns>
			<param name="constraint">The maximum area to use to display the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content"></see>. </param>
		</member>
		<member name="M:System.Windows.Controls.GridViewRowPresenter.ToString">
			<summary>Returns a string representation of the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content"></see>.</summary>
			<returns>A string that shows the <see cref="P:System.Windows.Controls.GridViewRowPresenter.Content"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.GridViewRowPresenter.Content">
			<summary>Gets or sets the data content to display in a row.</summary>
			<returns>The object that represents the content of a row.</returns>
		</member>
		<member name="T:System.Windows.Controls.GroupBox">
			<summary>Represents a control that creates a container that has a border and a header for user interface (UI) content.</summary>
		</member>
		<member name="M:System.Windows.Controls.GroupBox.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GroupBox"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.GroupBox.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
			<summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey"></see> for this <see cref="T:System.Windows.Controls.GroupBox"></see> ispressed.</summary>
			<param name="e">The event information.</param>
		</member>
		<member name="M:System.Windows.Controls.GroupBox.OnCreateAutomationPeer">
			<summary>Creates an implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.GroupBox"></see> control.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.GroupBoxAutomationPeer"></see> for the <see cref="T:System.Windows.Controls.GroupBox"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.GroupItem">
			<summary>Appears as the root of the visual subtree generated for a group. </summary>
		</member>
		<member name="M:System.Windows.Controls.GroupItem.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GroupItem"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Controls.GroupItem.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.GroupItem"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.GroupItem"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.GroupStyle">
			<summary>Defines how you want the group to look at each level.</summary>
		</member>
		<member name="M:System.Windows.Controls.GroupStyle.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.GroupStyle"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.GroupStyle.PropertyChanged">
			<summary>Occurs when a property value changes.</summary>
		</member>
		<member name="E:System.Windows.Controls.GroupStyle.System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
			<summary>Occurs when a property value changes.</summary>
		</member>
		<member name="F:System.Windows.Controls.GroupStyle.DefaultGroupPanel">
			<summary>Identifies the default <see cref="T:System.Windows.Controls.ItemsPanelTemplate"></see> that creates the panel used to layout the items.</summary>
		</member>
		<member name="M:System.Windows.Controls.GroupStyle.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.GroupStyle.PropertyChanged"></see> event using the provided arguments.</summary>
			<param name="e">Arguments of the event being raised.</param>
		</member>
		<member name="P:System.Windows.Controls.GroupStyle.ContainerStyle">
			<summary>Gets or sets the style that is applied to the <see cref="T:System.Windows.Controls.GroupItem"></see> generated for each item.</summary>
			<returns>The style that is applied to the <see cref="T:System.Windows.Controls.GroupItem"></see> generated for each item. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector">
			<summary>Enables the application writer to provide custom selection logic for a style to apply to each generated <see cref="T:System.Windows.Controls.GroupItem"></see>.</summary>
			<returns>An object that derives from <see cref="T:System.Windows.Controls.StyleSelector"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GroupStyle.Default">
			<summary>Gets the default style of the group.</summary>
			<returns>The default style of the group.</returns>
		</member>
		<member name="P:System.Windows.Controls.GroupStyle.HeaderTemplate">
			<summary>Gets or sets the template that is used to display the group header.</summary>
			<returns>A <see cref="T:System.Windows.DataTemplate"></see> object that is used to display the group header. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GroupStyle.HeaderTemplateSelector">
			<summary>Enables the application writer to provide custom selection logic for a template that is used to display the group header.</summary>
			<returns>An object that derives from <see cref="T:System.Windows.Controls.DataTemplateSelector"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.GroupStyle.HidesIfEmpty">
			<summary>Gets or sets whether items corresponding to empty groups should be displayed.</summary>
			<returns>true to not display empty groups; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.GroupStyle.Panel">
			<summary>Gets or sets a template that creates the panel used to layout the items.</summary>
			<returns>An <see cref="T:System.Windows.Controls.ItemsPanelTemplate"></see> object that creates the panel used to layout the items.</returns>
		</member>
		<member name="T:System.Windows.Controls.GroupStyleSelector">
			<summary>Delegate used to select the group style as a function of the parent group and its level.</summary>
		</member>
		<member name="T:System.Windows.Controls.HeaderedContentControl">
			<summary> Base class, but not an abstract class, for all controls that contain single content and have a header.</summary>
		</member>
		<member name="M:System.Windows.Controls.HeaderedContentControl.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HeaderedContentControl"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.HeaderedContentControl.HasHeaderProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedContentControl.HasHeader"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.HeaderedContentControl.HeaderProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelectorProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
			<summary> Called when the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> property of a <see cref="T:System.Windows.Controls.HeaderedContentControl"></see> changes. </summary>
			<param name="newHeader">New value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> property.</param>
			<param name="oldHeader">Old value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.Header"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
			<summary> Called when the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate"></see> property changes. </summary>
			<param name="oldHeaderTemplate">Old value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate"></see> property.</param>
			<param name="newHeaderTemplate">New value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.HeaderedContentControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
			<summary> Called when the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector"></see> property changes. </summary>
			<param name="oldHeaderTemplateSelector">Old value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector"></see> property.</param>
			<param name="newHeaderTemplateSelector">New value of the <see cref="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.HeaderedContentControl.ToString">
			<summary>Provides a string representation of a headered content control object. </summary>
			<returns>A String representation of the object.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedContentControl.HasHeader">
			<summary>Gets whether the header is null. </summary>
			<returns>A Boolean value; true if the header is not null; false otherwise. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedContentControl.Header">
			<summary> Gets or sets the data used for the header of each control. </summary>
			<returns>A header object. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplate">
			<summary>Template used to display the content of the control's header.</summary>
			<returns>A data template. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedContentControl.HeaderTemplateSelector">
			<summary>Enables the application writer to provide custom logic for choosing the template used to display the Header.</summary>
			<returns>A data template selector object. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedContentControl.LogicalChildren">
			<summary> Gets an enumerator to the headered content control's logical child elements. </summary>
			<returns>An enumerator. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.HeaderedItemsControl">
			<summary>Represents a control that contains multiple items and have a header.</summary>
		</member>
		<member name="M:System.Windows.Controls.HeaderedItemsControl.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.HeaderedItemsControl.HasHeaderProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HasHeader"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
			<summary>Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"></see> property of a <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> changes. </summary>
			<param name="newHeader">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"></see> property.</param>
			<param name="oldHeader">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.Header"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
			<summary>Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate"></see> property changes. </summary>
			<param name="oldHeaderTemplate">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate"></see> property.</param>
			<param name="newHeaderTemplate">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.HeaderedItemsControl.OnHeaderTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
			<summary>Called when the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector"></see> property changes. </summary>
			<param name="oldHeaderTemplateSelector">The old value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector"></see> property.</param>
			<param name="newHeaderTemplateSelector">The new value of the <see cref="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.HeaderedItemsControl.ToString">
			<summary>Returns the string representation of a <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> object. </summary>
			<returns>A string that represents this object.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedItemsControl.HasHeader">
			<summary>Gets whether this <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see> has a header. This is a dependency property.</summary>
			<returns>true if the control has a header; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedItemsControl.Header">
			<summary> Gets or sets the item that labels the control. This is a dependency property.</summary>
			<returns>An object that labels the <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see>. The default value is null. A header can be a string or a <see cref="T:System.Windows.UIElement"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplate">
			<summary> Gets or sets the template used to display the contents of the control's header. This is a dependency property.</summary>
			<returns>A data template used to display a control's header. The default is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedItemsControl.HeaderTemplateSelector">
			<summary>Gets or sets the object that provides custom selection logic for a template used to display the header of each item. This is a dependency property.</summary>
			<returns>A data template selector. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.HeaderedItemsControl.LogicalChildren">
			<summary>Gets an enumerator to the logical child elements of the <see cref="T:System.Windows.Controls.HeaderedItemsControl"></see>. </summary>
			<returns>An enumerator. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.Image">
			<summary>Represents a control that displays an image.</summary>
		</member>
		<member name="M:System.Windows.Controls.Image.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Image"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.Image.ImageFailed">
			<summary>Occurs when there is a failure in the image.</summary>
		</member>
		<member name="F:System.Windows.Controls.Image.ImageFailedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Image.ImageFailed"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Image.ImageFailed"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Image.SourceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Image.Source"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Image.Source"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Image.StretchDirectionProperty">
			<summary>Identifies the <see cref="T:System.Windows.Controls.StretchDirection"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="T:System.Windows.Controls.StretchDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Image.StretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Image.Stretch"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Image.Stretch"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Image.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges and sizes an image control.</summary>
			<returns>The size of the control.</returns>
			<param name="arrangeSize">The size used to arrange the control.</param>
		</member>
		<member name="M:System.Windows.Controls.Image.MeasureOverride(System.Windows.Size)">
			<summary>Updates the <see cref="P:System.Windows.UIElement.DesiredSize"></see> of the image. This method is called by the parent <see cref="T:System.Windows.UIElement"></see> and is the first pass of layout. </summary>
			<returns>The image's desired size.</returns>
			<param name="constraint">The size that the image should not exceed.</param>
		</member>
		<member name="M:System.Windows.Controls.Image.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.Image"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.Image"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Image.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Renders the contents of an <see cref="T:System.Windows.Controls.Image"></see>.</summary>
			<param name="dc">An instance of <see cref="T:System.Windows.Media.DrawingContext"></see> used to render the control.</param>
		</member>
		<member name="P:System.Windows.Controls.Image.BaseUri">
			<summary>Gets or sets the base uniform resource identifier (URI) for the <see cref="T:System.Windows.Controls.Image"></see>.</summary>
			<returns>A base URI for the <see cref="T:System.Windows.Controls.Image"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Image.Source">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.ImageSource"></see> for the image. This is a dependency property.</summary>
			<returns>The source of the drawn image. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Image.Stretch">
			<summary>Gets or sets a value that describes how an <see cref="T:System.Windows.Controls.Image"></see> should be stretched to fill the destination rectangle. This is a dependency property.</summary>
			<returns>One of the <see cref="T:System.Windows.Media.Stretch"></see> values. The default is <see cref="F:System.Windows.Media.Stretch.Uniform"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Image.StretchDirection">
			<summary>Gets or sets a value that indicates how the image is scaled. This is a dependency property.</summary>
			<returns>One of the <see cref="T:System.Windows.Controls.StretchDirection"></see> values. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.InkCanvas">
			<summary>Defines an area that receives and displays ink strokes. </summary>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.#ctor">
			<summary>Initializes a new instance of the InkCanvas class.  </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged">
			<summary>Occurs when the current editing mode changes.</summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes"></see> property is replaced. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.EditingModeChanged">
			<summary> Occurs when the EditingMode property of an InkCanvas object has been changed. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged">
			<summary> Occurs when the EditingModeInverted property of an InkCanvas object has been changed. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.Gesture">
			<summary>Occurs when the <see cref="T:System.Windows.Controls.InkCanvas"></see> detects a gesture.</summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.SelectionChanged">
			<summary>Occurs when the selection on the <see cref="T:System.Windows.Controls.InkCanvas"></see> changes. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.SelectionChanging">
			<summary>Occurs when a new set of ink strokes and/or elements is being selected. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.SelectionMoved">
			<summary>Occurs when a selection of strokes and/or elements has been moved by the user. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.SelectionMoving">
			<summary> Occurs at the onset of the selected strokes and elements being moved. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.SelectionResized">
			<summary> Occurs when a selection of strokes and/or elements has been resized by the user. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.SelectionResizing">
			<summary>Occurs at the onset of the selected strokes and elements being resized.</summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.StrokeCollected">
			<summary> Occurs when a stroke drawn by the user is added to the Strokes property. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.StrokeErased">
			<summary> Occurs when user erases a stroke. </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.StrokeErasing">
			<summary> Occurs just before a user erases a strokes  </summary>
		</member>
		<member name="E:System.Windows.Controls.InkCanvas.StrokesReplaced">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.Strokes"></see> property is replaced.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged"></see> routed event.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Background"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.BottomProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Bottom"></see> attached property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged"></see> routed event.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged"></see> routed event.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.EditingModeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.GestureEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.Gesture"></see> routed event.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.LeftProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Left"></see> attached property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.RightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Right"></see> attached property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected"></see> routed event.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased"></see> routed event.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.StrokesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Strokes"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvas.TopProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Top"></see> attached property.</summary>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.CanPaste">
			<summary> Indicates whether the contents of the Clipboard can be pasted into the <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
			<returns>true if the contents of the Clipboard can be pasted in; otherwise, false. </returns>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.CutSelection">
			<summary>Deletes the selected strokes and elements, and copies them to the Clipboard.</summary>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom"></see> attached property for a given dependency object. </summary>
			<returns>The bottom coordinate of the dependency object.</returns>
			<param name="element">The element of which to get the bottom property.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetEnabledGestures">
			<summary> Returns a collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas"></see> recognizes. </summary>
			<returns>A collection of gestures that the <see cref="T:System.Windows.Controls.InkCanvas"></see> recognizes. </returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable"></see> property is false.</exception>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left"></see> attached property for a given dependency object. </summary>
			<returns>The left coordinate of the dependency object.</returns>
			<param name="element">The element of which to get the left property.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right"></see> attached property for a given dependency object. </summary>
			<returns>The right coordinate of the dependency object.</returns>
			<param name="element">The element of which to get the right property.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetSelectedElements">
			<summary> Retrieves the FrameworkElement objects that are selected in the InkCanvas. </summary>
			<returns>Array of FrameworkElement objects.</returns>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes">
			<summary> Retrieves a StrokeCollection that represents the Stroke objects that are selected in the InkCanvas. </summary>
			<returns>The collection that represents the selected strokes.</returns>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetSelectionBounds">
			<summary> Gets the bounds of the selected strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
			<returns>The smallest rectangle that encompasses all selected strokes and elements.</returns>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top"></see> attached property for a given dependency object. </summary>
			<returns>The top coordinate of the dependency object.</returns>
			<param name="element">The element of which to get the top property.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)">
			<summary>Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</summary>
			<returns>A value that indication which part of the selection adorner intersects or surrounds the specified point.</returns>
			<param name="point">The point to hit test.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced"></see> event. </summary>
			<param name="e">The event data. </param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.Gesture"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)">
			<summary> An event announcing that a selection of strokes and/or elements has been moved by the user. </summary>
			<param name="e">Not used.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)">
			<summary> Pastes the contents of the Clipboard to the InkCanvas at a given point. </summary>
			<param name="point">The point at which to paste the strokes.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
			<summary>Selects a set of <see cref="T:System.Windows.UIElement"></see> objects. </summary>
			<param name="selectedElements">A collection of <see cref="T:System.Windows.UIElement"></see> objects to select.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)">
			<summary> Selects a set of ink Stroke objects. </summary>
			<param name="selectedStrokes">A collection of Stroke objects to select.</param>
			<exception cref="T:System.ArgumentException">One or more strokes in selectedStrokes is not in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes"></see> property.</exception>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
			<summary>Selects a combination of Stroke and <see cref="T:System.Windows.UIElement"></see> objects.</summary>
			<param name="selectedStrokes">A collection of Stroke objects to select.</param>
			<param name="selectedElements">A collection of <see cref="T:System.Windows.UIElement"></see> objects to select.</param>
			<exception cref="T:System.ArgumentException">One or more strokes in selectedStrokes is not included in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes"></see> property.</exception>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom"></see> attached property for a given dependency object. </summary>
			<param name="element">The element on which to set the bottom property.</param>
			<param name="length">The bottom coordinate of element.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
			<summary>Sets the application gestures that the <see cref="T:System.Windows.Controls.InkCanvas"></see> will recognize.</summary>
			<param name="applicationGestures">A collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas"></see> will recognize.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable"></see> property is false.</exception>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left"></see> attached property for a given dependency object. </summary>
			<param name="element">The element on which to set the left property.</param>
			<param name="length">The left coordinate of element.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right"></see> attached property for a given dependency object. </summary>
			<param name="element">The element on which to set the right property.</param>
			<param name="length">The right coordinate of element.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top"></see> attached property for a given dependency object. </summary>
			<param name="element">The element on which to set the top property.</param>
			<param name="length">The top coordinate of element.</param>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.ActiveEditingMode">
			<summary>Gets the current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>The current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.Background">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Brush"></see> used to fill the area between the borders of a <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Media.Brush"></see> used to fill the area between the borders of a <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.Children">
			<summary> Retrieves the child elements of the InkCanvas. </summary>
			<returns>A collection of child elements of the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes">
			<summary> Gets or sets the drawing attributes that are applied to new ink strokes made on the InkCanvas. </summary>
			<returns>The default drawing attributes for the InkCanvas.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription">
			<summary>Gets or sets the stylus point description for an InkCanvas. </summary>
			<returns>The stylus point description for an InkCanvas.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.DynamicRenderer">
			<summary>Gets or sets the renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>The renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.EditingMode">
			<summary> Gets or sets the user editing mode used when a pointing device is active.</summary>
			<returns>The editing mode for when a pointing device, such as a tablet pen or mouse, is active.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.EditingModeInverted">
			<summary> Gets or sets the user editing mode that will be used with an InkCanvas when the stylus is held in an inverted position. </summary>
			<returns>The inverted editing mode of the InkCanvas.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.EraserShape">
			<summary> Gets or sets the StylusShape used to point-erase ink from an InkCanvas. </summary>
			<returns>The eraser shape associated with the InkCanvas.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.InkPresenter">
			<summary>Gets the ink presenter that displays the ink on the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>The ink presenter that displays the ink on the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable">
			<summary>Gets whether the gesture recognition component is available on the user's system.</summary>
			<returns>true if the recognition component is available; otherwise, false. </returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.MoveEnabled">
			<summary> Gets or sets whether the user is enabled to move selected ink strokes and/or elements on the InkCanvas. </summary>
			<returns>true if a user can move strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas"></see>; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats">
			<summary>Gets or sets the formats that can be pasted onto the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>A collection of the enumeration values.  The default is <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.ResizeEnabled">
			<summary> Gets or sets whether the user is enabled to resize selected ink strokes and/or elements on the InkCanvas. </summary>
			<returns>true if a user can resize strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas"></see>; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.Strokes">
			<summary>Gets or sets the collection of ink Stroke objects collected by the InkCanvas. </summary>
			<returns>The collection of Stroke objects contained within the InkCanvas.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.UseCustomCursor">
			<summary> Gets or sets whether to override standard InkCanvas cursor functionality to support a custom cursor. </summary>
			<returns>true if the <see cref="T:System.Windows.Controls.InkCanvas"></see> is using a custom cursor; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.Bottom">
			<summary>Gets or sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.InkCanvas"></see> . </summary>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.Left">
			<summary>Gets or sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.InkCanvas"></see> . </summary>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.Right">
			<summary>Gets or sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.InkCanvas"></see> . </summary>
		</member>
		<member name="P:System.Windows.Controls.InkCanvas.Top">
			<summary>Gets or sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.InkCanvas"></see> . </summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasClipboardFormat">
			<summary>Specifies the type of formats that an <see cref="T:System.Windows.Controls.InkCanvas"></see> accepts from the Clipboard.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas"></see> accepts Ink Serialized Format (ISF).</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Text">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas"></see> accepts text.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasClipboardFormat.Xaml">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas"></see> accepts "Extensible Application Markup Language" (XAML) format.</summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasEditingMode">
			<summary>Specifies the editing mode for the <see cref="T:System.Windows.Controls.InkCanvas"></see></summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint">
			<summary>Indicates that the pen erases part of a stroke when the pen intersects the stroke.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke">
			<summary>Indicates thcat the pen erases an entire stroke when the pen intersects the stroke.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasEditingMode.GestureOnly">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas"></see> responds to gestures, and does not receive ink.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasEditingMode.Ink">
			<summary>Indicates that ink appears on the <see cref="T:System.Windows.Controls.InkCanvas"></see> when the pen sends data to it.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasEditingMode.InkAndGesture">
			<summary>Indicates that the <see cref="T:System.Windows.Controls.InkCanvas"></see> responds to gestures, and receives ink.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasEditingMode.None">
			<summary>Indicates that no action is taken when the pen sends data to the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasEditingMode.Select">
			<summary>Indicates that the pen selects strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasGestureEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.Gesture"></see> event. </summary>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InkCanvasGestureEventArgs"></see> class. </summary>
			<param name="Strokes">The strokes that represents the possible gesture.</param>
			<param name="gestureRecognitionResults">The results from the gesture recognizer.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults">
			<summary>Returns results from the gesture recognizer.</summary>
			<returns>A collection of possible application gestures that the <see cref="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes"></see> might be.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Cancel">
			<summary>Gets or sets whether the strokes should be considered a gesture.</summary>
			<returns>true if the strokes are ink; false if the strokes are a gesture.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasGestureEventArgs.Strokes">
			<summary>Gets the strokes that represents the possible gesture.</summary>
			<returns>The strokes that represents the possible gesture.</returns>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasGestureEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.Gesture"></see> event of a <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements">
			<summary>Returns the selected elements.</summary>
			<returns>The selected elements.</returns>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes">
			<summary>Returns the selected strokes.</summary>
			<returns>The selected strokes.</returns>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})">
			<summary>Sets the selected elements.</summary>
			<param name="selectedElements">The elements to select.</param>
			<exception cref="T:System.ArgumentException">selectedElements is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)">
			<summary>Sets the selected strokes.</summary>
			<param name="selectedStrokes">The strokes to select.</param>
			<exception cref="T:System.ArgumentException">selectedStrokes is null.</exception>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasSelectionChangingEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging"></see> event of a <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving"></see> and <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing"></see> events. </summary>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle">
			<summary>Gets or sets the bounds of the selection after it is moved or resized.</summary>
			<returns>The bounds of the selection after it is moved or resized.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle">
			<summary>Gets the bounds of the selection before the user moved or resized it.</summary>
			<returns>The bounds of the selection before the user moved or resized it.</returns>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasSelectionEditingEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving"></see> event, or <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing"></see> event of an <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasSelectionHitResult">
			<summary>Identifies the various parts of a selection adorner of an <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Bottom">
			<summary>The lower middle handle of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomLeft">
			<summary>The lower left handle of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.BottomRight">
			<summary>The lower right handle of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Left">
			<summary>The middle handle on the left edge of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.None">
			<summary>No part of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Right">
			<summary>The middle handle on the right edge of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Selection">
			<summary>The area within the bounds of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.Top">
			<summary>The upper middle handle of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopLeft">
			<summary>The upper left handle of the selection adorner.</summary>
		</member>
		<member name="F:System.Windows.Controls.InkCanvasSelectionHitResult.TopRight">
			<summary>The upper right handle of the selection adorner.</summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected"></see> event. </summary>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.#ctor(System.Windows.Ink.Stroke)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs"></see> class.</summary>
			<param name="stroke">The collected <see cref="T:System.Windows.Ink.Stroke"></see> object.</param>
		</member>
		<member name="M:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Provides a way to invoke event handlers in a type-specific way.</summary>
			<param name="genericTarget">The event target.</param>
			<param name="genericHandler">The event handler.</param>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs.Stroke">
			<summary>Gets the stroke that was added to the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>The stroke that was added to the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected"></see> event of an <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing"></see> event. </summary>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasStrokeErasingEventArgs.Stroke">
			<summary>Gets the stroke that is about to be erased.</summary>
			<returns>The stroke that is about to be erased.</returns>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasStrokeErasingEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing"></see> event of a <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced"></see> event. </summary>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.NewStrokes">
			<summary>Gets the new strokes of the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>The new strokes of the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.InkCanvasStrokesReplacedEventArgs.PreviousStrokes">
			<summary>Gets the previous strokes of the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</summary>
			<returns>The previous strokes of the <see cref="T:System.Windows.Controls.InkCanvas"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.InkCanvasStrokesReplacedEventHandler">
			<summary>Represents the method that will handle the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced"></see> event of a <see cref="T:System.Windows.Controls.InkCanvas"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.InkPresenter">
			<summary>Renders ink on a surface.</summary>
		</member>
		<member name="M:System.Windows.Controls.InkPresenter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.InkPresenter"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.InkPresenter.StrokesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.InkPresenter.Strokes"></see> dependency property.</summary>
		</member>
		<member name="M:System.Windows.Controls.InkPresenter.AttachVisuals(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)">
			<summary>Attaches the visual of a <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer"></see> to an <see cref="T:System.Windows.Controls.InkPresenter"></see>. </summary>
			<param name="visual">The visual of a <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer"></see>.</param>
			<param name="drawingAttributes">The <see cref="T:System.Windows.Ink.DrawingAttributes"></see> that specifies the appearance of the dynamically rendered ink.</param>
			<exception cref="T:System.InvalidOperationException">visual is already attached to a visual tree.</exception>
		</member>
		<member name="M:System.Windows.Controls.InkPresenter.DetachVisuals(System.Windows.Media.Visual)">
			<summary>Detaches the visual of the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer"></see> from the <see cref="T:System.Windows.Controls.InkPresenter"></see>.</summary>
			<param name="visual">The visual of the <see cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer"></see> to detach.</param>
			<exception cref="T:System.InvalidOperationException">visual is not attached to the <see cref="T:System.Windows.Controls.InkPresenter"></see>.</exception>
		</member>
		<member name="M:System.Windows.Controls.InkPresenter.GetLayoutClip(System.Windows.Size)">
			<summary>Returns a clipping geometry that indicates the area that will be clipped if the <see cref="P:System.Windows.UIElement.ClipToBounds"></see> property is set to true. </summary>
			<returns>A <see cref="T:System.Windows.Media.Geometry"></see> that represents the area that is clipped if <see cref="P:System.Windows.UIElement.ClipToBounds"></see> is true. </returns>
			<param name="layoutSlotSize">The available size of the element.</param>
		</member>
		<member name="P:System.Windows.Controls.InkPresenter.Strokes">
			<summary>Gets and sets the strokes that the <see cref="T:System.Windows.Controls.InkPresenter"></see> displays.</summary>
			<returns>The strokes that the <see cref="T:System.Windows.Controls.InkPresenter"></see> displays.</returns>
		</member>
		<member name="T:System.Windows.Controls.ItemCollection">
			<summary>Holds the list of items that constitute the content of an <see cref="T:System.Windows.Controls.ItemsControl"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.Add(System.Object)">
			<summary>Adds an item to the <see cref="T:System.Windows.Controls.ItemCollection"></see>.</summary>
			<returns>The zero-based index at which the object is added or -1 if the item cannot be added.</returns>
			<param name="newItem">The item to add to the collection.</param>
			<exception cref="T:System.InvalidOperationException">The item to add already has a different logical parent. </exception>
			<exception cref="T:System.InvalidOperationException">The collection is in ItemsSource mode.</exception>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.Clear">
			<summary>Clears the collection and releases the references on all items currently in the collection.</summary>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.ItemCollection"></see> is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> mode. (When the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> property is set, the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection will be made read-only and fixed-size.)</exception>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.Contains(System.Object)">
			<summary>Returns a value that indicates whether the specified item is in this view.</summary>
			<returns>true to indicate that the item belongs to this collection and passes the active filter; otherwise, false.</returns>
			<param name="containItem">The object to check.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the elements of the collection to an array, starting at a particular array index. </summary>
			<param name="array">The destination array to copy to.</param>
			<param name="index">The zero-based index in the destination array.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">The index parameter is less than 0.</exception>
			<exception cref="T:System.ArgumentException">The destination array is multidimensional.</exception>
			<exception cref="T:System.ArgumentNullException">The array parameter is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.DeferRefresh">
			<summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
			<returns>An <see cref="T:System.IDisposable"></see> object that you can use to dispose of the calling object.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.GetItemAt(System.Int32)">
			<summary>Returns the item at the specified zero-based index in this view.</summary>
			<returns>The item at the specified zero-based index in this view.</returns>
			<param name="index">The zero-based index at which the item is located.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is out of range.</exception>
			<exception cref="T:System.InvalidOperationException">The collection is uninitialized or the binding on <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> supplied a null value.</exception>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.IndexOf(System.Object)">
			<summary>Returns the index in this collection where the specified item is located. </summary>
			<returns>The index of the item in the collection, or -1 if the item does not exist in the collection.</returns>
			<param name="item">The object to look for in the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.Insert(System.Int32,System.Object)">
			<summary> Inserts an element into the collection at the specified index. </summary>
			<param name="insertItem">The item to insert.</param>
			<param name="insertIndex">The zero-based index at which to insert the item.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">The index is out of range. </exception>
			<exception cref="T:System.InvalidOperationException">The collection is in ItemsSource mode.</exception>
			<exception cref="T:System.InvalidOperationException">The item to insert already has a different logical parent. </exception>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.MoveCurrentTo(System.Object)">
			<summary>Sets the specified item in the collection as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see>.</summary>
			<returns>true to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
			<param name="item">The item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToFirst">
			<summary>Sets the first item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see>.</summary>
			<returns>true to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToLast">
			<summary>Sets the last item in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see>.</summary>
			<returns>true to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToNext">
			<summary>Sets the item after the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see>.</summary>
			<returns>true to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPosition(System.Int32)">
			<summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> in the view.</summary>
			<returns>true to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
			<param name="position">The zero-based index of the item to set as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.MoveCurrentToPrevious">
			<summary>Sets the item before the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> in the view as the <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see>.</summary>
			<returns>true  to indicate that the resulting <see cref="P:System.Windows.Controls.ItemCollection.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.PassesFilter(System.Object)">
			<summary>Returns a value that indicates whether the specified item belongs to this view.</summary>
			<returns>true to indicate that the specified item belongs to this view or there is no filter set on this collection view; otherwise, false.</returns>
			<param name="item">The object to test.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.Remove(System.Object)">
			<summary>Removes the specified item reference from the collection or view.</summary>
			<param name="removeItem">The object to remove.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.ItemCollection"></see> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> mode or if DeferRefresh is in effect.</exception>
		</member>
		<member name="M:System.Windows.Controls.ItemCollection.RemoveAt(System.Int32)">
			<summary>Removes the item at the specified index of the collection or view.</summary>
			<param name="removeIndex">The zero-based index of the item to remove.</param>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Controls.ItemCollection"></see> is read-only because it is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> mode or if DeferRefresh is in effect.</exception>
			<exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.CanFilter">
			<summary>Gets a value that indicates whether this collection view supports filtering.</summary>
			<returns>true if this view supports filtering; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.CanGroup">
			<summary>Gets a value that indicates whether this collection view supports grouping.</summary>
			<returns>true if the collection supports grouping; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.CanSort">
			<summary>Gets a value that indicates whether this collection view supports sorting.</summary>
			<returns>true if this view support sorting; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.Count">
			<summary>Gets the number of records in the collection. </summary>
			<returns>The number of items in the collection or 0 if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> mode.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.CurrentItem">
			<summary>Gets the current item in the view.</summary>
			<returns>The current object in the view or null if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> mode.By default, the first item of the collection starts as the current item.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.CurrentPosition">
			<summary>Gets the ordinal position of the current item within the view.</summary>
			<returns>The ordinal position of the current item within the view or -1 if the collection is uninitialized or if there is no collection in the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> mode.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.Filter">
			<summary>Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</summary>
			<returns>A method used to determine if an item is suitable for inclusion in the view.</returns>
			<exception cref="T:System.NotSupportedException">Filtering is not supported.</exception>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.GroupDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that defines how to group the items.</summary>
			<returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"></see> of <see cref="T:System.ComponentModel.GroupDescription"></see> objects. The collection is indexed by the group levels.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.Groups">
			<summary>Gets the top-level groups that are constructed according to the <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions"></see>.</summary>
			<returns>The top-level groups that are constructed according to the <see cref="P:System.Windows.Controls.ItemCollection.GroupDescriptions"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.IsCurrentAfterLast">
			<summary>Gets a value that indicates whether the current item of the view is beyond the end of the collection.</summary>
			<returns>true if the current item of the view is beyond the end of the collection; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.IsCurrentBeforeFirst">
			<summary>Gets a value that indicates whether the current item of the view is beyond the beginning of the collection.</summary>
			<returns>true if the current item of the view is beyond the beginning of the collection; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.IsEmpty">
			<summary>Gets a value that indicates whether the resulting (filtered) view is empty.</summary>
			<returns>true if the resulting view is empty; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.Item(System.Int32)">
			<summary>Gets or sets the item at the given zero-based index.</summary>
			<returns>The object retrieved or the object that is being set to the specified index.</returns>
			<param name="index">The zero-based index of the item.</param>
			<exception cref="T:System.InvalidOperationException">The collection is uninitialized, or the item to set already has a different logical parent, or the collection is in <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> mode.</exception>
			<exception cref="T:System.ArgumentOutOfRangeException">The index is out of range.</exception>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.NeedsRefresh">
			<summary>Gets a value that indicates whether the collection needs to be refreshed.</summary>
			<returns>true if the collection needs to be refreshed; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.SortDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describe how the items in the collection are sorted in the view.</summary>
			<returns>A collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describe how the items in the collection are sorted in the view.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemCollection.SourceCollection">
			<summary>Gets the unsorted and unfiltered collection that underlies this collection view. </summary>
			<returns>An <see cref="T:System.Collections.IEnumerable"></see> object that is the underlying collection or the user-provided <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> collection.</returns>
		</member>
		<member name="T:System.Windows.Controls.ItemContainerGenerator">
			<summary>Generates the user interface (UI) on behalf of its host, such as an <see cref="T:System.Windows.Controls.ItemsControl"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged">
			<summary>The <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event is raised by a <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> to inform layouts that the items collection has changed.</summary>
		</member>
		<member name="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged">
			<summary>The <see cref="E:System.Windows.Controls.ItemContainerGenerator.StatusChanged"></see> event is raised by a <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> to inform controls that its status has changed. </summary>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromIndex(System.Int32)">
			<summary>Returns the element corresponding to the item at the given index within the <see cref="T:System.Windows.Controls.ItemCollection"></see>.</summary>
			<returns>Returns the element corresponding to the item at the given index within the <see cref="T:System.Windows.Controls.ItemCollection"></see> or returns null if the item is not realized.</returns>
			<param name="index">The index of the desired item.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.ContainerFromItem(System.Object)">
			<summary>Returns the <see cref="T:System.Windows.UIElement"></see> corresponding to the given item.</summary>
			<returns>A <see cref="T:System.Windows.UIElement"></see> that corresponds to the given item. Returns null if the item does not belong to the item collection, or if an <see cref="T:System.Windows.UIElement"></see> has not been generated for it.</returns>
			<param name="item">The <see cref="T:System.Object"></see> item to find the <see cref="T:System.Windows.UIElement"></see> for.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.IndexFromContainer(System.Windows.DependencyObject)">
			<summary>Returns the index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement"></see>. </summary>
			<returns>An <see cref="T:System.Int32"></see> index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement"></see>. </returns>
			<param name="container">The <see cref="T:System.Windows.DependencyObject"></see> that corresponds to the item to the index to be returned.</param>
			<exception cref="T:System.ArgumentException">container is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.ItemFromContainer(System.Windows.DependencyObject)">
			<summary>Returns the item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement"></see>.</summary>
			<returns>A <see cref="T:System.Windows.DependencyObject"></see> that is the item which corresponds to the specified, generated <see cref="T:System.Windows.UIElement"></see>. If the <see cref="T:System.Windows.UIElement"></see> has not been generated, <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> is returned. </returns>
			<param name="container">The <see cref="T:System.Windows.DependencyObject"></see> that corresponds to the item to be returned.</param>
			<exception cref="T:System.ArgumentException">container is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
			<summary>Returns the container element used to display the next item.</summary>
			<returns>A DependencyObject that is the container element which is used to display the next item.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
			<summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
			<returns>A DependencyObject that is the container element which is used to display the next item.</returns>
			<param name="isNewlyRealized">Is true if the returned DependencyObject is newly generated (realized); otherwise, false.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
			<summary>Returns the GeneratorPosition object that maps to the item at the specified index.</summary>
			<returns>An GeneratorPosition object that maps to the item at the specified index.</returns>
			<param name="itemIndex">The index of desired item. </param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
			<summary>Returns the ItemContainerGenerator appropriate for use by the specified panel.</summary>
			<returns>An ItemContainerGenerator appropriate for use by the specified panel.</returns>
			<param name="panel">The panel for which to return an appropriate ItemContainerGenerator.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
			<summary>Returns the index that maps to the specified GeneratorPosition.</summary>
			<returns>An Int32 that is the index which maps to the specified GeneratorPosition.</returns>
			<param name="position">The index of desired item.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
			<summary>Prepares the specified element as the container for the corresponding item.</summary>
			<param name="container">The container to prepare. Normally, container is the result of the previous call to GenerateNext.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<param name="count">The Int32 number of elements to remove, starting at position.</param>
			<param name="position">Removes one or more generated (realized) items.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
			<summary>Removes all generated (realized) items.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
			<summary>Prepares the generator to generate items, starting at the specified GeneratorPosition, and in the specified GeneratorDirection.</summary>
			<returns>An IDisposable object that tracks the lifetime of the generation process.</returns>
			<param name="direction">A GeneratorDirection that specifies the direction which to generate items.</param>
			<param name="position">A GeneratorPosition, that specifies the position of the item to start generating items at.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemContainerGenerator.System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
			<summary>Prepares the generator to generate items, starting at the specified GeneratorPosition, and in the specified GeneratorDirection, and controlling whether or not to start at a generated (realized) item.</summary>
			<returns>An IDisposable object that tracks the lifetime of the generation process.</returns>
			<param name="direction">A GeneratorDirection that specifies the direction which to generate items.</param>
			<param name="position">A GeneratorPosition, that specifies the position of the item to start generating items at.</param>
			<param name="allowStartAtRealizedItem">A Boolean that specifies whether to start at a generated (realized) item.</param>
		</member>
		<member name="P:System.Windows.Controls.ItemContainerGenerator.Status">
			<summary>The generation status of the <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.Primitives.GeneratorStatus"></see> value that represents the generation status of the <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.ItemsControl">
			<summary>Represents a control that can be used to present a collection of items.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsControl"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.DisplayMemberPathProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.GroupStyleSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.HasItemsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.HasItems"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.HasItems"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.IsGroupingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.IsGrouping"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.IsTextSearchEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.ItemContainerStyleSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.ItemsPanelProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.ItemsSourceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.ItemTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ItemsControl.ItemTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.AddChild(System.Object)">
			<summary>Adds the specified object as the child of this <see cref="T:System.Windows.Controls.ItemsControl"></see> object. </summary>
			<param name="value">The object to add as a child.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.AddText(System.String)">
			<summary>Adds the specified text string to this <see cref="T:System.Windows.Controls.ItemsControl"></see> object.</summary>
			<param name="text">The string to add.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary>Undoes the effects of <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"></see>.</summary>
			<param name="item">The item.</param>
			<param name="element">The container element.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.DependencyObject)">
			<summary>Returns the container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl"></see> that owns the given element.</summary>
			<returns>The container that belongs to the current <see cref="T:System.Windows.Controls.ItemsControl"></see> that owns the given element or null if no such container exists.</returns>
			<param name="element">The element to return the container for.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ContainerFromElement(System.Windows.Controls.ItemsControl,System.Windows.DependencyObject)">
			<summary>Returns the container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl"></see> that owns the given container element.</summary>
			<returns>The container that belongs to the specified <see cref="T:System.Windows.Controls.ItemsControl"></see> that owns the given element, if itemsControl is not null. If itemsControl is null, returns the closest container that belongs to any <see cref="T:System.Windows.Controls.ItemsControl"></see>.</returns>
			<param name="itemsControl">The <see cref="T:System.Windows.Controls.ItemsControl"></see> to return the container for.</param>
			<param name="element">The element to return the container for.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.GetContainerForItemOverride">
			<summary>Creates or identifies the element that is used to display the given item.</summary>
			<returns>The element that is used to display the given item.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.GetItemsOwner(System.Windows.DependencyObject)">
			<summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl"></see> the specified element hosts items for.</summary>
			<param name="element">The host element.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.IsItemItsOwnContainerOverride(System.Object)">
			<summary>Determines if the specified item is (or is eligible to be) its own container.</summary>
			<returns>Returns true if the item is (or is eligible to be) its own container; otherwise, false.</returns>
			<param name="item">The item to check.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ItemsControlFromItemContainer(System.Windows.DependencyObject)">
			<summary>Returns the <see cref="T:System.Windows.Controls.ItemsControl"></see> that owns the specified container element.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ItemsControl"></see> that owns the specified container element.</returns>
			<param name="container">The container element to return the <see cref="T:System.Windows.Controls.ItemsControl"></see> for.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnDisplayMemberPathChanged(System.String,System.String)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath"></see> property changes.</summary>
			<param name="newDisplayMemberPath">New value of the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath"></see> property.</param>
			<param name="oldDisplayMemberPath">The old value of the <see cref="P:System.Windows.Controls.ItemsControl.DisplayMemberPath"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnGroupStyleSelectorChanged(System.Windows.Controls.GroupStyleSelector,System.Windows.Controls.GroupStyleSelector)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector"></see> property changes.</summary>
			<param name="oldGroupStyleSelector">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector"></see> property.</param>
			<param name="newGroupStyleSelector">New value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyleSelector"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleChanged(System.Windows.Style,System.Windows.Style)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle"></see> property changes.</summary>
			<param name="oldItemContainerStyle">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle"></see> property.</param>
			<param name="newItemContainerStyle">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnItemContainerStyleSelectorChanged(System.Windows.Controls.StyleSelector,System.Windows.Controls.StyleSelector)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector"></see> property changes.</summary>
			<param name="oldItemContainerStyleSelector">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector"></see> property.</param>
			<param name="newItemContainerStyleSelector">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> property changes.</summary>
			<param name="e">Information about the change.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnItemsPanelChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"></see> property changes.</summary>
			<param name="newItemsPanel">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"></see> property.</param>
			<param name="oldItemsPanel">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
			<summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> property changes.</summary>
			<param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> property.</param>
			<param name="newValue">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemsSource"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"></see> property changes.</summary>
			<param name="oldItemTemplate">The old <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"></see> property value.</param>
			<param name="newItemTemplate">The new <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate"></see> property value.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnItemTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
			<summary>Invoked when the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector"></see> property changes.</summary>
			<param name="oldItemTemplateSelector">Old value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector"></see> property.</param>
			<param name="newItemTemplateSelector">New value of the <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Invoked when to the <see cref="E:System.Windows.UIElement.KeyDown"></see> event is received.</summary>
			<param name="e">Information about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
			<summary>Invoked when to the <see cref="E:System.Windows.UIElement.TextInput"></see> event is received.</summary>
			<param name="e">Information about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary>Prepares the specified element to display the specified item. </summary>
			<param name="item">Specified item.</param>
			<param name="element">Element used to display the specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
			<summary>Gets or sets a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle"></see> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector"></see> property to the container element of the specified item.</summary>
			<returns>Always true for the base implementation.</returns>
			<param name="item">The item of interest.</param>
			<param name="container">The container element.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeGroupStyle">
			<summary>Returns whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle"></see> property on instances of this class.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.ItemsControl.GroupStyle"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ShouldSerializeItems">
			<summary>Returns whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> property on instances of this class.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsControl.ToString">
			<summary>Provides a string representation of this <see cref="T:System.Windows.Controls.ItemsControl"></see> object.</summary>
			<returns>The string representation of the object.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.DisplayMemberPath">
			<summary>Gets or sets a path to a value on the source object to serve as the visual representation of the object. This is a dependency property.</summary>
			<returns>The path to a value on the source object. This can be any path, or an XPath such as "@Name". The default value is an empty string.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.GroupStyle">
			<summary>Gets a collection of <see cref="T:System.Windows.Controls.GroupStyle"></see> objects that define the appearance of each level of groups.</summary>
			<returns>A collection of <see cref="T:System.Windows.Controls.GroupStyle"></see> objects that define the appearance of each level of groups.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.GroupStyleSelector">
			<summary>Gets or sets a method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle"></see> to apply to each group in a collection. This is a dependency property.</summary>
			<returns>A method that enables you to provide custom selection logic for a <see cref="T:System.Windows.Controls.GroupStyle"></see> to apply to each group in a collection.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.HasItems">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ItemsControl"></see> contains items. This is a dependency property.</summary>
			<returns>true if the items count is greater than 0; otherwise, false.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.IsGrouping">
			<summary>Gets a value that indicates whether the control is using grouping. This is a dependency property.</summary>
			<returns>true if a control is using grouping; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.IsTextSearchEnabled">
			<summary>Gets whether <see cref="T:System.Windows.Controls.TextSearch"></see> is enabled on this <see cref="T:System.Windows.Controls.ItemsControl"></see> instance. This is a dependency property.</summary>
			<returns>true if <see cref="T:System.Windows.Controls.TextSearch"></see> is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.ItemContainerGenerator">
			<summary>Gets the <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> that is associated with this control. </summary>
			<returns>The <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> that is associated with this control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyle">
			<summary>Gets or sets the <see cref="T:System.Windows.Style"></see> that is applied to the container element generated for each item. This is a dependency property.</summary>
			<returns>The <see cref="T:System.Windows.Style"></see> that is applied to the container element generated for each item. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector">
			<summary>Enables you to provide custom style-selection logic for a style that can be applied to each generated container element. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.Controls.StyleSelector"></see> object that contains logic that chooses the style to use as the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.Items">
			<summary>Gets the collection used to generate the content of this <see cref="T:System.Windows.Controls.ItemsControl"></see>.</summary>
			<returns>The collection that is used to generate the content of this <see cref="T:System.Windows.Controls.ItemsControl"></see>. The default is an empty collection.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.ItemsPanel">
			<summary>Gets or sets the template that defines the panel that controls the layout of items. This is a dependency property.</summary>
			<returns>An <see cref="T:System.Windows.Controls.ItemsPanelTemplate"></see> that defines the panel to use for the layout of the items. The default value for the <see cref="T:System.Windows.Controls.ItemsControl"></see> is an <see cref="T:System.Windows.Controls.ItemsPanelTemplate"></see> that specifies a <see cref="T:System.Windows.Controls.StackPanel"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.ItemsSource">
			<summary>Gets or sets a collection used to generate the content of this <see cref="T:System.Windows.Controls.ItemsControl"></see>. This is a dependency property.</summary>
			<returns>A collection that is used to generate the content of this <see cref="T:System.Windows.Controls.ItemsControl"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.ItemTemplate">
			<summary>Gets or set the <see cref="T:System.Windows.DataTemplate"></see> used to display each item. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.DataTemplate"></see> that specifies the visualization of the data objects. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector">
			<summary>Allows the application writer to provide custom logic for choosing a template used to display each item. This is a dependency property.</summary>
			<returns>A custom <see cref="T:System.Windows.Controls.DataTemplateSelector"></see> object that provides logic and returns a <see cref="T:System.Windows.DataTemplate"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ItemsControl.LogicalChildren">
			<summary>Gets an enumerator for the logical child objects of this <see cref="T:System.Windows.Controls.ItemsControl"></see> object.</summary>
			<returns>An enumerator for the logical child objects of this <see cref="T:System.Windows.Controls.ItemsControl"></see> object. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.ItemsPanelTemplate">
			<summary>Specifies the panel that the <see cref="T:System.Windows.Controls.ItemsPresenter"></see> creates for the layout of the items of an <see cref="T:System.Windows.Controls.ItemsControl"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.ItemsPanelTemplate"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsPanelTemplate.#ctor(System.Windows.FrameworkElementFactory)">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.ItemsPanelTemplate"></see> class with the specified template.</summary>
			<param name="root">The <see cref="T:System.Windows.FrameworkElementFactory"></see> object that represents the template.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsPanelTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)">
			<summary>Checks that the templated parent is a non-null <see cref="T:System.Windows.Controls.ItemsPresenter"></see> object.</summary>
			<param name="templatedParent">The element this template is applied to. This must be an <see cref="T:System.Windows.Controls.ItemsPresenter"></see> object.</param>
			<exception cref="T:System.ArgumentNullException">The templatedParent must not be null.</exception>
			<exception cref="T:System.ArgumentException">The templatedParent must not be an <see cref="T:System.Windows.Controls.ItemsPresenter"></see>.</exception>
		</member>
		<member name="T:System.Windows.Controls.ItemsPresenter">
			<summary>Used within the template of an item control to specify the place in the control’s visual tree where the <see cref="P:System.Windows.Controls.ItemsControl.ItemsPanel"></see> defined by the <see cref="T:System.Windows.Controls.ItemsControl"></see> is to be added.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsPresenter.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.ItemsPresenter"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsPresenter.ArrangeOverride(System.Windows.Size)">
			<summary> Called to arrange and size the content of an <see cref="T:System.Windows.Controls.ItemsPresenter"></see> object. </summary>
			<returns>Size of content.</returns>
			<param name="arrangeSize">Computed size used to arrange the content.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsPresenter.MeasureOverride(System.Windows.Size)">
			<summary>Overrides the base class implementation of <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)"></see> to measure the size of the <see cref="T:System.Windows.Controls.ItemsPresenter"></see> object and return proper sizes to the layout engine.</summary>
			<returns>The desired size.</returns>
			<param name="constraint">Constraint size is an "upper limit." The return value should not exceed this size.</param>
		</member>
		<member name="M:System.Windows.Controls.ItemsPresenter.OnApplyTemplate">
			<summary>Called when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see>, which is used to build the current template's visual tree.</summary>
		</member>
		<member name="M:System.Windows.Controls.ItemsPresenter.OnTemplateChanged(System.Windows.Controls.ItemsPanelTemplate,System.Windows.Controls.ItemsPanelTemplate)">
			<summary>Called when the control template changes.</summary>
			<param name="oldTemplate">Value of the old template.</param>
			<param name="newTemplate">Value of the new template.</param>
		</member>
		<member name="T:System.Windows.Controls.Label">
			<summary>Represents the text label for a control and provides support for access keys.</summary>
		</member>
		<member name="M:System.Windows.Controls.Label.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.Label"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Label.TargetProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.Label.Target"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Label.Target"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Controls.Label.Target">
			<summary>Gets or sets the element that receives focus when the user presses the label's access key. This is a dependency property.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> that receives focus when the user presses the access key. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.ListBox">
			<summary> Control that implements a list of selectable items. </summary>
		</member>
		<member name="M:System.Windows.Controls.ListBox.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBox"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.ListBox.SelectedItemsProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectedItems"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ListBox.SelectedItems"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ListBox.SelectionModeProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ListBox.SelectionMode"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ListBox.SelectionMode"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ListBox.GetContainerForItemOverride">
			<summary>Creates or identifies the element used to display a specified item. </summary>
			<returns>A <see cref="T:System.Windows.Controls.ListBoxItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.ListBox.IsItemItsOwnContainerOverride(System.Object)">
			<summary> Determines if the specified item is (or is eligible to be) its own ItemContainer. </summary>
			<returns>Returns true if the item is its own ItemContainer; otherwise, false.</returns>
			<param name="item">Specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBox.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary> Called when the <see cref="T:System.Windows.Controls.ListBox"></see><see cref="P:System.Windows.UIElement.IsMouseCaptured"></see> property changes. </summary>
			<param name="e">Provides data for the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBox.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary> Responds to the <see cref="E:System.Windows.UIElement.KeyDown"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.KeyEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBox.OnMouseMove(System.Windows.Input.MouseEventArgs)">
			<summary> Called when a <see cref="T:System.Windows.Controls.ListBox"></see> reports a mouse move. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
			<summary> Responds to a list box selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"></see>. </param>
		</member>
		<member name="M:System.Windows.Controls.ListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary> Prepares the specified element to display the specified item. </summary>
			<param name="item">Specified item.</param>
			<param name="element">Element used to display the specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBox.ScrollIntoView(System.Object)">
			<summary> Causes the object to scroll into view. </summary>
			<param name="item">Object to scroll.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBox.SelectAll">
			<summary> Selects all the items in a <see cref="T:System.Windows.Controls.ListBox"></see>. </summary>
			<exception cref="T:System.NotSupportedException">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode"></see> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single"></see>.</exception>
		</member>
		<member name="M:System.Windows.Controls.ListBox.SetSelectedItems(System.Collections.IEnumerable)">
			<summary> Sets a collection of selected items. </summary>
			<returns>Boolean value. True if all items have been selected false otherwise.</returns>
			<param name="selectedItems">Collection of items to be selected.</param>
		</member>
		<member name="P:System.Windows.Controls.ListBox.SelectedItems">
			<summary> Gets the currently selected items. </summary>
			<returns>Returns a collection of the currently selected items.</returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.ListBox.SelectionMode"></see> property is set to <see cref="F:System.Windows.Controls.SelectionMode.Single"></see>.</exception>
		</member>
		<member name="P:System.Windows.Controls.ListBox.SelectionMode">
			<summary> Gets or sets the selection behavior for a <see cref="T:System.Windows.Controls.ListBox"></see>. </summary>
			<returns>The default selection mode is Single selection. See <see cref="T:System.Windows.Controls.SelectionMode"></see> for a list of possible modes.</returns>
		</member>
		<member name="T:System.Windows.Controls.ListBoxItem">
			<summary>Represents a selectable item in a <see cref="T:System.Windows.Controls.ListBox"></see>. </summary>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.ListBoxItem"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.ListBoxItem.Selected">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.ListBoxItem"></see> is selected.</summary>
		</member>
		<member name="E:System.Windows.Controls.ListBoxItem.Unselected">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.ListBoxItem"></see> is unselected.</summary>
		</member>
		<member name="F:System.Windows.Controls.ListBoxItem.IsSelectedProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ListBoxItem.IsSelected"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ListBoxItem.SelectedEvent">
			<summary>Identifies the <see cref="F:System.Windows.Controls.ListBoxItem.SelectedEvent"></see> routed event. </summary>
			<returns>The identifier for the <see cref="F:System.Windows.Controls.ListBoxItem.SelectedEvent"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.ListBoxItem.UnselectedEvent">
			<summary>Identifies the <see cref="F:System.Windows.Controls.ListBoxItem.UnselectedEvent"></see> routed event. </summary>
			<returns>The <see cref="F:System.Windows.Controls.ListBoxItem.UnselectedEvent"></see> routed event.</returns>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
			<summary> Called when the mouse enters a <see cref="T:System.Windows.Controls.ListBoxItem"></see>. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
			<summary> Called when the mouse leaves a <see cref="T:System.Windows.Controls.ListBoxItem"></see>. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when the user presses the right mouse button over the <see cref="T:System.Windows.Controls.ListBoxItem"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when the user presses the right mouse button over a <see cref="T:System.Windows.Controls.ListBoxItem"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.OnSelected(System.Windows.RoutedEventArgs)">
			<summary>Called when the <see cref="T:System.Windows.Controls.ListBoxItem"></see> is selected in a <see cref="T:System.Windows.Controls.ListBox"></see>.  </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.OnUnselected(System.Windows.RoutedEventArgs)">
			<summary>Called when the <see cref="T:System.Windows.Controls.ListBoxItem"></see> is unselected in a <see cref="T:System.Windows.Controls.ListBox"></see>. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Called when the visual parent of a list box item changes. </summary>
			<param name="oldParent">The previous <see cref="P:System.Windows.FrameworkElement.Parent"></see> property of the <see cref="T:System.Windows.Controls.ListBoxItem"></see>.</param>
		</member>
		<member name="P:System.Windows.Controls.ListBoxItem.IsSelected">
			<summary> Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.ListBoxItem"></see> is selected. This is a dependency property.</summary>
			<returns>true if the item is selected; otherwise, false. The default is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.ListView">
			<summary>Represents a control that displays a list of data items.</summary>
		</member>
		<member name="M:System.Windows.Controls.ListView.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ListView"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.ListView.ViewProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ListView.View"></see> dependencyproperty. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ListView.View"></see> dependencyproperty.</returns>
		</member>
		<member name="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary>Removes all templates, styles, and bindings for the object that is displayed as a <see cref="T:System.Windows.Controls.ListViewItem"></see>.</summary>
			<param name="item">The object that the <see cref="T:System.Windows.Controls.ListViewItem"></see> contains.</param>
			<param name="element">The <see cref="T:System.Windows.Controls.ListViewItem"></see> container to clear.</param>
		</member>
		<member name="M:System.Windows.Controls.ListView.GetContainerForItemOverride">
			<summary>Creates and returns a new <see cref="T:System.Windows.Controls.ListViewItem"></see> container.</summary>
			<returns>A new <see cref="T:System.Windows.Controls.ListViewItem"></see> control.</returns>
		</member>
		<member name="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)">
			<summary>Determines whether an object is a <see cref="T:System.Windows.Controls.ListViewItem"></see>.</summary>
			<returns>true if the item is a <see cref="T:System.Windows.Controls.ListViewItem"></see>; otherwise, false.</returns>
			<param name="item">The object to evaluate.</param>
		</member>
		<member name="M:System.Windows.Controls.ListView.OnCreateAutomationPeer">
			<summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.ListView"></see> control.</summary>
			<returns>Returns a <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see> object for the <see cref="T:System.Windows.Controls.ListView"></see> control.</returns>
		</member>
		<member name="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Responds to a <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)"></see>. </summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary>Sets the styles, templates, and bindings for a <see cref="T:System.Windows.Controls.ListViewItem"></see>.</summary>
			<param name="item">The object to use to create the <see cref="T:System.Windows.Controls.ListViewItem"></see>.</param>
			<param name="element">An object that is a <see cref="T:System.Windows.Controls.ListViewItem"></see> or that can be converted into one.</param>
		</member>
		<member name="P:System.Windows.Controls.ListView.View">
			<summary>Gets or sets an object that defines how the data is styled and organized in a <see cref="T:System.Windows.Controls.ListView"></see> control.</summary>
			<returns>A <see cref="T:System.Windows.Controls.ViewBase"></see> object that specifies how to display information in the <see cref="T:System.Windows.Controls.ListView"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.ListViewItem">
			<summary>Represents an item in a <see cref="T:System.Windows.Controls.ListView"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.ListViewItem.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.ListViewItem"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Controls.MediaElement">
			<summary>Represents a control that contains audio and/or video. </summary>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.#ctor">
			<summary>Instantiates a new instance of the <see cref="T:System.Windows.Controls.MediaElement"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.MediaElement.BufferingEnded">
			<summary>Occurs when media buffering has ended.</summary>
		</member>
		<member name="E:System.Windows.Controls.MediaElement.BufferingStarted">
			<summary>Occurs when media buffering has begun.</summary>
		</member>
		<member name="E:System.Windows.Controls.MediaElement.MediaEnded">
			<summary>Occurs when the media has ended.</summary>
		</member>
		<member name="E:System.Windows.Controls.MediaElement.MediaFailed">
			<summary>Occurs when an error is encountered.</summary>
		</member>
		<member name="E:System.Windows.Controls.MediaElement.MediaOpened">
			<summary>Occurs when media loading has finished.</summary>
		</member>
		<member name="E:System.Windows.Controls.MediaElement.ScriptCommand">
			<summary>Occurs when a script command is encountered in the media.</summary>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.BalanceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Balance"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Balance"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.BufferingEndedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MediaElement.BufferingEnded"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.BufferingStartedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MediaElement.BufferingStarted"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.IsMutedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.IsMuted"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.IsMuted"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.LoadedBehaviorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.MediaEndedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.MediaEnded"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MediaElement.MediaEnded"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.MediaFailedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.MediaFailed"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MediaElement.MediaFailed"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.MediaOpenedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.MediaOpened"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MediaElement.MediaOpened"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.ScriptCommandEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MediaElement.ScriptCommand"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.ScrubbingEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.ScrubbingEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.SourceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Source"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Source"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.StretchDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.StretchDirection"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.StretchDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.StretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Stretch"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Stretch"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.UnloadedBehaviorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MediaElement.VolumeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MediaElement.Volume"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MediaElement.Volume"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges and sizes a <see cref="T:System.Windows.Controls.MediaElement"></see> control.</summary>
			<returns>Size of the control.</returns>
			<param name="finalSize">Size used to arrange the control.</param>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.Close">
			<summary>Closes the media.</summary>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.MeasureOverride(System.Windows.Size)">
			<summary>Updates the <see cref="P:System.Windows.UIElement.DesiredSize"></see> of the <see cref="T:System.Windows.Controls.MediaElement"></see>. This method is called by a parent <see cref="T:System.Windows.UIElement"></see>. This is the first pass of layout.</summary>
			<returns>The desired size.</returns>
			<param name="availableSize">The upper limit the element should not exceed.</param>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.MediaElement"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for this <see cref="T:System.Windows.Controls.MediaElement"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Draws the content of a <see cref="T:System.Windows.Media.DrawingContext"></see> object during the render pass of a <see cref="T:System.Windows.Controls.MediaElement"></see> control. </summary>
			<param name="drawingContext">The <see cref="T:System.Windows.Media.DrawingContext"></see> to draw.</param>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.Pause">
			<summary>Pauses media at the current position.</summary>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock"></see> property is not null.</exception>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.Play">
			<summary>Plays media from the current position.</summary>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock"></see> property is not null.</exception>
		</member>
		<member name="M:System.Windows.Controls.MediaElement.Stop">
			<summary>Stops and resets media to be played from the beginning.</summary>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock"></see> property is not null.</exception>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.Balance">
			<summary>Gets or sets a ratio of volume across speakers. This is a dependency property.</summary>
			<returns>The ratio of volume across speakers in the range between -1 and 1. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.BufferingProgress">
			<summary>Gets a value that indicates the percentage of buffering progress made.</summary>
			<returns>The percentage of buffering completed for streaming content. The value ranges from 0 to 1.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.CanPause">
			<summary>Gets a value indicating whether the media can be paused.</summary>
			<returns>true if the media can be paused; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.Clock">
			<summary>Gets or sets the clock associated with the <see cref="T:System.Windows.Media.MediaTimeline"></see> that controls media playback.</summary>
			<returns>A clock associated with the <see cref="T:System.Windows.Media.MediaTimeline"></see> that controls media playback. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.DownloadProgress">
			<summary>Gets a percentage value indicating the amount of download completed for content located on a remove server.</summary>
			<returns>A percentage value indicating the amount of download completed for content located on a remote server. The value ranges from 0 to 1. The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.HasAudio">
			<summary>Gets a value indicating whether the media has audio.</summary>
			<returns>true if the media has audio; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.HasVideo">
			<summary>Gets a value indicating whether the media has video.</summary>
			<returns>true if the media has video; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.IsBuffering">
			<summary>Get a value indicating whether the media is buffering.</summary>
			<returns>true if the media is buffering; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.IsMuted">
			<summary>Gets or sets a value indicating whether the audio is muted. This is a dependency property.</summary>
			<returns>true if audio is muted; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.LoadedBehavior">
			<summary>Gets or sets the load behavior <see cref="T:System.Windows.Controls.MediaState"></see> for the media. This is a dependency property.</summary>
			<returns>The load behavior <see cref="T:System.Windows.Controls.MediaState"></see> set for the media. The default value is <see cref="F:System.Windows.Controls.MediaState.Play"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.NaturalDuration">
			<summary>Gets the natural duration of the media.</summary>
			<returns>The natural duration of the media.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.NaturalVideoHeight">
			<summary>Gets the height of the video associated with the media.</summary>
			<returns>The height of the video associated with the media. Audio files will return zero.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.NaturalVideoWidth">
			<summary>Gets the width of the video associated with the media.</summary>
			<returns>The width of the video associated with the media.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.Position">
			<summary>Gets or sets the current position of progress through the media's playback time.</summary>
			<returns>The amount of time since the beginning of the media. The default is 00:00:00.</returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock"></see> property is not null.</exception>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.ScrubbingEnabled">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MediaElement"></see> will update frames for seek operations while paused. This is a dependency property.</summary>
			<returns>true if frames are updated while paused; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.Source">
			<summary>Gets or sets a media source on the <see cref="T:System.Windows.Controls.MediaElement"></see>. This is a dependency property.</summary>
			<returns>The URI that specifies the source of the element. The default is null.</returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock"></see> property is not null.</exception>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.SpeedRatio">
			<summary>Gets or sets the speed ratio of the media.</summary>
			<returns>The speed ratio of the media. The valid range is between 0 (zero) and infinity. Values less than 1 yield slower than normal playback, and values greater than 1 yield faster than normal playback. Negative values are treated as 0. The default value is 1. </returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.MediaElement.Clock"></see> property is not null.</exception>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.Stretch">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch"></see> value that describes how a <see cref="T:System.Windows.Controls.MediaElement"></see> fills the destination rectangle. This is a dependency property.</summary>
			<returns>The stretch value for the rendered media. The default is <see cref="F:System.Windows.Media.Stretch.Uniform"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.StretchDirection">
			<summary>Gets or sets a value that determines the restrictions on scaling that are applied to the image. This is a dependency property.</summary>
			<returns>The value that specifies the direction the element is stretched. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.UnloadedBehavior">
			<summary>Gets or sets the unload behavior <see cref="T:System.Windows.Controls.MediaState"></see> for the media. This is a dependency property.</summary>
			<returns>The unload behavior <see cref="T:System.Windows.Controls.MediaState"></see> for the media.</returns>
		</member>
		<member name="P:System.Windows.Controls.MediaElement.Volume">
			<summary>Gets or sets the media's volume. This is a dependency property.</summary>
			<returns>The media's volume represented on a linear scale between 0 and 1. The default is 0.5.</returns>
		</member>
		<member name="T:System.Windows.Controls.MediaState">
			<summary>Specifies the states that can be applied to a <see cref="T:System.Windows.Controls.MediaElement"></see> for the <see cref="P:System.Windows.Controls.MediaElement.LoadedBehavior"></see> and <see cref="P:System.Windows.Controls.MediaElement.UnloadedBehavior"></see> properties.</summary>
		</member>
		<member name="F:System.Windows.Controls.MediaState.Close">
			<summary>The state used to close the media. All media resources are released (including video memory).</summary>
		</member>
		<member name="F:System.Windows.Controls.MediaState.Manual">
			<summary>The state used to control a <see cref="T:System.Windows.Controls.MediaElement"></see> manually. Interactive methods like <see cref="P:System.Windows.Controls.MediaElement.Player"></see> and <see cref="M:System.Windows.Controls.MediaElement.Pause"></see> can be used. Media will preroll but not play when the <see cref="T:System.Windows.Controls.MediaElement"></see> is assigned valid media source.</summary>
		</member>
		<member name="F:System.Windows.Controls.MediaState.Pause">
			<summary>The state used to pause the media. Media will preroll but remains paused when the <see cref="T:System.Windows.Controls.MediaElement"></see> is assigned valid media source.</summary>
		</member>
		<member name="F:System.Windows.Controls.MediaState.Play">
			<summary>The state used to play the media. . Media will preroll automatically being playback when the <see cref="T:System.Windows.Controls.MediaElement"></see> is assigned valid media source.</summary>
		</member>
		<member name="F:System.Windows.Controls.MediaState.Stop">
			<summary>The state used to stop the media. Media will preroll but not play when the <see cref="T:System.Windows.Controls.MediaElement"></see> is assigned valid media source. Media resources are not released.</summary>
		</member>
		<member name="T:System.Windows.Controls.Menu">
			<summary> Represents a Windows menu control that enables you to hierarchically organize elements associated with commands and event handlers. </summary>
		</member>
		<member name="M:System.Windows.Controls.Menu.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.Menu"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Menu.IsMainMenuProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.Menu.IsMainMenu"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Menu.IsMainMenu"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Menu.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
			<summary> Called when any mouse button is pressed or released. </summary>
			<param name="e">A <see cref="T:System.Windows.Input.MouseButtonEventArgs"></see> that contains the event data. </param>
		</member>
		<member name="M:System.Windows.Controls.Menu.OnInitialized(System.EventArgs)">
			<summary> Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"></see> property is set to true. </summary>
			<param name="e">An <see cref="T:System.EventArgs"></see> that contains the event data. </param>
		</member>
		<member name="M:System.Windows.Controls.Menu.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.ContentElement.KeyDown"></see> event. </summary>
			<param name="e">A <see cref="T:System.Windows.Input.KeyEventArgs"></see> that contains the event data. </param>
		</member>
		<member name="M:System.Windows.Controls.Menu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary> Prepares the specified element to display the specified item. </summary>
			<param name="item">The item to display.</param>
			<param name="element">The element used to display the specified item.</param>
		</member>
		<member name="P:System.Windows.Controls.Menu.IsMainMenu">
			<summary> Gets or sets a value that indicates whether this <see cref="T:System.Windows.Controls.Menu"></see> receives a main menu activation notification. This is a dependency property.</summary>
			<returns>true if the menu receives a main menu activation notification; otherwise, false. The default is true.</returns>
		</member>
		<member name="T:System.Windows.Controls.MenuItem">
			<summary>Implements a selectable item inside a <see cref="T:System.Windows.Controls.Menu"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.MenuItem"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.MenuItem.Checked">
			<summary>Occurs when a menu item is checked. </summary>
		</member>
		<member name="E:System.Windows.Controls.MenuItem.Click">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.MenuItem"></see> is clicked. </summary>
		</member>
		<member name="E:System.Windows.Controls.MenuItem.SubmenuClosed">
			<summary>Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen"></see> property changes to false. </summary>
		</member>
		<member name="E:System.Windows.Controls.MenuItem.SubmenuOpened">
			<summary>Occurs when the state of the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen"></see> property changes to true. </summary>
		</member>
		<member name="E:System.Windows.Controls.MenuItem.Unchecked">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.MenuItem"></see> is unchecked.</summary>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.CheckedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.Checked"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MenuItem.Checked"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.ClickEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.Click"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MenuItem.Click"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.CommandParameterProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.CommandParameter"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.CommandProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.Command"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.Command"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.CommandTargetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.CommandTarget"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.IconProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.Icon"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.Icon"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.InputGestureTextProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.InputGestureText"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.IsCheckableProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.IsCheckable"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.IsCheckedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsChecked"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.IsChecked"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.IsHighlightedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.IsHighlighted"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.IsPressedProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsPressed"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.IsPressed"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.IsSubmenuOpenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.IsSubmenuOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.RoleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.Role"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="T:System.Windows.Controls.MenuItemRole"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.StaysOpenOnClickProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.MenuItem.StaysOpenOnClick"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.SubmenuClosedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.SubmenuOpenedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.MenuItem.UncheckedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.MenuItem.Unchecked"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked"></see> routed event.</returns>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.GetContainerForItemOverride">
			<summary>Creates or identifies the element used to display a specified item.</summary>
			<returns>A <see cref="T:System.Windows.Controls.MenuItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.IsItemItsOwnContainerOverride(System.Object)">
			<summary> Determines if the specified item is (or is eligible to be) its own ItemContainer. </summary>
			<returns>Returns true if the item is its own ItemContainer; otherwise, false.</returns>
			<param name="item">Specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
			<summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey"></see> for this control is invoked. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnApplyTemplate">
			<summary>Called when the template's tree is generated.</summary>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnChecked(System.Windows.RoutedEventArgs)">
			<summary>Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked"></see> property becomes true.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Checked"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary>Announces that the keyboard is focused on this element. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.GotFocus"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnInitialized(System.EventArgs)">
			<summary>Called when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"></see> property is set to true and raises an <see cref="E:System.Windows.FrameworkElement.Initialized"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.FrameworkElement.Initialized"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Called when the focus is no longer on or within a <see cref="T:System.Windows.Controls.MenuItem"></see>.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> property changes. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary> Responds to the <see cref="E:System.Windows.UIElement.KeyDown"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
			<summary>Called whenever the mouse enters a <see cref="T:System.Windows.Controls.MenuItem"></see>. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
			<summary>Called whenever the mouse leaves a <see cref="T:System.Windows.Controls.MenuItem"></see>. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when the left mouse button is pressed. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when the left mouse button is released. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnMouseMove(System.Windows.Input.MouseEventArgs)">
			<summary>Called when the mouse is moved over a menu item.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseMove"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when the right mouse button is pressed. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when the right mouse button is released. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseRightButtonUp"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnSubmenuClosed(System.Windows.RoutedEventArgs)">
			<summary>Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem"></see> is closed. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuClosed"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnSubmenuOpened(System.Windows.RoutedEventArgs)">
			<summary>Called when the submenu of a <see cref="T:System.Windows.Controls.MenuItem"></see> is opened. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.SubmenuOpened"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnUnchecked(System.Windows.RoutedEventArgs)">
			<summary>Called when the <see cref="P:System.Windows.Controls.MenuItem.IsChecked"></see> property becomes false.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.MenuItem.Unchecked"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Called when the parent of the visual <see cref="T:System.Windows.Controls.MenuItem"></see> changes. </summary>
			<param name="oldParent">Old value of the parent of the visual, or null if the visual did not have a parent.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary> Prepares the specified element to display the specified item. </summary>
			<param name="item">Specified item.</param>
			<param name="element">Element used to display the specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.MenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
			<summary>Used to determine whether to apply a style to the item container.</summary>
			<param name="item">Item to which the container belongs.</param>
			<param name="container">Container to which the style will be applied.</param>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.Command">
			<summary>Gets or sets the <see cref="P:System.Windows.Controls.MenuItem.Command"></see> property. </summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.CommandParameter">
			<summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.MenuItem.Command"></see> property of a <see cref="T:System.Windows.Controls.MenuItem"></see>. </summary>
			<returns>Default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.Icon">
			<summary>Gets or sets the icon that appears in a <see cref="T:System.Windows.Controls.MenuItem"></see>. </summary>
			<returns>Icon. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.InputGestureText">
			<summary> Sets the text describing an input gesture that will call the command tied to the specified item. </summary>
			<returns>Text that describes the input gesture, such as Ctrl+C for the Copy command. Default value is an empty string.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.IsCheckable">
			<summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.MenuItem"></see> can be checked.</summary>
			<returns>Returns true if the menu item can be checked; false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.IsChecked">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.MenuItem"></see> is checked. </summary>
			<returns>Default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.IsEnabledCore">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.ContentElement.IsEnabled"></see> property is true for the current menu item.</summary>
			<returns>Returns true if the <see cref="T:System.Windows.Controls.MenuItem"></see> can be selected; false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.IsHighlighted">
			<summary>Gets a value that indicates when a <see cref="T:System.Windows.Controls.MenuItem"></see> is highlighted. </summary>
			<returns>A Boolean value, the default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.IsPressed">
			<summary>Gets a value that indicates when a <see cref="T:System.Windows.Controls.MenuItem"></see> is pressed. </summary>
			<returns>A Boolean value, the default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.IsSubmenuOpen">
			<summary>Gets or sets a value that indicates whether the submenu containing the <see cref="T:System.Windows.Controls.MenuItem"></see> control's children is open.</summary>
			<returns>Default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.IsSuspendingPopupAnimation">
			<summary>Gets or sets whether a menu suspends animations on its <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control.</summary>
			<returns>A Boolean value, true if the menu should suspend animations on its popup; false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.Role">
			<summary>Gets a value that indicates the role of a <see cref="T:System.Windows.Controls.MenuItem"></see>. The values are specified in the <see cref="T:System.Windows.Controls.MenuItemRole"></see> enumeration </summary>
			<returns>The default value is <see cref="T:System.Windows.Controls.MenuItemRole"></see>.TopLevelItem.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.SeparatorStyleKey">
			<summary>Gets the style applied to a <see cref="T:System.Windows.Controls.MenuItem"></see> when the <see cref="T:System.Windows.Controls.MenuItem"></see> is a <see cref="T:System.Windows.Controls.Separator"></see>.</summary>
			<returns>Returns a resource key.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.StaysOpenOnClick">
			<summary>Gets or sets a value that indicates that the submenu in which this <see cref="T:System.Windows.Controls.MenuItem"></see> is located should not close when this item is clicked. </summary>
			<returns>Boolean value. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.MenuItem.TopLevelItemTemplateKey">
			<summary>Gets the key used to mark the template for use by a top level item header.</summary>
			<returns>This is used for styling a <see cref="T:System.Windows.Controls.MenuItem"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.MenuItemRole">
			<summary> Defines the different roles that a MenuItem can have. </summary>
		</member>
		<member name="F:System.Windows.Controls.MenuItemRole.SubmenuHeader">
			<summary> Header for a submenu. </summary>
		</member>
		<member name="F:System.Windows.Controls.MenuItemRole.SubmenuItem">
			<summary> Menu item in a submenu that can invoke commands. </summary>
		</member>
		<member name="F:System.Windows.Controls.MenuItemRole.TopLevelHeader">
			<summary> Header for top-level menus. </summary>
		</member>
		<member name="F:System.Windows.Controls.MenuItemRole.TopLevelItem">
			<summary> Top-level menu item that can invoke commands. </summary>
		</member>
		<member name="T:System.Windows.Controls.MenuScrollingVisibilityConverter">
			<summary>Data binding converter to handle the visibility of repeat buttons in scrolling menus.</summary>
		</member>
		<member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.#ctor">
			<summary>Initializes a new instance of a <see cref="T:System.Windows.Controls.MenuScrollingVisibilityConverter"></see></summary>
		</member>
		<member name="M:System.Windows.Controls.MenuScrollingVisibilityConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Called when moving a value from a source to a target.</summary>
			<returns>Converted value.</returns>
			<param name="culture">Culture information.</param>
			<param name="targetType">Type of the target. Type that the source will be converted into.</param>
			<param name="parameter">Converter parameter.</param>
			<param name="values">Values produced by the source binding.</param>
		</member>
		<member name="T:System.Windows.Controls.Orientation">
			<summary> Defines the different orientations that a control or layout can have. </summary>
		</member>
		<member name="F:System.Windows.Controls.Orientation.Horizontal">
			<summary> Control or layout should be horizontally oriented. </summary>
		</member>
		<member name="F:System.Windows.Controls.Orientation.Vertical">
			<summary> Control or layout should be vertically oriented. </summary>
		</member>
		<member name="T:System.Windows.Controls.OverflowMode">
			<summary> Specifies how <see cref="T:System.Windows.Controls.ToolBar"></see> items are placed in the main toolbar panel and in the overflow panel. </summary>
		</member>
		<member name="F:System.Windows.Controls.OverflowMode.Always">
			<summary> Item is permanently placed in the overflow panel. </summary>
		</member>
		<member name="F:System.Windows.Controls.OverflowMode.AsNeeded">
			<summary> Item moves between the main panel and overflow panel, depending on the available space. </summary>
		</member>
		<member name="F:System.Windows.Controls.OverflowMode.Never">
			<summary> Item is never allowed to overflow. </summary>
		</member>
		<member name="T:System.Windows.Controls.Page">
			<summary><see cref="T:System.Windows.Controls.Page"></see> encapsulates a page of content that can be navigated to and hosted by Windows Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow"></see>, and <see cref="T:System.Windows.Controls.Frame"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Page.#ctor">
			<summary>Initializes a new instance of <see cref="T:System.Windows.Controls.Page"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Page.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.Background"></see> dependency property.</summary>
			<returns>The identifier the <see cref="P:System.Windows.Controls.Page.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Page.ContentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.Content"></see> dependency property.</summary>
			<returns>The identifier the <see cref="P:System.Windows.Controls.Page.Content"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Page.FontFamilyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.FontFamily"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Page.FontSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.FontSize"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Page.ForegroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.Foreground"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Page.KeepAliveProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.KeepAlive"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Page.TemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.Template"></see> dependency property.</summary>
			<returns>The identifier the <see cref="P:System.Windows.Controls.Page.Template"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Page.TitleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Page.Title"></see> dependency property.</summary>
		</member>
		<member name="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)">
			<summary>Override this method to customize the position of the window's child elements. </summary>
			<returns>A <see cref="T:System.Windows.Size"></see> that is the size of the window.</returns>
			<param name="arrangeBounds">The final size of the window object and its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.Page.MeasureOverride(System.Windows.Size)">
			<summary>Override this method to measure the size of a window.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> that is the actual size of the window. The method may return a larger value, in which case the parent may need to add scroll bars.</returns>
			<param name="constraint">The available area that the window can give to its children.</param>
		</member>
		<member name="M:System.Windows.Controls.Page.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
			<summary>Called when the template for a <see cref="T:System.Windows.Controls.Page"></see> changes.</summary>
			<param name="oldTemplate">The old template.</param>
			<param name="newTemplate">The new template. </param>
		</member>
		<member name="M:System.Windows.Controls.Page.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Called when the parent of the <see cref="T:System.Windows.Controls.Page"></see> is changed.</summary>
			<param name="oldParent">The previous parent. Set to null if the <see cref="T:System.Windows.DependencyObject"></see> did not have a previous parent.</param>
			<exception cref="T:System.InvalidOperationException">The new parent is neither a <see cref="T:System.Windows.Window"></see> nor a  <see cref="T:System.Windows.Controls.Frame"></see>.</exception>
		</member>
		<member name="M:System.Windows.Controls.Page.ShouldSerializeShowsNavigationUI">
			<summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI"></see> property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value, true if the content should be serialized; otherwise false.</returns>
		</member>
		<member name="M:System.Windows.Controls.Page.ShouldSerializeTitle">
			<summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.Title"></see> property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value, true if the content should be serialized; otherwise false.</returns>
		</member>
		<member name="M:System.Windows.Controls.Page.ShouldSerializeWindowHeight">
			<summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowHeight"></see> property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value, true if the content should be serialized; otherwise false.</returns>
		</member>
		<member name="M:System.Windows.Controls.Page.ShouldSerializeWindowTitle">
			<summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowTitle"></see> property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value, true if the content should be serialized; otherwise false.</returns>
		</member>
		<member name="M:System.Windows.Controls.Page.ShouldSerializeWindowWidth">
			<summary>Allows derived classes to determine the serialization behavior of the <see cref="P:System.Windows.Controls.Page.WindowWidth"></see> property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value, true if the content should be serialized; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.Background">
			<summary>Gets or sets the background for a <see cref="T:System.Windows.Controls.Page"></see>. This is a dependency property.</summary>
			<returns>The <see cref="T:System.Windows.Media.Brush"></see> that <see cref="T:System.Windows.Controls.Page"></see> uses to paint its background.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.Content">
			<summary>Gets or sets content of a <see cref="T:System.Windows.Controls.Page"></see>. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Object"></see> that contains the content of a <see cref="T:System.Windows.Controls.Page"></see>. <see cref="P:System.Windows.SystemFonts.MessageFontFamily"></see> is the default.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.FontFamily">
			<summary>Gets or sets the name of the specified font family. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.Media.FontFamily"></see> that is the font family for the content of a <see cref="T:System.Windows.Controls.Page"></see>. The default is <see cref="P:System.Windows.SystemFonts.MessageFontFamily"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.FontSize">
			<summary>Gets or sets the font size. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Double"></see> that is the font size for the content of a <see cref="T:System.Windows.Controls.Page"></see>. The default is <see cref="P:System.Windows.SystemFonts.MessageFontSize"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.Foreground">
			<summary>Gets or sets the foreground for a <see cref="T:System.Windows.Controls.Page"></see>. This is a dependency property.</summary>
			<returns>The <see cref="T:System.Windows.Media.Brush"></see> that <see cref="T:System.Windows.Controls.Page"></see> uses to paint its foreground. The default is <see cref="P:System.Windows.SystemColors.ControlTextBrush"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.KeepAlive">
			<summary>Gets or sets whether an instance of a <see cref="T:System.Windows.Controls.Page"></see> is retained in navigation history. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is true to retain an instance of a <see cref="T:System.Windows.Controls.Page"></see> in navigation history; otherwise, false (the default).</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.LogicalChildren">
			<summary>Returns an enumerator for the logical child elements of a <see cref="T:System.Windows.Controls.Page"></see>.</summary>
			<returns>The <see cref="T:System.Collections.IEnumerator"></see> for the logical child elements of a <see cref="T:System.Windows.Controls.Page"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.NavigationService">
			<summary>Gets the navigation service that the host of the page (Windows Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>) is using to manage navigation.</summary>
			<returns>The <see cref="T:System.Windows.Navigation.NavigationService"></see> object that the host of the page (Windows Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>) is using to manage navigation; null otherwise.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.ShowsNavigationUI">
			<summary>Gets or sets whether the navigation UI of a <see cref="T:System.Windows.Navigation.NavigationWindow"></see> or Microsoft Internet Explorer 6 is visible.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is true when the navigation UI of a host <see cref="T:System.Windows.Navigation.NavigationWindow"></see> is visible; otherwise, false.</returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="P:System.Windows.Controls.Page.ShowsNavigationUI"></see> property is inspected on a <see cref="T:System.Windows.Controls.Page"></see> instance that is not hosted by a <see cref="T:System.Windows.Window"></see>, <see cref="T:System.Windows.Navigation.NavigationWindow"></see>, or a browser.</exception>
		</member>
		<member name="P:System.Windows.Controls.Page.Template">
			<summary>Gets or sets the control template for a <see cref="T:System.Windows.Controls.Page"></see>. This is a dependency property.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ControlTemplate"></see> for a <see cref="T:System.Windows.Controls.Page"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.Title">
			<summary>Gets or sets the title of the <see cref="T:System.Windows.Controls.Page"></see>. This is a dependency property.</summary>
			<returns>The <see cref="T:System.String"></see> that is the title of the <see cref="T:System.Windows.Controls.Page"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.WindowHeight">
			<summary>Gets or sets the height of the host <see cref="T:System.Windows.Window"></see> or <see cref="T:System.Windows.Navigation.NavigationWindow"></see> of a <see cref="T:System.Windows.Controls.Page"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> value that is the height of a window that directly hosts a <see cref="T:System.Windows.Controls.Page"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.WindowTitle">
			<summary>Gets or sets the title of the host <see cref="T:System.Windows.Window"></see> or <see cref="T:System.Windows.Navigation.NavigationWindow"></see> of a <see cref="T:System.Windows.Controls.Page"></see>.</summary>
			<returns>A <see cref="T:System.String"></see> value that is the title of a window that directly hosts a <see cref="T:System.Windows.Controls.Page"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Page.WindowWidth">
			<summary>Gets or sets the width of the host <see cref="T:System.Windows.Window"></see> or <see cref="T:System.Windows.Navigation.NavigationWindow"></see> of a <see cref="T:System.Windows.Controls.Page"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> value that is the width of a window that directly hosts a <see cref="T:System.Windows.Controls.Page"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.PageRange">
			<summary>Specifies a range of pages.</summary>
		</member>
		<member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange"></see> class that includes only the single specified page.</summary>
			<param name="page">The page that is printed or processed.</param>
		</member>
		<member name="M:System.Windows.Controls.PageRange.#ctor(System.Int32,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PageRange"></see> class with the specified first and last pages.</summary>
			<param name="pageTo">The last page of the range.</param>
			<param name="pageFrom">The first page of the range.</param>
		</member>
		<member name="M:System.Windows.Controls.PageRange.Equals(System.Object)">
			<summary>Tests whether an object of unknown type is equal to this <see cref="T:System.Windows.Controls.PageRange"></see>. </summary>
			<returns>true if the object is of type <see cref="T:System.Windows.Controls.PageRange"></see> and is equal to this <see cref="T:System.Windows.Controls.PageRange"></see>; otherwise, false.</returns>
			<param name="obj">The object tested.</param>
		</member>
		<member name="M:System.Windows.Controls.PageRange.Equals(System.Windows.Controls.PageRange)">
			<summary>Tests whether a <see cref="T:System.Windows.Controls.PageRange"></see> is equal to this <see cref="T:System.Windows.Controls.PageRange"></see>. </summary>
			<returns>true if the two <see cref="T:System.Windows.Controls.PageRange"></see> objects are equal; otherwise, false.</returns>
			<param name="pageRange">The <see cref="T:System.Windows.Controls.PageRange"></see> tested.</param>
		</member>
		<member name="M:System.Windows.Controls.PageRange.GetHashCode">
			<summary>Gets the hash code value for the <see cref="T:System.Windows.Controls.PageRange"></see>.</summary>
			<returns>The hash code value for the <see cref="T:System.Windows.Controls.PageRange"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.PageRange.op_Equality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
			<summary>Defines the "==" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange"></see> objects are equal.</summary>
			<returns>true if the two <see cref="T:System.Windows.Controls.PageRange"></see> objects are equal; otherwise, false.</returns>
			<param name="pr1">The first <see cref="T:System.Windows.Controls.PageRange"></see>.</param>
			<param name="pr2">The second <see cref="T:System.Windows.Controls.PageRange"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.PageRange.op_Inequality(System.Windows.Controls.PageRange,System.Windows.Controls.PageRange)">
			<summary>Defines the "!=" operator for testing whether two specified <see cref="T:System.Windows.Controls.PageRange"></see> objects are not equal.</summary>
			<returns>true if the two <see cref="T:System.Windows.Controls.PageRange"></see> objects are not equal; otherwise, false.</returns>
			<param name="pr1">The first <see cref="T:System.Windows.Controls.PageRange"></see>.</param>
			<param name="pr2">The second <see cref="T:System.Windows.Controls.PageRange"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.PageRange.ToString">
			<summary>Gets a string representation of the range.</summary>
			<returns>A string that represents the range of pages in the format "<see cref="P:System.Windows.Controls.PageRange.PageFrom"></see>-<see cref="P:System.Windows.Controls.PageRange.PageTo"></see>".</returns>
		</member>
		<member name="P:System.Windows.Controls.PageRange.PageFrom">
			<summary>Gets or sets the page number of the first page in the range.</summary>
			<returns>The 1-based page number of the first page in the range.</returns>
		</member>
		<member name="P:System.Windows.Controls.PageRange.PageTo">
			<summary>Gets or sets the page number of the last page in the range.</summary>
			<returns>The 1-based page number of the last page in the range.</returns>
		</member>
		<member name="T:System.Windows.Controls.PageRangeSelection">
			<summary>Specifies whether all the pages or only a limited range will be processed by an operation, usually printing.</summary>
		</member>
		<member name="F:System.Windows.Controls.PageRangeSelection.AllPages">
			<summary>All pages.</summary>
		</member>
		<member name="F:System.Windows.Controls.PageRangeSelection.UserPages">
			<summary>A user-specified range of pages.</summary>
		</member>
		<member name="T:System.Windows.Controls.Panel">
			<summary>Provides a base class for all <see cref="T:System.Windows.Controls.Panel"></see> elements. Use <see cref="T:System.Windows.Controls.Panel"></see> elements to position and arrange child objects in Windows Presentation Foundation (WPF) applications. </summary>
		</member>
		<member name="M:System.Windows.Controls.Panel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Panel"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.Panel.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Panel.Background"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Panel.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Panel.IsItemsHostProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Panel.IsItemsHost"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Panel.IsItemsHost"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Panel.ZIndexProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Panel.ZIndex"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Panel.ZIndex"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Panel.CreateUIElementCollection(System.Windows.FrameworkElement)">
			<summary>Creates a new <see cref="T:System.Windows.Controls.UIElementCollection"></see>.</summary>
			<returns>An ordered collection of elements that have the specified logical parent.</returns>
			<param name="logicalParent">The logical parent element of the collection to be created.</param>
		</member>
		<member name="M:System.Windows.Controls.Panel.GetVisualChild(System.Int32)">
			<summary>Gets a <see cref="T:System.Windows.Media.Visual"></see> child of this <see cref="T:System.Windows.Controls.Panel"></see> at the specified index position.</summary>
			<returns>A <see cref="T:System.Windows.Media.Visual"></see> child of the parent <see cref="T:System.Windows.Controls.Panel"></see> element.</returns>
			<param name="index">The index position of the <see cref="T:System.Windows.Media.Visual"></see> child.</param>
		</member>
		<member name="M:System.Windows.Controls.Panel.GetZIndex(System.Windows.UIElement)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex"></see> property for a given element.</summary>
			<returns>The <see cref="P:System.Windows.Controls.Panel.ZIndex"></see> position of the element.</returns>
			<param name="element">The element whose <see cref="P:System.Windows.Controls.Panel.ZIndex"></see> value is desired.</param>
			<exception cref="T:System.ArgumentNullException">The element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Panel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
			<summary>Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost"></see> property value has changed.</summary>
			<param name="newIsItemsHost">The new property value.</param>
			<param name="oldIsItemsHost">The old property value.</param>
		</member>
		<member name="M:System.Windows.Controls.Panel.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Draws the content of a <see cref="T:System.Windows.Media.DrawingContext"></see> object during the render pass of a <see cref="T:System.Windows.Controls.Panel"></see> element. </summary>
			<param name="dc">The <see cref="T:System.Windows.Media.DrawingContext"></see> object to draw.</param>
		</member>
		<member name="M:System.Windows.Controls.Panel.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)">
			<summary>Invoked when the <see cref="T:System.Windows.Media.VisualCollection"></see> of a visual object is modified.</summary>
			<param name="visualRemoved">The <see cref="T:System.Windows.Media.Visual"></see> that was removed from the collection.</param>
			<param name="visualAdded">The <see cref="T:System.Windows.Media.Visual"></see> that was added to the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.Panel.SetZIndex(System.Windows.UIElement,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Panel.ZIndex"></see> attached property for a given element.</summary>
			<param name="element">The element on which to apply the property value.</param>
			<param name="value">The order on the z-plane in which this element appears.</param>
			<exception cref="T:System.ArgumentNullException">The element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Panel.ShouldSerializeChildren">
			<summary>Determines whether the <see cref="P:System.Windows.Controls.Panel.Children"></see> collection of a panel should be serialized.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.Panel.Children"></see> collection should be serialized; otherwise, false. The <see cref="P:System.Windows.Controls.Panel.Children"></see> collection is only serialized if it is not empty and not null.</returns>
		</member>
		<member name="M:System.Windows.Controls.Panel.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.Panel.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.Panel.Background">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Brush"></see> that is used to fill the area between the borders of a <see cref="T:System.Windows.Controls.Panel"></see>. </summary>
			<returns>A <see cref="T:System.Windows.Media.Brush"></see>. This default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.Children">
			<summary>Gets a <see cref="T:System.Windows.Controls.UIElementCollection"></see> of child elements of this <see cref="T:System.Windows.Controls.Panel"></see>. </summary>
			<returns>A <see cref="T:System.Windows.Controls.UIElementCollection"></see>. The default value is an empty <see cref="T:System.Windows.Controls.UIElementCollection"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.HasLogicalOrientation">
			<summary>Gets a value that indicates whether this <see cref="T:System.Windows.Controls.Panel"></see> arranges its descendants in a single dimension.</summary>
			<returns>true if the orientation of the <see cref="T:System.Windows.Controls.Panel"></see> is in one dimension; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.InternalChildren">
			<summary>Gets a <see cref="T:System.Windows.Controls.UIElementCollection"></see> of child elements. </summary>
			<returns>An ordered collection of <see cref="T:System.Windows.UIElement"></see> objects. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.IsItemsHost">
			<summary>Gets or sets a value that indicates that this <see cref="T:System.Windows.Controls.Panel"></see> is a container for user interface (UI) items that are generated by an <see cref="T:System.Windows.Controls.ItemsControl"></see>. </summary>
			<returns>true if this instance of <see cref="T:System.Windows.Controls.Panel"></see> is an items host; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical child elements of this <see cref="T:System.Windows.Controls.Panel"></see> element. </summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.LogicalOrientation">
			<summary>The <see cref="T:System.Windows.Controls.Orientation"></see> of the panel, if the panel only supports layout in a single dimension.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Orientation"></see> of the panel. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.VisualChildrenCount">
			<summary>Gets the number of child <see cref="T:System.Windows.Media.Visual"></see> objects in this instance of <see cref="T:System.Windows.Controls.Panel"></see>.</summary>
			<returns>The number of child <see cref="T:System.Windows.Media.Visual"></see> objects.</returns>
		</member>
		<member name="P:System.Windows.Controls.Panel.ZIndex">
			<summary>Gets or sets a value that represents the order on the z-plane in which an element appears.</summary>
			<returns>The order on the z-plane in which this element appears.</returns>
		</member>
		<member name="T:System.Windows.Controls.PasswordBox">
			<summary>Represents a control designed for entering and handling passwords.</summary>
		</member>
		<member name="M:System.Windows.Controls.PasswordBox.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PasswordBox"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.PasswordBox.PasswordChanged">
			<summary>Occurs when the value of the <see cref="P:System.Windows.Controls.PasswordBox.Password"></see> property changes.</summary>
		</member>
		<member name="F:System.Windows.Controls.PasswordBox.MaxLengthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.PasswordBox.MaxLength"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.MaxLength"></see> proprerty.</returns>
		</member>
		<member name="F:System.Windows.Controls.PasswordBox.PasswordChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged"></see> event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.PasswordBox.PasswordChanged"></see> event.</returns>
		</member>
		<member name="F:System.Windows.Controls.PasswordBox.PasswordCharProperty">
			<summary>Identifiies the <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.PasswordBox.PasswordChar"></see> property.</returns>
		</member>
		<member name="M:System.Windows.Controls.PasswordBox.Clear">
			<summary>Clears the value of the <see cref="P:System.Windows.Controls.PasswordBox.Password"></see> property.</summary>
		</member>
		<member name="M:System.Windows.Controls.PasswordBox.OnApplyTemplate">
			<summary>Called when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see>, which is used to build the current template's visual tree. </summary>
		</member>
		<member name="M:System.Windows.Controls.PasswordBox.Paste">
			<summary>Replaces the current selection in the <see cref="T:System.Windows.Controls.PasswordBox"></see> with the contents of the Clipboard.</summary>
		</member>
		<member name="M:System.Windows.Controls.PasswordBox.SelectAll">
			<summary>Selects the entire contents of the <see cref="T:System.Windows.Controls.PasswordBox"></see>.</summary>
		</member>
		<member name="P:System.Windows.Controls.PasswordBox.MaxLength">
			<summary>Gets or sets the maximum length for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox"></see>.</summary>
			<returns>An integer specifying the maximum length, in characters, for passwords to be handled by this <see cref="T:System.Windows.Controls.PasswordBox"></see>.A value of zero (0) means no limit.The default value is 0 (no length limit).</returns>
		</member>
		<member name="P:System.Windows.Controls.PasswordBox.Password">
			<summary>Gets or sets the password currently held by the <see cref="T:System.Windows.Controls.PasswordBox"></see>.</summary>
			<returns>A string representing the password currently help by the <see cref="T:System.Windows.Controls.PasswordBox"></see>.The default value is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.PasswordBox.PasswordChar">
			<summary>Gets or sets the masking character for the <see cref="T:System.Windows.Controls.PasswordBox"></see>.</summary>
			<returns>A masking character to echo when the user enters text into the <see cref="T:System.Windows.Controls.PasswordBox"></see>.The default value is a bullet character (●).</returns>
		</member>
		<member name="T:System.Windows.Controls.PrintDialog">
			<summary>Invokes a standard Microsoft Windows print dialog box that configures a <see cref="T:System.Printing.PrintTicket"></see> and <see cref="T:System.Printing.PrintQueue"></see> according to user input and then prints a document. </summary>
		</member>
		<member name="M:System.Windows.Controls.PrintDialog.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialog"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.PrintDialog.PrintDocument(System.Windows.Documents.DocumentPaginator,System.String)">
			<summary>Prints a <see cref="T:System.Windows.Documents.DocumentPaginator"></see> object to the <see cref="T:System.Printing.PrintQueue"></see> that is currently selected.</summary>
			<param name="description">A description of the job that is to be printed. This text appears in the user interface (UI) of the printer.</param>
			<param name="documentPaginator">The <see cref="T:System.Windows.Documents.DocumentPaginator"></see> object to print.</param>
			<exception cref="T:System.ArgumentNullException">documentPaginator is null. </exception>
		</member>
		<member name="M:System.Windows.Controls.PrintDialog.PrintVisual(System.Windows.Media.Visual,System.String)">
			<summary>Prints a visual (non-text) object, which is derived from the <see cref="T:System.Windows.Media.Visual"></see> class, to the <see cref="T:System.Printing.PrintQueue"></see> that is currently selected.</summary>
			<param name="description">A description of the job that is to be printed. This text appears in the user interface (UI) of the printer.</param>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> to print.</param>
			<exception cref="T:System.ArgumentNullException">visual is null. </exception>
		</member>
		<member name="M:System.Windows.Controls.PrintDialog.ShowDialog">
			<summary>Invokes the <see cref="T:System.Windows.Controls.PrintDialog"></see> as a modal dialog box. </summary>
			<returns>true if a user clicks Print; false if a user clicks Cancel; or null if a user closes the dialog box without clicking Print or Cancel.</returns>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.MaxPage">
			<summary>Gets or sets the highest page number that is allowed in page ranges.</summary>
			<returns>A <see cref="T:System.UInt32"></see> that represents the highest page number that can be used in a page range in the Print dialog box. </returns>
			<exception cref="T:System.ArgumentException">The property is being set to less than 1.</exception>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.MinPage">
			<summary>Gets or sets the lowest page number that is allowed in page ranges.</summary>
			<returns>A <see cref="T:System.UInt32"></see> that represents the lowest page number that can be used in a page range in the Print dialog box. </returns>
			<exception cref="T:System.ArgumentException">The property is being set to less than 1.</exception>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.PageRange">
			<summary>Gets or sets the range of pages to print when <see cref="P:System.Windows.Controls.PrintDialog.PageRangeSelection"></see> is set to <see cref="F:System.Windows.Controls.PageRangeSelection.UserPages"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.PageRange"></see> that represents the range of pages that are printed. </returns>
			<exception cref="T:System.ArgumentException">The <see cref="T:System.Windows.Controls.PageRange"></see> object that is being used to set the property has either the beginning of the range or the end of the range set to a value that is less than 1.</exception>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.PageRangeSelection">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.PageRangeSelection"></see> for this instance of <see cref="T:System.Windows.Controls.PrintDialog"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.PageRangeSelection"></see> value that represents the type of page range to print. </returns>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.PrintableAreaHeight">
			<summary>Gets the height of the printable area of the page.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the height of the printable page area.</returns>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.PrintableAreaWidth">
			<summary>Gets the width of the printable area of the page.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the width of the printable page area.</returns>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.PrintQueue">
			<summary>Gets or sets a <see cref="T:System.Printing.PrintQueue"></see> that represents the printer that is selected.</summary>
			<returns>The <see cref="T:System.Printing.PrintQueue"></see> that the user selected. </returns>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.PrintTicket">
			<summary>Gets or sets the <see cref="T:System.Printing.PrintTicket"></see> that is used by the <see cref="T:System.Windows.Controls.PrintDialog"></see> when the user clicks Print for the current print job.</summary>
			<returns>A <see cref="T:System.Printing.PrintTicket"></see> that is used the next time the Print button in the dialog box is clicked.Setting this <see cref="P:System.Windows.Controls.PrintDialog.PrintTicket"></see> property does not validate or modify the specified <see cref="T:System.Printing.PrintTicket"></see> for a particular <see cref="T:System.Printing.PrintQueue"></see>.  If needed, use the <see cref="M:System.Printing.PrintQueue.MergeAndValidatePrintTicket(System.Printing.PrintTicket,System.Printing.PrintTicket)"></see> method to create a <see cref="T:System.Printing.PrintQueue"></see>-specific <see cref="T:System.Printing.PrintTicket"></see> that is valid for a given printer.</returns>
		</member>
		<member name="P:System.Windows.Controls.PrintDialog.UserPageRangeEnabled">
			<summary>Gets or sets a value that indicates whether users of the Print dialog box have the option to specify ranges of pages to print.</summary>
			<returns>true if the option is available; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.Controls.PrintDialogException">
			<summary>The exception that is thrown when an error condition occurs during the opening, accessing, or using of a PrintDialog Control.</summary>
		</member>
		<member name="M:System.Windows.Controls.PrintDialogException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException"></see> class that provides a specific error condition in a <see cref="T:System.String"></see> .</summary>
			<param name="message">A <see cref="T:System.String"></see> that describes the error condition.</param>
		</member>
		<member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException"></see> class that provides specific <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> and <see cref="T:System.Runtime.Serialization.StreamingContext"></see>. This constructor is protected.</summary>
			<param name="context">The context, including source and destination, of the serialized stream.</param>
			<param name="info">The data that is required to serialize or deserialize an object.</param>
		</member>
		<member name="M:System.Windows.Controls.PrintDialogException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.PrintDialogException"></see> class that provides a specific error condition, including its underlying cause.</summary>
			<param name="message">The <see cref="T:System.String"></see> that describes the error condition.</param>
			<param name="innerException">The underlying error condition that caused the <see cref="T:System.Windows.Controls.PrintDialogException"></see>.</param>
		</member>
		<member name="T:System.Windows.Controls.ProgressBar">
			<summary> Control that an application uses to visually indicate the progress of a lengthy operation. </summary>
		</member>
		<member name="M:System.Windows.Controls.ProgressBar.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.ProgressBar"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.ProgressBar.IsIndeterminateProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ProgressBar.IsIndeterminate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ProgressBar.OrientationProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ProgressBar.Orientation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ProgressBar.Orientation"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ProgressBar.OnApplyTemplate">
			<summary>Called when a template is applied to a <see cref="T:System.Windows.Controls.ProgressBar"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.ProgressBar.OnValueChanged(System.Double,System.Double)">
			<summary> Updates the current position of the <see cref="T:System.Windows.Controls.ProgressBar"></see> when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property changes. </summary>
			<param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property.</param>
			<param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property.</param>
		</member>
		<member name="P:System.Windows.Controls.ProgressBar.IsIndeterminate">
			<summary> Gets or sets whether the <see cref="T:System.Windows.Controls.ProgressBar"></see> shows actual values or generic, continuous progress feedback. </summary>
			<returns>This value is false if the <see cref="T:System.Windows.Controls.ProgressBar"></see> shows actual values. If the <see cref="T:System.Windows.Controls.ProgressBar"></see> shows generic progress, the value is true. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ProgressBar.Orientation">
			<summary> Gets or sets the orientation of a <see cref="T:System.Windows.Controls.ProgressBar"></see>: horizontal or vertical. </summary>
			<returns>Value from the <see cref="T:System.Windows.Controls.Orientation"></see> enumeration. The default value is horizontal.</returns>
		</member>
		<member name="T:System.Windows.Controls.RadioButton">
			<summary> Represents a button that can be selected, but not cleared, by a user. The <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked"></see> property of a <see cref="T:System.Windows.Controls.RadioButton"></see> can be set by clicking it, but it can only be cleared progammatically. </summary>
		</member>
		<member name="M:System.Windows.Controls.RadioButton.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.RadioButton"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.RadioButton.GroupNameProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.RadioButton.GroupName"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.RadioButton.GroupName"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.RadioButton.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
			<summary> Called when the <see cref="P:System.Windows.Controls.AccessText.AccessKey"></see> for a radio button is invoked. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.AccessKeyEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.RadioButton.OnChecked(System.Windows.RoutedEventArgs)">
			<summary>Called when the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked"></see> property becomes true. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.RoutedEventArgs"></see>.</param>
		</member>
		<member name="P:System.Windows.Controls.RadioButton.GroupName">
			<summary> Gets or sets mutually exclusive <see cref="T:System.Windows.Controls.RadioButton"></see> groups. </summary>
			<returns>Returns a string that identifies a <see cref="T:System.Windows.Controls.RadioButton"></see> group. Default value is an empty string.</returns>
		</member>
		<member name="T:System.Windows.Controls.RichTextBox">
			<summary>Represents a rich editing control which operates on <see cref="T:System.Windows.Documents.FlowDocument"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:System.Windows.Controls.RichTextBox"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.#ctor(System.Windows.Documents.FlowDocument)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RichTextBox"></see> class, adding a specified <see cref="T:System.Windows.Documents.FlowDocument"></see> as the initial content.</summary>
			<param name="document">A <see cref="T:System.Windows.Documents.FlowDocument"></see> to be added as the initial contents of the new <see cref="T:System.Windows.Controls.RichTextBox"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.GetNextSpellingErrorPosition(System.Windows.Documents.TextPointer,System.Windows.Documents.LogicalDirection)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> that points to the next spelling error in the contents of the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> that points to the next spelling error in the contents of the <see cref="T:System.Windows.Controls.RichTextBox"></see>, or null if no next spelling error exists.</returns>
			<param name="direction">A <see cref="T:System.Windows.Documents.LogicalDirection"></see> in which to search for the next spelling error, starting at the specified posision.</param>
			<param name="position">A <see cref="T:System.Windows.Documents.TextPointer"></see> indicating a position from which to search for the next spelling error.</param>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> that points to the insertion point closest to the specified <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying the closest insertion position for the supplied point, or null if snapToText is false and the supplied <see cref="T:System.Windows.Point"></see> is not within any character's bounding box. Note that the <see cref="T:System.Windows.Documents.TextPointer"></see> returned is usually the position between two characters. Use the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection"></see> property of the returned <see cref="T:System.Windows.Documents.TextPointer"></see> to determine which of the two characters the <see cref="T:System.Windows.Documents.TextPointer"></see> corresponds to.</returns>
			<param name="point">A <see cref="T:System.Windows.Point"></see> object specifying the position to retrieve a <see cref="T:System.Windows.Documents.TextPointer"></see> for.</param>
			<param name="snapToText">If true, this method always returns a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying the closest insertion position for the <see cref="T:System.Windows.Point"></see> specified, regardless or whether or not the supplied <see cref="T:System.Windows.Point"></see> is inside a character's bounding box.If false, this method returns null if the specified <see cref="T:System.Windows.Point"></see> does not fall within any character bounding box.</param>
			<exception cref="T:System.InvalidOperationException">Raised if layout information for the <see cref="T:System.Windows.Controls.RichTextBox"></see> is not current.</exception>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.GetSpellingError(System.Windows.Documents.TextPointer)">
			<summary>Returns a <see cref="T:System.Windows.Controls.SpellingError"></see> object associated with any spelling error at a specified position in the contents of the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.SpellingError"></see> object containing the details of the spelling error found at the character indicated by position, or null if no spelling error exists at the specified character. </returns>
			<param name="position">A <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection"></see> property of this <see cref="T:System.Windows.Documents.TextPointer"></see> to specify the direction of the character to examine.</param>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.GetSpellingErrorRange(System.Windows.Documents.TextPointer)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextRange"></see> object covering any misspelled word at a specified position in the contents of the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextRange"></see> object covering any misspelled word that includes the character specified by position, or null if no spelling error exists at the specified character.</returns>
			<param name="position">A <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies a position and logical direction that resolves to a character to examine for a spelling error. Use the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection"></see> property of this <see cref="T:System.Windows.Documents.TextPointer"></see> to specify the direction of the character to examine.</param>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.MeasureOverride(System.Windows.Size)">
			<summary>Called to re-measure the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> structure indicating the new size of the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</returns>
			<param name="constraint">A <see cref="T:System.Windows.Size"></see> structure specifying constraints on the size of the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.RichTextBox"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.ShouldSerializeDocument">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Controls.RichTextBox.Document"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.RichTextBox"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.RichTextBox.Document"></see> property should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.RichTextBox.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.RichTextBox.CaretPosition">
			<summary>Gets or sets the position of the input caret.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> object specifying the position of the input caret.By default, the caret is at the first insertion position at the beginning of the content hosted by the <see cref="T:System.Windows.Controls.RichTextBox"></see>. See <see cref="T:System.Windows.Documents.TextPointer"></see> for more information on text position terminology like "insertion position".</returns>
			<exception cref="T:System.ArgumentNullException">Raised if an attempt is made to set this property to null.</exception>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set this property to a <see cref="T:System.Windows.Documents.TextPointer"></see> that references a position outside of the current document.</exception>
		</member>
		<member name="P:System.Windows.Controls.RichTextBox.Document">
			<summary>Gets or sets the <see cref="T:System.Windows.Documents.FlowDocument"></see> that represents the contents of the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.FlowDocument"></see> object that represents the contents of the <see cref="T:System.Windows.Controls.RichTextBox"></see>.By default, this property is set to an empty <see cref="T:System.Windows.Documents.FlowDocument"></see>.  Specifically, the empty <see cref="T:System.Windows.Documents.FlowDocument"></see> contains a single <see cref="T:System.Windows.Documents.Paragraph"></see>, which contains a single <see cref="T:System.Windows.Documents.Run"></see> which contains no text.</returns>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set this property to a <see cref="T:System.Windows.Documents.FlowDocument"></see> that represents the contents of another <see cref="T:System.Windows.Controls.RichTextBox"></see>.</exception>
			<exception cref="T:System.ArgumentNullException">Raised if an attempt is made to set this property to null.</exception>
			<exception cref="T:System.InvalidOperationException">Raised if this property is set while a change block has been activated.</exception>
		</member>
		<member name="P:System.Windows.Controls.RichTextBox.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of the RichTextBox.</summary>
			<returns>An enumerator for the logical children.</returns>
		</member>
		<member name="P:System.Windows.Controls.RichTextBox.Selection">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextSelection"></see> object containing the current selection in the <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextSelection"></see> object containing the current selection in the <see cref="T:System.Windows.Controls.RichTextBox"></see>.The default returned <see cref="T:System.Windows.Documents.TextSelection"></see> has an <see cref="P:System.Windows.Documents.TextRange.IsEmpty"></see> property value of True. An empty <see cref="T:System.Windows.Documents.TextSelection"></see> renders as a caret in the text area with no selection.</returns>
		</member>
		<member name="T:System.Windows.Controls.RowDefinition">
			<summary>Defines row-specific properties that apply to <see cref="T:System.Windows.Controls.Grid"></see> elements.</summary>
		</member>
		<member name="M:System.Windows.Controls.RowDefinition.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.RowDefinition"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.RowDefinition.HeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.Height"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.RowDefinition.Height"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.RowDefinition.MaxHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.RowDefinition.MaxHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.RowDefinition.MinHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.RowDefinition.MinHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.RowDefinition.MinHeight"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinition.ActualHeight">
			<summary>Gets a value that represents the calculated height of the <see cref="T:System.Windows.Controls.RowDefinition"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the calculated height in device independent pixels. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinition.Height">
			<summary>Gets the calculated height of a <see cref="T:System.Windows.Controls.RowDefinition"></see> element, or sets the <see cref="T:System.Windows.GridLength"></see> value of a row that is defined by the <see cref="T:System.Windows.Controls.RowDefinition"></see>. </summary>
			<returns>The <see cref="T:System.Windows.GridLength"></see> that represents the height of the row. The default value is 1.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinition.MaxHeight">
			<summary>Gets or sets a value that represents the maximum height of a <see cref="T:System.Windows.Controls.RowDefinition"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the maximum height. </returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinition.MinHeight">
			<summary>Gets or sets a value that represents the minimum allowable height of a <see cref="T:System.Windows.Controls.RowDefinition"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the minimum allowable height. The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinition.Offset">
			<summary>Gets a value that represents the offset value of this <see cref="T:System.Windows.Controls.RowDefinition"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the offset of the row. The default value is 0.0.</returns>
		</member>
		<member name="T:System.Windows.Controls.RowDefinitionCollection">
			<summary>Provides access to an ordered, strongly typed collection of <see cref="T:System.Windows.Controls.RowDefinition"></see> objects. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.Add(System.Windows.Controls.RowDefinition)">
			<summary>Adds a <see cref="T:System.Windows.Controls.RowDefinition"></see> element to a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</summary>
			<param name="value">Identifies the <see cref="T:System.Windows.Controls.RowDefinition"></see> to add to the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.Contains(System.Windows.Controls.RowDefinition)">
			<summary>Determines whether a given <see cref="T:System.Windows.Controls.RowDefinition"></see> exists within a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.RowDefinition"></see> exists within the collection; otherwise false.</returns>
			<param name="value">Identifies the <see cref="T:System.Windows.Controls.RowDefinition"></see> that is being tested.</param>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.CopyTo(System.Windows.Controls.RowDefinition[],System.Int32)">
			<summary>Copies an array of <see cref="T:System.Windows.Controls.RowDefinition"></see> objects to a given index position within a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</summary>
			<param name="array">An array of <see cref="T:System.Windows.Controls.RowDefinition"></see> objects.</param>
			<param name="index">Identifies the index position within array to which the <see cref="T:System.Windows.Controls.RowDefinition"></see> objects are copied.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is less than zero. </exception>
			<exception cref="T:System.ArgumentException">array is multidimensional.-or- index is equal to or greater than the length of array.-or- The number of elements in the source <see cref="T:System.Collections.ICollection"></see> is greater than the available space from index to the end of the destination array. </exception>
			<exception cref="T:System.ArgumentNullException">array is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.IndexOf(System.Windows.Controls.RowDefinition)">
			<summary>Returns the index position of a given <see cref="T:System.Windows.Controls.RowDefinition"></see> within a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</summary>
			<returns>The index of value if found in the collection; otherwise, -1.</returns>
			<param name="value">The <see cref="T:System.Windows.Controls.RowDefinition"></see> whose index position is desired.</param>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.Insert(System.Int32,System.Windows.Controls.RowDefinition)">
			<summary>Inserts a <see cref="T:System.Windows.Controls.RowDefinition"></see> at the specified index position within a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>. </summary>
			<param name="value">The <see cref="T:System.Windows.Controls.RowDefinition"></see> to insert.</param>
			<param name="index">The position within the collection where the item is inserted.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index in the <see cref="T:System.Collections.IList"></see>. </exception>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.Remove(System.Windows.Controls.RowDefinition)">
			<summary>Removes a <see cref="T:System.Windows.Controls.RowDefinition"></see> from a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.RowDefinition"></see> was found in the collection and removed; otherwise, false.</returns>
			<param name="value">The <see cref="T:System.Windows.Controls.RowDefinition"></see> to remove from the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveAt(System.Int32)">
			<summary>Removes a <see cref="T:System.Windows.Controls.RowDefinition"></see> from a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> at the specified index position.</summary>
			<param name="index">The position within the collection at which the <see cref="T:System.Windows.Controls.RowDefinition"></see> is removed.</param>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.RemoveRange(System.Int32,System.Int32)">
			<summary>Removes a range of <see cref="T:System.Windows.Controls.RowDefinition"></see> objects from a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>. </summary>
			<param name="count">The total number of <see cref="T:System.Windows.Controls.RowDefinition"></see> objects to remove from the collection.</param>
			<param name="index">The position within the collection at which the first <see cref="T:System.Windows.Controls.RowDefinition"></see> is removed.</param>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.RowDefinitionCollection.Count">
			<summary>Gets the total number of items within this instance of <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</summary>
			<returns>The total number of items in the collection. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinitionCollection.IsReadOnly">
			<summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> is read-only. </summary>
			<returns>true if the collection is read-only; otherwise false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinitionCollection.IsSynchronized">
			<summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> is synchronized (thread-safe).</summary>
			<returns>true if access to this collection is synchronized; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinitionCollection.Item(System.Int32)">
			<summary>Gets a value that indicates the current item within a <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>. </summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The current item in the collection.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index position in the collection.</exception>
		</member>
		<member name="P:System.Windows.Controls.RowDefinitionCollection.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</summary>
			<returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.IsFixedSize">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> has a fixed size.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.RowDefinitionCollection"></see> has a fixed size; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.RowDefinitionCollection.System.Collections.IList.Item(System.Int32)">
			<summary>Gets or sets the element at the specified index.</summary>
			<returns>The element at the specified index.</returns>
			<param name="index">The zero-based index of the element to get or set.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is not a valid index position in the list.</exception>
		</member>
		<member name="T:System.Windows.Controls.ScrollBarVisibility">
			<summary>Specifies the visibility of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> for scrollable content.</summary>
		</member>
		<member name="F:System.Windows.Controls.ScrollBarVisibility.Auto">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> appears and the dimension of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> is applied to the content when the viewport cannot display all of the content. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"></see> of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"></see> of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.ScrollBarVisibility.Disabled">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> does not appear even when the viewport cannot display all of the content. The dimension of the content is set to the corresponding dimension of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> parent. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"></see> of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"></see> of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.ScrollBarVisibility.Hidden">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> does not appear even when the viewport cannot display all of the content. The dimension of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> is not applied to the content.</summary>
		</member>
		<member name="F:System.Windows.Controls.ScrollBarVisibility.Visible">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> always appears. The dimension of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> is applied to the content. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, the width of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"></see> of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, the height of the content is set to the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"></see> of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
		</member>
		<member name="T:System.Windows.Controls.ScrollChangedEventArgs">
			<summary>Describes a change in the scrolling state and contains the required arguments for a <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged"></see> event. </summary>
		</member>
		<member name="M:System.Windows.Controls.ScrollChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Performs proper type casting before invoking the type-safe <see cref="T:System.Windows.Controls.ScrollChangedEventHandler"></see> delegate </summary>
			<param name="genericTarget">The target upon which the genericHandler is invoked.</param>
			<param name="genericHandler">The event handler to invoke, in this case the <see cref="T:System.Windows.Controls.ScrollChangedEventHandler"></see> delegate.</param>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeight">
			<summary>Gets the updated height of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the updated extent height.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentHeightChange">
			<summary>Gets a value that indicates the change in height of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the change in extent height.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidth">
			<summary>Gets the updated width of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the updated extent width.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ExtentWidthChange">
			<summary>Gets a value that indicates the change in width of the <see cref="T:System.Windows.Controls.ScrollViewer"></see>extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the change in extent width.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalChange">
			<summary>Gets a value that indicates the change in horizontal offset for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the change in horizontal offset for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.HorizontalOffset">
			<summary>Gets the updated horizontal offset value for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the updated value of the horizontal offset for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalChange">
			<summary>Gets a value that indicates the change in vertical offset of a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the change in vertical offset of a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.VerticalOffset">
			<summary>Gets the updated value of the vertical offset for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the updated vertical offset of a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeight">
			<summary>Gets the updated value of the viewport height for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the updated viewport height of a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportHeightChange">
			<summary>Gets a value that indicates the change in value of the viewport height for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the change in vertical viewport height for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidth">
			<summary>Gets the updated value of the viewport width for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the updated value of the viewport width for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollChangedEventArgs.ViewportWidthChange">
			<summary>Gets a value that indicates the change in viewport width of a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the change in viewport width for a <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.ScrollChangedEventHandler">
			<summary>Represents the method that is used to handle the <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged"></see> event. </summary>
		</member>
		<member name="T:System.Windows.Controls.ScrollContentPresenter">
			<summary>Displays the content of a <see cref="T:System.Windows.Controls.ScrollViewer"></see> control. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Controls.ScrollContentPresenter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ScrollContentPresenter"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.ScrollContentPresenter.CanContentScrollProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ScrollContentPresenter.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
			<summary>Forces content to scroll until the coordinate space of a <see cref="T:System.Windows.Media.Visual"></see> object is visible. </summary>
			<returns>A <see cref="T:System.Windows.Rect"></see> that represents the visible region.</returns>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> that becomes visible.</param>
			<param name="rectangle">The bounding rectangle that identifies the coordinate space to make visible.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollContentPresenter.OnApplyTemplate">
			<summary>Invoked when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see>, which is used to build the visual tree of the current template.</summary>
		</member>
		<member name="M:System.Windows.Controls.ScrollContentPresenter.SetHorizontalOffset(System.Double)">
			<summary>Sets the amount of horizontal offset.</summary>
			<param name="offset">The degree to which content is horizontally offset from the containing viewport.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollContentPresenter.SetVerticalOffset(System.Double)">
			<summary>Sets the amount of vertical offset.</summary>
			<param name="offset">The degree to which content is vertically offset from the containing viewport.</param>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.AdornerLayer">
			<summary>Gets the <see cref="T:System.Windows.Documents.AdornerLayer"></see> on which adorners are rendered.</summary>
			<returns>An <see cref="T:System.Windows.Documents.AdornerLayer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.CanContentScroll">
			<summary>Indicates whether the content, if it supports <see cref="T:System.Windows.Controls.Primitives.IScrollInfo"></see>, should be allowed to control scrolling</summary>
			<returns>true if the content is allowed to scroll; otherwise, false. A false value indicates that the <see cref="T:System.Windows.Controls.ScrollContentPresenter"></see> acts as the scrolling client. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.CanHorizontallyScroll">
			<summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
			<returns>true if scrolling is possible; otherwise, false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.CanVerticallyScroll">
			<summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible.</summary>
			<returns>true if scrolling is possible; otherwise, false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight">
			<summary>Gets the vertical size of the extent.</summary>
			<returns>The vertical size of the extent. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.ExtentWidth">
			<summary>Gets the horizontal size of the extent.</summary>
			<returns>The horizontal size of the extent. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.HorizontalOffset">
			<summary>Gets the horizontal offset of the scrolled content.</summary>
			<returns>The horizontal offset. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.ScrollOwner">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer"></see> element that controls scrolling behavior.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ScrollViewer"></see> element that controls scrolling behavior. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.VerticalOffset">
			<summary>Gets the vertical offset of the scrolled content.</summary>
			<returns>The vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.ScrollContentPresenter.ExtentHeight"></see> minus the <see cref="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportHeight">
			<summary>Gets the vertical size of the viewport for this content.</summary>
			<returns>The vertical size of the viewport for this content. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollContentPresenter.ViewportWidth">
			<summary>Gets the horizontal size of the viewport for this content.</summary>
			<returns>The vertical size of the viewport for this content. This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.ScrollViewer">
			<summary>Represents a scrollable area that can contain other visible elements. </summary>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.ScrollViewer.ScrollChanged">
			<summary>Occurs when changes are detected to the scroll position, extent, or viewport size.</summary>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.CanContentScrollProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ExtentHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ExtentWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ExtentWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.HorizontalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ScrollableHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ScrollableWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ScrollChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.ScrollViewer.ScrollChanged"></see> routed event. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ScrollableWidth"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.VerticalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ViewportHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ScrollViewer.ViewportWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ScrollViewer.ViewportWidth"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.GetCanContentScroll(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll"></see> dependency property from a given element.</summary>
			<returns>true if this element can scroll; otherwise, false.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.GetHorizontalScrollBarVisibility(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"></see> dependency property from a given element.</summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"></see> dependency property.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.GetVerticalScrollBarVisibility(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"></see> dependency property from a given element.</summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"></see>  dependency property.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.HitTestCore(System.Windows.Media.PointHitTestParameters)">
			<summary>Performs a hit test to determine whether the specified points are within the bounds of this <see cref="T:System.Windows.Controls.ScrollViewer"></see>.</summary>
			<returns>The result of the hit test.</returns>
			<param name="hitTestParameters">The parameters for hit testing within a visual object.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.MeasureOverride(System.Windows.Size)">
			<summary>Measures the content of a <see cref="T:System.Windows.Controls.ScrollViewer"></see> element.</summary>
			<returns>The computed desired limit <see cref="T:System.Windows.Size"></see> of the <see cref="T:System.Windows.Controls.ScrollViewer"></see> element.</returns>
			<param name="constraint">The upper limit <see cref="T:System.Windows.Size"></see> that should not be exceeded.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.OnApplyTemplate">
			<summary>Called when an internal process or application calls <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"></see>, which is used to build the current template's visual tree.</summary>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.OnCreateAutomationPeer">
			<summary>Provides an appropriate <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementation for this control, as part of the Windows Presentation Foundation (WPF) automation infrastructure.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to specific keyboard input and invokes associated scrolling behavior.</summary>
			<param name="e">Required arguments for this event.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Responds to a click of the left mouse wheel button. </summary>
			<param name="e">Required arguments that describe this event.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
			<summary>Responds to a click of the mouse wheel.</summary>
			<param name="e">Required arguments that describe this event.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.OnScrollChanged(System.Windows.Controls.ScrollChangedEventArgs)">
			<summary>Called when a change in scrolling state is detected, such as a change in scroll position, extent, or viewport size.</summary>
			<param name="e">The <see cref="T:System.Windows.Controls.ScrollChangedEventArgs"></see> that contain information about the change in the scrolling state.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.ScrollToHorizontalOffset(System.Double)">
			<summary>Scrolls the content within the <see cref="T:System.Windows.Controls.ScrollViewer"></see> to the specified horizontal offset position.</summary>
			<param name="offset">The position that the content scrolls to.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.ScrollToVerticalOffset(System.Double)">
			<summary>Scrolls the content within the <see cref="T:System.Windows.Controls.ScrollViewer"></see> to the specified vertical offset position.</summary>
			<param name="offset">The position that the content scrolls to.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.SetCanContentScroll(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.CanContentScroll"></see> dependency property to a given element.</summary>
			<param name="canContentScroll">The property value to set.</param>
			<param name="element">The element on which to set the property value.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.SetHorizontalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility"></see> dependency property to a given element.</summary>
			<param name="horizontalScrollBarVisibility">The property value to set.</param>
			<param name="element">The element on which to set the property value.</param>
		</member>
		<member name="M:System.Windows.Controls.ScrollViewer.SetVerticalScrollBarVisibility(System.Windows.DependencyObject,System.Windows.Controls.ScrollBarVisibility)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility"></see> dependency property to a given element.</summary>
			<param name="verticalScrollBarVisibility">The property value to set.</param>
			<param name="element">The element on which to set the property value.</param>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.CanContentScroll">
			<summary>Gets or sets a value that indicates whether elements that support the <see cref="T:System.Windows.Controls.Primitives.IScrollInfo"></see> interface are allowed to scroll. </summary>
			<returns>true if content can scroll; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ComputedHorizontalScrollBarVisibility">
			<summary>Gets a value that indicates whether the horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> is visible.</summary>
			<returns>A <see cref="T:System.Windows.Visibility"></see> that indicates whether the horizontal scroll bar is visible. <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ComputedVerticalScrollBarVisibility">
			<summary>Gets a value that indicates whether the vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> is visible.</summary>
			<returns>A <see cref="T:System.Windows.Visibility"></see> that indicates whether the vertical scroll bar is visible. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ExtentHeight">
			<summary>Gets a value that contains the vertical size of the extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical size of the extent. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ExtentWidth">
			<summary>Gets a value that contains the horizontal size of the extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the horizontal size of the extent. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.HandlesScrolling">
			<summary>Gets a value that indicates that a control has a <see cref="T:System.Windows.Controls.ScrollViewer"></see> defined in its style that defines custom keyboard scrolling behavior.</summary>
			<returns>true if this control defines custom keyboard scrolling behavior; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.HorizontalOffset">
			<summary>Gets a value that contains the horizontal offset of the scrolled content.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the horizontal offset of the scrolled content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.HorizontalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> should be displayed.</summary>
			<returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility"></see> value that indicates whether a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Hidden"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ScrollableHeight">
			<summary>Gets a value that represents the vertical size of the content element that can be scrolled.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical size of the content element that can be scrolled. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ScrollableWidth">
			<summary>Gets a value that represents the horizontal size of the content element that can be scrolled.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the horizontal size of the content element that can be scrolled. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ScrollInfo">
			<summary>Gets or sets the element that implements the <see cref="T:System.Windows.Controls.Primitives.IScrollInfo"></see> interface and provides values for scrolling properties of this <see cref="T:System.Windows.Controls.ScrollViewer"></see>. </summary>
			<returns>The element that controls scrolling properties, such as extent, offset, or viewport size. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.VerticalOffset">
			<summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical offset of the scrolled content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.VerticalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> should be displayed.</summary>
			<returns>A <see cref="T:System.Windows.Controls.ScrollBarVisibility"></see> value that indicates whether a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> should be displayed. The default value is <see cref="F:System.Windows.Controls.ScrollBarVisibility.Visible"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ViewportHeight">
			<summary>Gets a value that contains the vertical size of the content's viewport.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical size of the content's viewport. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.ScrollViewer.ViewportWidth">
			<summary>Gets a value that contains the horizontal size of the content's viewport.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical size of the content's viewport. The default value is 0.0.</returns>
		</member>
		<member name="T:System.Windows.Controls.SelectionChangedEventArgs">
			<summary> Provides data for the SelectionChanged event. </summary>
		</member>
		<member name="M:System.Windows.Controls.SelectionChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Collections.IList,System.Collections.IList)">
			<summary> Initializes a new instance of a SelectionChangedEventArgs class. </summary>
			<param name="addedItems">The items that were selected during this event.</param>
			<param name="removedItems">The items that were unselected during this event.</param>
			<param name="id">The event identifier (ID).</param>
		</member>
		<member name="M:System.Windows.Controls.SelectionChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary> Performs the proper type casting to call the type-safe SelectionChangedEventHandler delegate for the SelectionChanged event. </summary>
			<param name="genericTarget">The current object along the event's route.</param>
			<param name="genericHandler">The handler to invoke.</param>
		</member>
		<member name="P:System.Windows.Controls.SelectionChangedEventArgs.AddedItems">
			<summary> Gets a list that contains the items that were selected during this event. </summary>
			<returns>List of selected items. Default value is zero(0).</returns>
		</member>
		<member name="P:System.Windows.Controls.SelectionChangedEventArgs.RemovedItems">
			<summary> Gets a list that contains the items that were unselected during this event. </summary>
			<returns>List of unselected items. Default value is zero(0).</returns>
		</member>
		<member name="T:System.Windows.Controls.SelectionChangedEventHandler">
			<summary> Represents the methods that handle the SelectionChanged event. </summary>
		</member>
		<member name="T:System.Windows.Controls.SelectionMode">
			<summary> Defines the selection behavior for a <see cref="T:System.Windows.Controls.ListBox"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.SelectionMode.Extended">
			<summary>The user can select multiple consecutive items while holding down the SHIFT key. </summary>
		</member>
		<member name="F:System.Windows.Controls.SelectionMode.Multiple">
			<summary>The user can select multiple items without holding down a modifier key.</summary>
		</member>
		<member name="F:System.Windows.Controls.SelectionMode.Single">
			<summary>The user can select only one item at a time. </summary>
		</member>
		<member name="T:System.Windows.Controls.Separator">
			<summary> Control that is used to separate items in items controls. </summary>
		</member>
		<member name="M:System.Windows.Controls.Separator.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Controls.Separator"></see> class. </summary>
		</member>
		<member name="T:System.Windows.Controls.Slider">
			<summary>Represents a control that lets the user select from a range of values by moving a <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> control along a <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Slider"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.AutoToolTipPlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.AutoToolTipPlacement"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.AutoToolTipPrecisionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.DelayProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Delay"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.IntervalProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Interval"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.IsDirectionReversedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.IsMoveToPointEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsMoveToPointEnabled"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.IsSelectionRangeEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.IsSnapToTickEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsSnapToTickEnabled"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.OrientationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Orientation"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.SelectionEndProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.SelectionEnd"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.SelectionStartProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.SelectionStart"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.TickFrequencyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.TickFrequency"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.TickPlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.TickPlacement"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Slider.TicksProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.Ticks"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.Slider"></see> and determines its <see cref="T:System.Windows.Size"></see>.</summary>
			<returns>The computed <see cref="T:System.Windows.Size"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</returns>
			<param name="finalSize">The computed <see cref="T:System.Windows.Size"></see> that is used to arrange the control.</param>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnApplyTemplate">
			<summary>Builds the visual tree for the <see cref="T:System.Windows.Controls.Slider"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnCreateAutomationPeer">
			<summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.SliderAutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Slider"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnDecreaseLarge">
			<summary>Responds to the <see cref="P:System.Windows.Controls.Slider.DecreaseLarge"></see> command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnDecreaseSmall">
			<summary>Responds to a <see cref="P:System.Windows.Controls.Slider.DecreaseSmall"></see> command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnIncreaseLarge">
			<summary>Responds to an <see cref="P:System.Windows.Controls.Slider.IncreaseLarge"></see> command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnIncreaseSmall">
			<summary>Responds to an <see cref="P:System.Windows.Controls.Slider.IncreaseSmall"></see> command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnMaximizeValue">
			<summary>Responds to the <see cref="P:System.Windows.Controls.Slider.MaximizeValue"></see> command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnMaximumChanged(System.Double,System.Double)">
			<summary>Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> property.</summary>
			<param name="newMaximum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> property.</param>
			<param name="oldMaximum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnMinimizeValue">
			<summary>Responds to a <see cref="P:System.Windows.Controls.Slider.MinimizeValue"></see> command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnMinimumChanged(System.Double,System.Double)">
			<summary>Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> property.</summary>
			<param name="oldMinimum">The old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> property.</param>
			<param name="newMinimum">The new value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnThumbDragCompleted(System.Windows.Controls.Primitives.DragCompletedEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"></see> event that occurs when the user stops dragging the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnThumbDragDelta(System.Windows.Controls.Primitives.DragDeltaEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event that occurs when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnThumbDragStarted(System.Windows.Controls.Primitives.DragStartedEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"></see> event that occurs when the user starts to drag the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Slider.OnValueChanged(System.Double,System.Double)">
			<summary>Updates the current position of the <see cref="T:System.Windows.Controls.Slider"></see> when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property changes.</summary>
			<param name="oldValue">The old <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</param>
			<param name="newValue">The new <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</param>
		</member>
		<member name="P:System.Windows.Controls.Slider.AutoToolTipPlacement">
			<summary>Gets or sets whether a tooltip that contains the current value of the <see cref="T:System.Windows.Controls.Slider"></see> displays when the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> is pressed. If a tooltip is displayed, this property also specifies the placement of the tooltip.</summary>
			<returns>An <see cref="T:System.Windows.Controls.Primitives.AutoToolTipPlacement"></see> enumeration value that determines where to display the tooltip with respect to the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>, or that specifies to not show a tooltip. The default value is <see cref="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None"></see>, which specifies that a tooltip is not displayed.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.AutoToolTipPrecision">
			<summary>Gets or sets the number of digits that are displayed to the right side of the decimal point for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the <see cref="T:System.Windows.Controls.Slider"></see> in a tooltip.</summary>
			<returns>The precision of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> that displays in the tooltip, specified as the number of digits that appear to the right of the decimal point. The default is zero (0).</returns>
			<exception cref="T:System.ArgumentException"><see cref="P:System.Windows.Controls.Slider.AutoToolTipPrecision"></see> is set to a value other than a non-negative integer.</exception>
		</member>
		<member name="P:System.Windows.Controls.Slider.DecreaseLarge">
			<summary>Gets a command that decreases the value of the <see cref="T:System.Windows.Controls.Slider"></see> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"></see> property.</summary>
			<returns>The <see cref="T:System.Windows.Input.RoutedCommand"></see> to use. The default value is <see cref="F:System.Windows.Input.Key.PageDown"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see> and null for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.DecreaseSmall">
			<summary>Gets a command that decreases the value of the <see cref="T:System.Windows.Controls.Slider"></see> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"></see> property.</summary>
			<returns>The <see cref="T:System.Windows.Input.RoutedCommand"></see> to use. The default value is <see cref="F:System.Windows.Input.Key.Down"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see> and <see cref="F:System.Windows.Input.Key.Left"></see> for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>. If the <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed"></see> property is set to true, the default value is <see cref="F:System.Windows.Input.Key.Up"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see> and <see cref="F:System.Windows.Input.Key.Right"></see> for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.Delay">
			<summary>Gets or sets the amount of time in milliseconds that a <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> waits, while it is pressed, before a command to move the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> executes, such as a <see cref="P:System.Windows.Controls.Slider.DecreaseLarge"></see> command.</summary>
			<returns>A time delay in milliseconds. The default value is the system key press delay. For more information, see SystemParametersInfohttp://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/systemparametersinfo.asp (SPI_GETKEYBOARDDELAY).</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.IncreaseLarge">
			<summary>Gets a command that increases the value of the <see cref="F:System.Windows.Controls.Slider.SelectionStartProperty"></see> by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"></see> property.</summary>
			<returns>The <see cref="T:System.Windows.Input.RoutedCommand"></see> to use. The default value is <see cref="F:System.Windows.Input.Key.PageUp"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see>. If the <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed"></see> property is set to true, the default value is <see cref="F:System.Windows.Input.Key.PageDown"></see>. The default value is null for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>. </returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.IncreaseSmall">
			<summary>Gets a command that increases the value of the slider by the same amount as the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"></see> property.</summary>
			<returns>Returns the <see cref="T:System.Windows.Input.RoutedCommand"></see> to use. The default value is <see cref="F:System.Windows.Input.Key.Up"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see> and <see cref="F:System.Windows.Input.Key.Right"></see> for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>. If the <see cref="P:System.Windows.Controls.Slider.IsDirectionReversed"></see> property is set to true, the default value is <see cref="F:System.Windows.Input.Key.Down"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see> and <see cref="F:System.Windows.Input.Key.Left"></see> for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.Interval">
			<summary>Gets or sets the amount of time in milliseconds between increase or decrease commands when a user clicks the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> of a <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>A time in milliseconds between commands that change the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of a <see cref="T:System.Windows.Controls.Slider"></see>. The default value is the system key repeat rate. For more information, see SystemParametersInfohttp://msdn.microsoft.com/library/default.asp?url=/library/en-us/sysinfo/base/systemparametersinfo.asp (SPI_GETKEYBOARDSPEED).</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.IsDirectionReversed">
			<summary>Gets or sets the direction of increasing value.</summary>
			<returns>true if the direction of increasing value is to the left for a horizontal slider or down for a vertical slider; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.IsMoveToPointEnabled">
			<summary>Gets or sets a value that indicates  whether the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> of a <see cref="T:System.Windows.Controls.Slider"></see> moves immediately to the location of the mouse click that occurs while the mouse pointer pauses on the <see cref="T:System.Windows.Controls.Slider"></see> track. </summary>
			<returns>true if the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> moves immediately to the location of a mouse click; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Slider"></see> displays a selection range along the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>true if a selection range is displayed; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.IsSnapToTickEnabled">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Slider"></see> automatically moves the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> to the closest tick mark.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Slider"></see> requires the position of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> to be a tick mark; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.MaximizeValue">
			<summary>Gets a command that sets the <see cref="T:System.Windows.Controls.Slider"></see> <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> value.</summary>
			<returns>The <see cref="T:System.Windows.Input.RoutedCommand"></see> to use. The default value is <see cref="F:System.Windows.Input.Key.End"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.MinimizeValue">
			<summary>Gets a command that sets the <see cref="T:System.Windows.Controls.Slider"></see> <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> value.</summary>
			<returns>The <see cref="T:System.Windows.Input.RoutedCommand"></see> to use. The default value is <see cref="F:System.Windows.Input.Key.Home"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.Orientation">
			<summary>Gets or sets the orientation of a <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>An <see cref="P:System.Windows.Controls.Slider.Orientation"></see> enumeration value. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.SelectionEnd">
			<summary>Gets or sets the largest value of a specified selection for a <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>The largest value of a selected range of values of a <see cref="T:System.Windows.Controls.Slider"></see>. The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.SelectionStart">
			<summary>Gets or sets the smallest value of a specified selection for a <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>The largest value of a selected range of values of a <see cref="T:System.Windows.Controls.Slider"></see>. The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.TickFrequency">
			<summary>Gets or sets the interval between tick marks.</summary>
			<returns>The distance between tick marks. The default value is (1.0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.TickPlacement">
			<summary>Gets or sets the position of tick marks with respect to the <see cref="T:System.Windows.Controls.Primitives.Track"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>A <see cref="P:System.Windows.Controls.Slider.TickPlacement"></see> value that defines how to position the tick marks in a <see cref="T:System.Windows.Controls.Slider"></see> with respect to the slider bar. The default value is <see cref="F:System.Windows.Controls.Primitives.TickPlacement.None"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Slider.Ticks">
			<summary>Gets or sets the positions of the tick marks to display for a <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
			<returns>A set of tick marks to display for a <see cref="T:System.Windows.Controls.Slider"></see>. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.SoundPlayerAction">
			<summary>Represents a light weight audio playback <see cref="T:System.Windows.TriggerAction"></see> used to play .wav files.</summary>
		</member>
		<member name="M:System.Windows.Controls.SoundPlayerAction.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.SoundPlayerAction"></see> class.</summary>
		</member>
		<member name="P:System.Windows.Controls.SoundPlayerAction.Source">
			<summary>Gets or sets the audio source location.</summary>
			<returns>The audio source location.</returns>
		</member>
		<member name="T:System.Windows.Controls.SpellCheck">
			<summary>Provides real-time spell checking functionality to text editing controls, including <see cref="T:System.Windows.Controls.TextBox"></see> and <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.SpellCheck.IsEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.SpellCheck.IsEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.SpellCheck.SpellingReformProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.SpellCheck.SetIsEnabled(System.Windows.Controls.Primitives.TextBoxBase,System.Boolean)">
			<summary>Enables or disables spellchecking on the specified text editing control (i.e. <see cref="T:System.Windows.Controls.TextBox"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>).</summary>
			<param name="value">Boolean value that specifies whether spellchecking is enabled on the text editing control.</param>
			<param name="textBoxBase">The text editing control (i.e. <see cref="T:System.Windows.Controls.TextBox"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>) to enable or disable spellchecking on.</param>
		</member>
		<member name="M:System.Windows.Controls.SpellCheck.SetSpellingReform(System.Windows.Controls.Primitives.TextBoxBase,System.Windows.Controls.SpellingReform)">
			<summary>Determines the spelling reform rules used by the spellchecker. </summary>
			<param name="value">The <see cref="P:System.Windows.Controls.SpellCheck.SpellingReform"></see> value that determines the spelling reform rules.</param>
			<param name="textBoxBase">The text editing control (i.e. <see cref="T:System.Windows.Controls.TextBox"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>) the spellchecker is applied to.</param>
		</member>
		<member name="P:System.Windows.Controls.SpellCheck.IsEnabled">
			<summary>Gets or sets a value determining whether spell checking is enabled on this text editing control (i.e. <see cref="T:System.Windows.Controls.TextBox"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>).</summary>
			<returns>true if the spell checker is enabled on the control; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.SpellCheck.SpellingReform">
			<summary>Gets or sets the spelling reform rules used by the spellchecker.</summary>
			<returns>The spelling reform rules used by the spellchecker. The default value is <see cref="F:System.Windows.Controls.SpellingReform.PreAndPostreform"></see> for French and <see cref="F:System.Windows.Controls.SpellingReform.Postreform"></see> for German.</returns>
		</member>
		<member name="T:System.Windows.Controls.SpellingError">
			<summary>Represents a misspelled word in an editing control (i.e. <see cref="T:System.Windows.Controls.TextBox"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>).</summary>
		</member>
		<member name="M:System.Windows.Controls.SpellingError.Correct(System.String)">
			<summary>Replaces the spelling error text with the specified correction.</summary>
			<param name="correctedText">The text used to replace the misspelled text.</param>
		</member>
		<member name="M:System.Windows.Controls.SpellingError.IgnoreAll">
			<summary>Instructs the control to ignore this error and any duplicates for the remainder of the lifetime of the control.</summary>
		</member>
		<member name="P:System.Windows.Controls.SpellingError.Suggestions">
			<summary>Gets a list of suggested spelling replacements for the misspelled word.</summary>
			<returns>The collection of spelling suggestions for the misspelled word.</returns>
		</member>
		<member name="T:System.Windows.Controls.SpellingReform">
			<summary>Specifies the spelling reform rules used by the spellchecker of the text editing control (i.e. <see cref="T:System.Windows.Controls.TextBox"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>).</summary>
		</member>
		<member name="F:System.Windows.Controls.SpellingReform.Postreform">
			<summary>Use spelling rules from after the spelling reform.</summary>
		</member>
		<member name="F:System.Windows.Controls.SpellingReform.PreAndPostreform">
			<summary>Use spelling rules from both before and after the spelling reform.</summary>
		</member>
		<member name="F:System.Windows.Controls.SpellingReform.Prereform">
			<summary>Use spelling rules from before the spelling reform.</summary>
		</member>
		<member name="T:System.Windows.Controls.StackPanel">
			<summary>Arranges child elements into a single line that can be oriented horizontally or vertically. </summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Panel"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.StackPanel.OrientationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StackPanel.Orientation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StackPanel.Orientation"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.StackPanel"></see> element.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.StackPanel"></see> element and its children.</returns>
			<param name="arrangeSize">The <see cref="T:System.Windows.Size"></see> that this element should use to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.LineDown">
			<summary>Scrolls content downward by one logical unit.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.LineLeft">
			<summary>Scrolls content by one logical unit to the left.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.LineRight">
			<summary>Scrolls content by one logical unit to the right.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.LineUp">
			<summary>Scrolls content by one logical unit upward.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
			<summary>Scrolls to the specified coordinates and makes that portion of a <see cref="T:System.Windows.Media.Visual"></see> visible. </summary>
			<returns>A <see cref="T:System.Windows.Rect"></see> in the coordinate space that is made visible.</returns>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> that becomes visible.</param>
			<param name="rectangle">The <see cref="T:System.Windows.Rect"></see> that represents coordinate space within a visual.</param>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)">
			<summary>Measures the children of a <see cref="T:System.Windows.Controls.StackPanel"></see> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the desired size of the element.</returns>
			<param name="constraint">An upper limit <see cref="T:System.Windows.Size"></see> that should not be exceeded.</param>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.MouseWheelDown">
			<summary>Scrolls content logically downward in response to a click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.MouseWheelLeft">
			<summary>Scrolls content logically to the left in response to a click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.MouseWheelRight">
			<summary>Scrolls content logically to the right in response to a click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.MouseWheelUp">
			<summary>Scrolls content logically upward in response to a click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.PageDown">
			<summary>Scrolls content logically downward by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.PageLeft">
			<summary>Scrolls content logically to the left by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.PageRight">
			<summary>Scrolls content logically to the right by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.PageUp">
			<summary>Scrolls content logically upward by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset"></see> property.</summary>
			<param name="offset">The value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset"></see> property.</summary>
			<param name="offset">The value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset"></see> property.</param>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll">
			<summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.StackPanel"></see> can scroll in the horizontal dimension. </summary>
			<returns>true if content can scroll in the horizontal dimension; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.CanVerticallyScroll">
			<summary>Gets or sets a value that indicates whether content can scroll in the vertical dimension. </summary>
			<returns>true if content can scroll in the vertical dimension; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.ExtentHeight">
			<summary>Gets a value that contains the vertical size of the extent.</summary>
			<returns>The <see cref="T:System.Double"></see> that represents the vertical size of the extent. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.ExtentWidth">
			<summary>Gets a value that contains the horizontal size of the extent.</summary>
			<returns><see cref="T:System.Double"></see> that represents the horizontal size of the extent. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.HasLogicalOrientation">
			<summary>Gets a value that indicates if this <see cref="T:System.Windows.Controls.StackPanel"></see> has vertical or horizontal orientation.</summary>
			<returns>This property always returns true.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.HorizontalOffset">
			<summary>Gets a value that contains the horizontal offset of the scrolled content.</summary>
			<returns>The <see cref="T:System.Double"></see> that represents the horizontal offset of the scrolled content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.LogicalOrientation">
			<summary>Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation"></see> of the <see cref="T:System.Windows.Controls.StackPanel"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Controls.Orientation"></see> value.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.Orientation">
			<summary>Gets or sets a value that indicates the dimension by which child elements are stacked. </summary>
			<returns>The <see cref="T:System.Windows.Controls.Orientation"></see> of child content.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.ScrollOwner">
			<summary>Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.StackPanel"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ScrollViewer"></see> that owns scrolling for this <see cref="T:System.Windows.Controls.StackPanel"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.VerticalOffset">
			<summary>Gets a value that contains the vertical offset of the scrolled content.</summary>
			<returns>The <see cref="T:System.Double"></see> that represents the vertical offset of the scrolled content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.ViewportHeight">
			<summary>Gets a value that contains the vertical size of the content's viewport.</summary>
			<returns>The <see cref="T:System.Double"></see> that represents the vertical size of the content's viewport. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.StackPanel.ViewportWidth">
			<summary>Gets a value that contains the horizontal size of the content's viewport.</summary>
			<returns>The <see cref="T:System.Double"></see> that represents the vertical size of the content's viewport. The default value is 0.0.</returns>
		</member>
		<member name="T:System.Windows.Controls.StickyNoteControl">
			<summary>Represents a control that lets users attach typed text or handwritten annotations to documents. This class cannot be inherited. </summary>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.AuthorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.Author"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StickyNoteControl.Author"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontFamilyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.CaptionFontWeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.DeleteNoteCommand">
			<summary>Represents a command whose <see cref="M:System.Windows.Input.RoutedCommand.Execute(System.Object,System.Windows.IInputElement)"></see> method deletes a <see cref="T:System.Windows.Controls.StickyNoteControl"></see>. </summary>
			<returns>A <see cref="T:System.Windows.Input.RoutedCommand"></see> that can be used to remove a <see cref="T:System.Windows.Controls.StickyNoteControl"></see>.</returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.InkSchemaName">
			<summary>Gets the Xml type of the ink sticky note annotation. </summary>
			<returns>An <see cref="T:System.XML.XmlQualifiedName"></see> of the XML type that a ink <see cref="T:System.Windows.Controls.StickyNoteControl"></see> instantiates. </returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.IsActiveProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.IsActive"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.IsExpandedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.IsExpanded"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.PenWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.StickyNoteControl.PenWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.StickyNoteTypeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.StickyNoteControl.StickyNoteType"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteControl.TextSchemaName">
			<summary>Gets the Xml type of the text sticky note annotation. </summary>
			<returns>An <see cref="T:System.XML.XmlQualifiedName"></see> of the type that a text <see cref="T:System.Windows.Controls.StickyNoteControl"></see> instantiates. </returns>
		</member>
		<member name="M:System.Windows.Controls.StickyNoteControl.OnApplyTemplate">
			<summary>Registers event handlers for all the children of a template.</summary>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.Author">
			<summary>Gets the name of the author who created the sticky note.</summary>
			<returns>The name of the author who created the sticky note.</returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontFamily">
			<summary>Gets or sets the font family of the caption for the <see cref="T:System.Windows.Controls.StickyNoteControl"></see>.</summary>
			<returns>A <see cref="T:System.Drawing.FontFamily"></see> for the control's caption. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontFamily"></see>. </returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontSize">
			<summary>Gets or sets the size of the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> representing the font size. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontSize"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStretch">
			<summary>Gets or sets the degree to which the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl"></see> is stretched. </summary>
			<returns>A <see cref="T:System.Windows.FontStretch"></see> structure representing the degree of stretching compared to a font's normal aspect ratio. The default is <see cref="P:System.Windows.FontStretches.Normal"></see>. </returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontStyle">
			<summary>Gets or sets the style of the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl"></see>.</summary>
			<returns>A <see cref="T:System.Windows.FontStyle"></see> structure representing the style of the caption as normal, italic, or oblique. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontStyle"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.CaptionFontWeight">
			<summary>Gets or sets the weight of the font used for the caption of the <see cref="T:System.Windows.Controls.StickyNoteControl"></see>.</summary>
			<returns>A <see cref="T:System.Windows.FontWeight"></see> structure representing the weight of the font, for example, bold, ultrabold, or extralight. The default is the value of <see cref="P:System.Windows.SystemFonts.MessageFontWeight"></see>. </returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.IsActive">
			<summary>Gets a value indicating whether the <see cref="T:System.Windows.Controls.StickyNoteControl"></see> is active.</summary>
			<returns>true if the control is active; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.IsExpanded">
			<summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.StickyNoteControl"></see> is expanded.</summary>
			<returns>true if the control is expanded; otherwise, false. The default is true. </returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.IsMouseOverAnchor">
			<summary>Gets a value indicating whether the mouse cursor is over the anchor of the <see cref="T:System.Windows.Controls.StickyNoteControl"></see>.</summary>
			<returns>true if the mouse cursor is over the anchor; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.PenWidth">
			<summary>Gets or sets the width of the pen for a Ink <see cref="T:System.Windows.Controls.StickyNoteControl"></see>. </summary>
			<returns>A <see cref="T:System.Double"></see> representing the width of the pen. The default is the value of <see cref="P:System.Windows.Ink.DrawingAttributes.Width"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.StickyNoteControl.StickyNoteType">
			<summary>Gets a value that indicates whether the sticky note is text or ink.</summary>
			<returns>A <see cref="T:System.Windows.Controls.StickyNoteType"></see> value indicating the type of note. The default is <see cref="F:System.Windows.Controls.StickyNoteType.Text"></see>. </returns>
		</member>
		<member name="T:System.Windows.Controls.StickyNoteType">
			<summary>Specifies whether a <see cref="T:System.Windows.Controls.StickyNoteControl"></see> accepts textor ink. </summary>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteType.Ink">
			<summary>An ink sticky note.</summary>
		</member>
		<member name="F:System.Windows.Controls.StickyNoteType.Text">
			<summary>A text sticky note.</summary>
		</member>
		<member name="T:System.Windows.Controls.StretchDirection">
			<summary>Describes how scaling applies to content and restricts scaling to named axis types. </summary>
		</member>
		<member name="F:System.Windows.Controls.StretchDirection.Both">
			<summary>The content stretches to fit the parent according to the <see cref="T:System.Windows.Media.Stretch"></see> mode. </summary>
		</member>
		<member name="F:System.Windows.Controls.StretchDirection.DownOnly">
			<summary>The content scales downward only when it is larger than the parent. If the content is smaller, no scaling upward is performed. </summary>
		</member>
		<member name="F:System.Windows.Controls.StretchDirection.UpOnly">
			<summary>The content scales upward only when it is smaller than the parent. If the content is larger, no scaling downward is performed. </summary>
		</member>
		<member name="T:System.Windows.Controls.StyleSelector">
			<summary>Provides a way to apply styles based on custom logic.</summary>
		</member>
		<member name="M:System.Windows.Controls.StyleSelector.#ctor">
			<summary>Initializes a new instance of a <see cref="T:System.Windows.Controls.StyleSelector"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
			<summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Style"></see> based on custom logic.</summary>
			<returns>Returns an application-specific style to apply; otherwise, null.</returns>
			<param name="item">The content.</param>
			<param name="container">The element to which the style will be applied.</param>
		</member>
		<member name="T:System.Windows.Controls.TabControl">
			<summary>Represents a control that allows visual content to be arranged in a tabular form. </summary>
		</member>
		<member name="M:System.Windows.Controls.TabControl.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabControl"></see>.class. </summary>
		</member>
		<member name="F:System.Windows.Controls.TabControl.ContentTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.ContentTemplate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.ContentTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TabControl.ContentTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TabControl.SelectedContentProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContent"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedContent"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplate"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TabControl.SelectedContentTemplateSelectorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.SelectedContentTemplateSelector"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TabControl.TabStripPlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabControl.TabStripPlacement"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.TabControl.GetContainerForItemOverride">
			<summary>Creates or identifies the element used to display the specified item.</summary>
			<returns>A <see cref="T:System.Windows.Controls.TabItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.TabControl.IsItemItsOwnContainerOverride(System.Object)">
			<summary>Determines if the specified item is (or is eligible to be) its own ItemContainer. </summary>
			<returns>Returns true if the item is its own ItemContainer; otherwise, false.</returns>
			<param name="item">Specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.TabControl.OnApplyTemplate">
			<summary>Called when the template's tree is generated.</summary>
		</member>
		<member name="M:System.Windows.Controls.TabControl.OnInitialized(System.EventArgs)">
			<summary>Called when <see cref="P:System.Windows.FrameworkElement.IsInitialized"></see> is set to true.</summary>
			<param name="e">Provides data for the <see cref="E:System.Windows.FrameworkElement.Initialized"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.TabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Called to update the current selection when items change.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.TabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.ContentElement.KeyDown"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.KeyEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.TabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
			<summary> Responds to a tab control selection change by raising a <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Controls.SelectionChangedEventArgs"></see>. </param>
		</member>
		<member name="P:System.Windows.Controls.TabControl.ContentTemplate">
			<summary>Gets or sets the content template to apply to TabItems that do not have a contenttemplate or contenttemplateselector property defined.</summary>
			<returns>A <see cref="P:System.Windows.Controls.TabControl.ContentTemplate"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.TabControl.ContentTemplateSelector">
			<summary>Enables an application writer to provide custom style selection logic.</summary>
			<returns>A <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector"></see>, the default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.TabControl.SelectedContent">
			<summary> Gets or sets the content of the current selected <see cref="T:System.Windows.Controls.TabItem"></see>. </summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.TabControl.SelectedContentTemplate">
			<summary> Gets and sets the content template of the currently selected item. </summary>
			<returns>Returns the template of the selected item.</returns>
		</member>
		<member name="P:System.Windows.Controls.TabControl.TabStripPlacement">
			<summary> Gets or sets how tab headers align relative to the tab content. </summary>
			<returns>The default value is Top.</returns>
		</member>
		<member name="T:System.Windows.Controls.TabItem">
			<summary>Control that implements a selectable item inside a <see cref="T:System.Windows.Controls.TabControl"></see>. </summary>
		</member>
		<member name="M:System.Windows.Controls.TabItem.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TabItem"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.TabItem.IsSelectedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.IsSelected"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.IsSelected"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TabItem.TabStripPlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TabItem.TabStripPlacement"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
			<summary> Responds when an <see cref="P:System.Windows.Controls.AccessText.AccessKey"></see> for a <see cref="T:System.Windows.Controls.TabControl"></see> is called. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.AccessKeyEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnContentChanged(System.Object,System.Object)">
			<summary>Called when the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property changes. </summary>
			<param name="oldContent">Old value of the content property.</param>
			<param name="newContent">New value of the content property.</param>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnContentTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
			<summary> Called when the <see cref="P:System.Windows.Controls.TabControl.ContentTemplate"></see> property changes. </summary>
			<param name="oldContentTemplate">Old value of the content template property.</param>
			<param name="newContentTemplate">New value of the content template property.</param>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnContentTemplateSelectorChanged(System.Windows.Controls.DataTemplateSelector,System.Windows.Controls.DataTemplateSelector)">
			<summary>Called when the <see cref="P:System.Windows.Controls.TabControl.ContentTemplateSelector"></see> property changes. </summary>
			<param name="newContentTemplateSelector">New value of the content template selector.</param>
			<param name="oldContentTemplateSelector">Old value of the content template selector.</param>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary> Responds to the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown"></see> event. </summary>
			<param name="e">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary> Announces that the keyboard is focused on this element. </summary>
			<param name="e">Keyboard input event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnSelected(System.Windows.RoutedEventArgs)">
			<summary>Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected"></see> property has changed to true. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.TabItem.OnUnselected(System.Windows.RoutedEventArgs)">
			<summary> Called to indicate that the <see cref="P:System.Windows.Controls.TabItem.IsSelected"></see> property has changed to false. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected"></see> event.</param>
		</member>
		<member name="P:System.Windows.Controls.TabItem.IsSelected">
			<summary> Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.TabItem"></see> is selected. </summary>
			<returns>The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.TabItem.TabStripPlacement">
			<summary>Gets the tab strip placement.</summary>
			<returns>A value from the <see cref="T:System.Windows.Controls.Dock"></see> enumeration, the default placement is Top.</returns>
		</member>
		<member name="T:System.Windows.Controls.TextBlock">
			<summary>Provides a lightweight control for displaying small amounts of flow content.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.#ctor">
			<summary> Initializes a new, empty instance of the <see cref="T:System.Windows.Controls.TextBlock"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.#ctor(System.Windows.Documents.Inline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBlock"></see> class, adding a specified <see cref="T:System.Windows.Documents.Inline"></see> element as the initial display content.</summary>
			<param name="inline">An object deriving from the abstract <see cref="T:System.Windows.Documents.Inline"></see> class, to be added as the initial content.</param>
			<exception cref="T:System.ArgumentNullException">Raised if inline is null.</exception>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Background"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.BaselineOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.FontFamilyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontFamily"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontFamily"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.FontSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontSize"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontSize"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.FontStretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStretch"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStretch"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.FontStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontStyle"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.FontWeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.FontWeight"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.FontWeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.ForegroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Foreground"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Foreground"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.IsHyphenationEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.LineHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see>  dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.LineStackingStrategyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.PaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Padding"></see>  dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.Padding"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.TextAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.TextDecorationsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations"></see>  dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBlock.TextDecorations"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.TextEffectsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextEffects"></see>  dependency property.</summary>
			<returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextEffects"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.TextProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.Text"></see>  dependency property.</summary>
			<returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextEffects"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.TextTrimmingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming"></see>  dependency property. </summary>
			<returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextTrimming"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBlock.TextWrappingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping"></see>  dependency property. </summary>
			<returns>The identifier of the <see cref="P:System.Windows.Controls.TextBlock.TextWrapping"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.ArrangeOverride(System.Windows.Size)">
			<summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>The actual <see cref="T:System.Windows.Size"></see> used to arrange the element.</returns>
			<param name="arrangeSize">A <see cref="T:System.Windows.Size"></see> within the hosting parent element that the <see cref="T:System.Windows.Controls.TextBlock"></see> should use to arrange itself and its child elements. Sizing constraints may affect this requested size.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetBaselineOffset(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetFontFamily(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="F:System.Windows.Controls.TextBlock.FontFamilyProperty"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetFontSize(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetFontStretch(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetFontStyle(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetFontWeight(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetForeground(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetLineHeight(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetLineStackingStrategy(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetPositionFromPoint(System.Windows.Point,System.Boolean)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> to the position closes to a specified <see cref="T:System.Windows.Point"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the specified point, or null if snapToText is false and the specified point does not fall within a character bounding box in the <see cref="T:System.Windows.Controls.TextBlock"></see> content area.</returns>
			<param name="point">A <see cref="T:System.Windows.Point"></see> in the coordinate space of the <see cref="T:System.Windows.Controls.TextBlock"></see> for which to return a <see cref="T:System.Windows.Documents.TextPointer"></see>.</param>
			<param name="snapToText">A Boolean value that indicates whether or not to return a <see cref="T:System.Windows.Documents.TextPointer"></see> when the specified point is outside of a character bounding box in the <see cref="T:System.Windows.Controls.TextBlock"></see> content area.If true, and if point does not fall within a character bounding box, this method will return a <see cref="T:System.Windows.Documents.TextPointer"></see> to a valid position closest to point.If false, and if point does not fall within a character bounding box, this method will return null</param>
			<exception cref="T:System.InvalidOperationException">Raised when current, valid layout information for the control is unavailable.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetRectanglesCore(System.Windows.ContentElement)">
			<summary>Returns a read-only collection of bounding rectangles for a specified <see cref="T:System.Windows.ContentElement"></see>.</summary>
			<returns>A read-only collection of bounding rectangles for the specified <see cref="T:System.Windows.ContentElement"></see>.</returns>
			<param name="child">A <see cref="T:System.Windows.ContentElement"></see> for which to generate and return a collection of bounding rectangles.</param>
			<exception cref="T:System.ArgumentNullException">Raised when child is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetTextAlignment(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.GetVisualChild(System.Int32)">
			<summary>Returns the <see cref="T:System.Windows.Media.Visual"></see> child at a specified index.</summary>
			<returns>The <see cref="T:System.Windows.Media.Visual"></see> child at the specified index.</returns>
			<param name="index">A zero-based index specifying the <see cref="T:System.Windows.Media.Visual"></see> child to return.  This value must be between 0 and (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount"></see> - 1)</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when an invalid index value is specified.  The index value must be between 0 and (<see cref="P:System.Windows.Controls.TextBlock.VisualChildrenCount"></see> - 1)</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.HitTestCore(System.Windows.Media.PointHitTestParameters)">
			<summary>Returns a <see cref="T:System.Windows.Media.PointHitTestResult"></see> for specified <see cref="T:System.Windows.Media.PointHitTestParameters"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Media.PointHitTestResult"></see> for the specified hit test parameters.</returns>
			<param name="hitTestParameters">A <see cref="T:System.Windows.Media.PointHitTestParameters"></see> object specifying the parameters to hit test for.</param>
			<exception cref="T:System.ArgumentNullException">Raised when hitTestParameters is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.InputHitTestCore(System.Windows.Point)">
			<summary>Returns the <see cref="T:System.Windows.IInputElement"></see> at a specified <see cref="T:System.Windows.Point"></see> within the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>The <see cref="T:System.Windows.IInputElement"></see> found at the specified Point, or null if no such <see cref="T:System.Windows.IInputElement"></see> can be found.</returns>
			<param name="point">A <see cref="T:System.Windows.Point"></see>, in the coordinate space of the <see cref="T:System.Windows.Controls.TextBlock"></see>, for which to return the corresponding <see cref="T:System.Windows.IInputElement"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.MeasureOverride(System.Windows.Size)">
			<summary>Called to re-measure the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> structure indicating the new size of the <see cref="T:System.Windows.Controls.TextBlock"></see>.</returns>
			<param name="constraint">A <see cref="T:System.Windows.Size"></see> structure specifying any constraints on the size of the <see cref="T:System.Windows.Controls.TextBlock"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)">
			<summary>Called when a child element deriving from <see cref="T:System.Windows.UIElement"></see> changes its <see cref="P:System.Windows.UIElement.DesiredSize"></see>.</summary>
			<param name="child">The child <see cref="T:System.Windows.UIElement"></see> element whose <see cref="P:System.Windows.UIElement.DesiredSize"></see> has changed.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.TextBlock"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Called when the value one or more hosted dependency properties changes.</summary>
			<param name="e">Arguments for the associated event.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Renders the contents of a TextBlock.</summary>
			<param name="ctx">The <see cref="T:System.Windows.Media.DrawingContext"></see> to render the control on.</param>
			<exception cref="T:System.ArgumentNullException">Raised when ctx is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetBaselineOffset(System.Windows.DependencyObject,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontFamily"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetFontSize(System.Windows.DependencyObject,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontSize"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStretch"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontStyle"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.FontWeight"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.Foreground"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetLineHeight(System.Windows.DependencyObject,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> to a non-positive value.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.LineStackingStrategy"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Controls.TextBlock.TextAlignment"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.ShouldSerializeBaselineOffset">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.TextBlock"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.TextBlock.BaselineOffset"></see> property should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Controls.TextBlock.Inlines"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.TextBlock"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.TextBlock.Inlines"></see> property should be serialized; otherwise, false.</returns>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.ArgumentNullException">Raised if manager is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.ShouldSerializeText">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Controls.TextBlock.Text"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.TextBlock"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.TextBlock.Text"></see> property should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)">
			<summary>This method supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.TextBlock.OnChildDesiredSizeChangedCore(System.Windows.UIElement)"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBlock.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.Background">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> used to fill the background of content area.</summary>
			<returns>The brush used to fill the background of the content area, or null not to use a background brush.The default is a null brush.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.BaselineOffset">
			<summary>Gets or sets the amount by which each line of text is offset from the baseline.</summary>
			<returns>The amount by which each line of text is offset from the baseline, in device independent pixels.Setting this property to <see cref="F:System.Double.NaN"></see> causes an optimal baseline offset to be automatically calculated from the current font characteristics.The default value is NaN.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.BreakAfter">
			<summary>Gets a <see cref="T:System.Windows.LineBreakCondition"></see> that indicates how content should break after the current element.</summary>
			<returns>The conditions for breaking content after the current element.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.BreakBefore">
			<summary>Gets a <see cref="T:System.Windows.LineBreakCondition"></see> that indicates how content should break before the current element. </summary>
			<returns>The conditions for breaking content after the current element.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.ContentEnd">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> to the end of content in the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the end of content in the <see cref="T:System.Windows.Controls.TextBlock"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.ContentStart">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> to the beginning of content in the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the beginning of content in the <see cref="T:System.Windows.Controls.TextBlock"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.FontFamily">
			<summary>Gets or sets the preferred top-level font family for the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Media.FontFamily"></see> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families.The default value is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.FontSize">
			<summary>Gets or sets the top-level font size for the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A double value specifying the desired font size to use in points (1 point = 1/72 of an inch = 96/72 device independent pixels).  The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.FontStretch">
			<summary>Gets or sets the top-level font-stretching characteristics for the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontStretch"></see> class specifying the desired font-stretching characteristics to use.The default value is <see cref="P:System.Windows.FontStretches.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.FontStyle">
			<summary>Gets or sets the top-level font style for the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontStyles"></see> class specifying the desired font style.The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.FontWeight">
			<summary>Gets or sets the top-level font weight for the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontWeights"></see> class specifying the desired font weight.The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.Foreground">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> to apply to the text contents of the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>The brush used to apply to the text contents.The default is <see cref="P:System.Windows.Media.Brushes.Black"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.HostedElementsCore">
			<summary>Gets an enumerator that can be used iterate the elements hosted by this <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>An enumerator that can iterate elements hosted by this <see cref="T:System.Windows.Controls.TextBlock"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.Inlines">
			<summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection"></see> containing the top-level <see cref="T:System.Windows.Documents.Inline"></see> elements that comprise the contents of the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Documents.InlineCollection"></see> containing the <see cref="T:System.Windows.Documents.Inline"></see> elements that comprise the contents of the <see cref="T:System.Windows.Controls.TextBlock"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.IsHyphenationEnabled">
			<summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</summary>
			<returns>true to indicate that automatic breaking and hyphenation of words is enabled; false otherwise.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.LineHeight">
			<summary>Gets or sets the height of each line of content.</summary>
			<returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> must be equal to or greater than 0.0034 and equal to or less then 160000.A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the line height to be determined automatically from the current font characteristics.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> to a non-positive value.</exception>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.LineStackingStrategy">
			<summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Controls.TextBlock"></see>. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>An enumerator for the logical children.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.Padding">
			<summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of the content area, and the content displayed by a <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of padding to apply, in device independent pixels.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.Text">
			<summary>Gets or sets the text contents of a <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A string specifying the text contents of this <see cref="T:System.Windows.Controls.TextBlock"></see>. Note that all non-text contents is stripped out resulting in a plain text representation of the <see cref="T:System.Windows.Controls.TextBlock"></see> contents.The default value is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.TextAlignment">
			<summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextAlignment"></see> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.TextDecorations">
			<summary>Gets or sets a <see cref="T:System.Windows.TextDecorationCollection"></see> that contains the effects to apply to the text of a <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>A <see cref="T:System.Windows.TextDecorationCollection"></see> collection that contains text decorations to apply to this element.The default value is null (no text decorations applied).</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.TextEffects">
			<summary>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</summary>
			<returns>A <see cref="T:System.Windows.Media.TextEffectCollection"></see> containing one or more <see cref="T:System.Windows.Media.TextEffect"></see> objects that define effects to apply to the text of the <see cref="T:System.Windows.Controls.TextBlock"></see>.The default value is null (no effects applied).</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.TextTrimming">
			<summary>Gets or sets a value that indicates the text trimming behavior to employ when content overflows the content area.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextTrimming"></see> enumeration that specifies the text trimming behavior to employ.The default value is None.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.TextWrapping">
			<summary>Gets or sets a value that indicates how the <see cref="T:System.Windows.Controls.TextBlock"></see> should wrap text.</summary>
			<returns>A value defined by the <see cref="T:System.Windows.TextWrapping"></see> enumeration.The default value is NoWrap.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.Typography">
			<summary>Gets the currently effective typography variations for the contents of this element.</summary>
			<returns>A <see cref="T:System.Windows.Documents.Typography"></see> object that specifies the currently effective typography variations.For a list of default typography values, see the <see cref="T:System.Windows.Documents.Typography"></see> class page.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBlock.VisualChildrenCount">
			<summary>Gets the number of <see cref="T:System.Windows.Media.Visual"></see> children hosted by the <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
			<returns>The number of visual children hosted by the <see cref="T:System.Windows.Controls.TextBlock"></see>.This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.TextBox">
			<summary>Represents a control that can be used to display or edit unformatted text.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBox.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.TextBox.CharacterCasingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBox.MaxLengthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.MaxLength"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBox.MaxLinesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.MaxLines"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBox.MinLinesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.MinLines"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBox.TextAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.TextAlignment"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBox.TextDecorationsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations"></see> dependency property.</summary>
		</member>
		<member name="F:System.Windows.Controls.TextBox.TextProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.Text"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextBox.Text"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextBox.TextWrappingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping"></see> dependency property.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBox.Clear">
			<summary>Clears all the content from the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)">
			<summary>Returns the zero-based character index for the first character in a specified line index.</summary>
			<returns>Zero-based index for the first character in the specified line index.</returns>
			<param name="lineIndex">Zero-based character index for the line to retrieve the initial character index for.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)">
			<summary>Returns the zero-based insertion index for a specified point.</summary>
			<returns>The insertion index for the specified point, or -1 if no valid insertion index can be found.</returns>
			<param name="point">A point in <see cref="T:System.Windows.Controls.TextBox"></see> coordinate-space for which to return an insertion index.</param>
			<param name="snapToText">true to return the nearest insertion index if there is no character at the specified point; false to return -1 if there is no character at the specified point.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex">
			<summary>Returns the line index for the first line that is currently visible in the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>Zero-based index for the first visible line in the <see cref="T:System.Windows.Controls.TextBox"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex">
			<summary>Returns the line index for the last line that is currently visible in the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>Zero-based index for the last visible line in the <see cref="T:System.Windows.Controls.TextBox"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)">
			<summary>Returns the zero-based line index for the line that contains the specified character index.</summary>
			<returns>Zero-based index for the line that contains the specified character index.</returns>
			<param name="charIndex">Zero-based character index for which to retrieve the associated line index.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)">
			<summary>Returns the number of characters in a specified line.</summary>
			<returns>The number of characters in the specified line.</returns>
			<param name="lineIndex">Zero-based line index for which to return a character count.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)">
			<summary>Returns the text that is currently displayed on a specified line.</summary>
			<returns>A string containing a copy of the text currently visible on the specified line.</returns>
			<param name="lineIndex">Zero-based line index for which to retrieve the currently displayed text.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)">
			<summary>Returns the beginning character index for the next spelling error in the contents of the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>The character index for the beginning of the next spelling error in the contents of the <see cref="T:System.Windows.Controls.TextBox"></see>, or negative one (-1) if no next spelling error exists.</returns>
			<param name="direction">A <see cref="T:System.Windows.Documents.LogicalDirection"></see> in which to search for the next spelling error, starting at the specified charIndex.</param>
			<param name="charIndex">Zero-based character index indicating a position from which to search for the next spelling error.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)">
			<summary>Returns the bounding rectangle for the character at a specified character index.</summary>
			<returns>A bounding rectangle for the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty"></see> if a bounding rectangle cannot be determined.</returns>
			<param name="charIndex">Zero-based character index of the character for which to retrieve the bounding rectangle.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)">
			<summary>Returns the bounding rectangle for the character at the specified character index, including either the leading or trailing edge of the character.</summary>
			<returns>A bounding rectangle for the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty"></see> if a bounding rectangle cannot be determined.</returns>
			<param name="charIndex">Zero-based character index of the character for which to retrieve the bounding rectangle.</param>
			<param name="trailingEdge">A Boolean value indicating whether to include the leading edge or trailing edge of the character in the bounding rectangle.  true to include the trailing edge; false to include leading edge.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when charIndex is negative, or is greater than the length of content.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)">
			<summary>Returns a <see cref="T:System.Windows.Controls.SpellingError"></see> object associated with any spelling error at a specified character index.</summary>
			<returns>A <see cref="T:System.Windows.Controls.SpellingError"></see> object containing the details of the spelling error found at the character indicated by charIndex, or null if no spelling error exists at the specified character.</returns>
			<param name="charIndex">Zero-based character index of a position in content to examine for a spelling error.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)">
			<summary>Returns the length of any spelling error that includes a specified character.</summary>
			<returns>The length of any spelling error that includes the character specified by charIndex, or zero (0) if the specified character is not part of a spelling error.</returns>
			<param name="charIndex">Zero-based character index of a position in content to examine for a spelling error.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)">
			<summary>Returns the beginning character index for any spelling error that includes a specified character.</summary>
			<returns>The beginning character index for any spelling error that includes the character specified by charIndex, or negative one (-1) if the specified character is not part of a spelling error.</returns>
			<param name="charIndex">Zero-based character index of a position in content to examine for a spelling error.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)">
			<summary>Called to size the <see cref="T:System.Windows.Controls.TextBox"></see> to its content.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> structure indicating the new size of the <see cref="T:System.Windows.Controls.TextBox"></see>.</returns>
			<param name="constraint">A <see cref="T:System.Windows.Size"></see> structure specifying constraints on the size of the <see cref="T:System.Windows.Controls.TextBox"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.TextBox"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Called when one or more of the dependency properties that exist on the element have had their effective values changed.</summary>
			<param name="e">Arguments for the associated event.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)">
			<summary>Scrolls the line at a specified line index into view.</summary>
			<param name="lineIndex">Zero-based line index of the line to scroll into view.</param>
		</member>
		<member name="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)">
			<summary>Selects a range of text in the TextBox.</summary>
			<param name="start">A character index indicating the first character in the selection.</param>
			<param name="length">The length of the selection, in characters</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when start or length is negative.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Controls.TextBox"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.TextBox.Text"></see> property should be serialized; otherwise, false.</returns>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.NullReferenceException">Raised when manager is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.TextBox.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextBox.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.TextBox.CaretIndex">
			<summary>Gets or sets the insertion position index of the caret.</summary>
			<returns>An integer indicating the zero-based insertion position index of the caret. An insertion position is between either characters or element tags.Getting this value returns the current insertion position index of the caret (see <see cref="T:System.Windows.Documents.TextPointer"></see> for information on terminology like "insertion position").  Setting this value moves the caret to the specified insertion position.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.CharacterCasing">
			<summary>Gets or sets a value indicating how characters are cased as they are manually entered into the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.Controls.CharacterCasing"></see> enumeration that specifies how manually entered characters are cased.The default value is <see cref="F:System.Windows.Controls.CharacterCasing.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.LineCount">
			<summary>Gets the total number of lines in the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>An integer indicating the total number of lines in the <see cref="T:System.Windows.Controls.TextBox"></see>, or -1 if layout information is not available for the <see cref="T:System.Windows.Controls.TextBox"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.MaxLength">
			<summary>Gets or sets a value indicating the maximum number of characters that can be manually entered into the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>An integer indicating the maximum number of characters that can be manually entered into the <see cref="T:System.Windows.Controls.TextBox"></see>.The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.MaxLines">
			<summary>Gets or sets the maximum number of visible lines to size to.</summary>
			<returns>An integer indicating the maximum number of visible lines to size to.Getting this property returns the current value of <see cref="P:System.Windows.Controls.TextBox.MaxLines"></see>. Setting this property causes the <see cref="T:System.Windows.Controls.TextBox"></see> to resize if the number of visible lines exceeds the limit specified by <see cref="P:System.Windows.Controls.TextBox.MaxLines"></see>.The default value is <see cref="F:System.Int32.MaxValue"></see>.</returns>
			<exception cref="T:System.Exception">The value of <see cref="P:System.Windows.Controls.TextBox.MaxLines"></see> must be greater than or equal to the value of <see cref="P:System.Windows.Controls.TextBox.MinLines"></see>.</exception>
		</member>
		<member name="P:System.Windows.Controls.TextBox.MinLines">
			<summary>Gets or sets the minimum number of visible lines to size to.</summary>
			<returns>An integer indicating the minimum number of lines to size to.Getting this property returns the current value of <see cref="P:System.Windows.Controls.TextBox.MinLines"></see>. Setting this property causes the <see cref="T:System.Windows.Controls.TextBox"></see> to resize if the number of visible lines is less than value specified by <see cref="P:System.Windows.Controls.TextBox.MinLines"></see>.The default value is one (1).</returns>
			<exception cref="T:System.Exception">The value of <see cref="P:System.Windows.Controls.TextBox.MaxLines"></see> must be greater than or equal to the value of <see cref="P:System.Windows.Controls.TextBox.MinLines"></see>.</exception>
		</member>
		<member name="P:System.Windows.Controls.TextBox.SelectedText">
			<summary>Gets or sets a string the current selection in the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>A string containing or specifying the current selection in the <see cref="T:System.Windows.Controls.TextBox"></see>.Getting this property returns a string copy of the current.  Setting this property replaces the current selection with the specified string.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.SelectionLength">
			<summary>Gets or sets a value indicating the number of characters in the current selection in the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>An integer specifying the number of characters in the current selection in the <see cref="T:System.Windows.Controls.TextBox"></see>.Getting this property returns the number of characters in the current selection.  Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.The default value is zero (0).</returns>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised if the specified selection length is negative.</exception>
		</member>
		<member name="P:System.Windows.Controls.TextBox.SelectionStart">
			<summary>Gets or sets a character index for the beginning of the current selection.</summary>
			<returns>The character index for the beginning of the current selection.</returns>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised if an attempt is made to set this property to a negative value.</exception>
		</member>
		<member name="P:System.Windows.Controls.TextBox.Text">
			<summary>Gets or sets the text contents of the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>A string containing the text contents of the <see cref="T:System.Windows.Controls.TextBox"></see>.Getting this property returns a string copy of the contents of the <see cref="T:System.Windows.Controls.TextBox"></see>.  Setting this property replaces the contents of the <see cref="T:System.Windows.Controls.TextBox"></see> with the specified string.The default value is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.TextAlignment">
			<summary>Gets or sets a value indicating the horizontal alignment of the contents of the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextAlignment"></see> enumeration specifying the horizontal alignment of the contents of the <see cref="T:System.Windows.Controls.TextBox"></see>.Getting this property will return the current alignment.  Setting this property will adjust the contents of the <see cref="T:System.Windows.Controls.TextBox"></see> to reflect specified alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.TextDecorations">
			<summary>Gets a <see cref="T:System.Windows.TextDecorationCollection"></see> that contains text decorations to apply to this element.</summary>
			<returns>A <see cref="T:System.Windows.TextDecorationCollection"></see> collection that contains text decorations to apply to this element.The default value is null (no text decorations applied).</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.TextWrapping">
			<summary>Gets or sets a value that indicates how the <see cref="T:System.Windows.Controls.TextBox"></see> should wrap text.</summary>
			<returns>A value indicating how the <see cref="T:System.Windows.Controls.TextBox"></see> should wrap text. The default value is <see cref="F:System.Windows.TextWrapping.NoWrap"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextBox.Typography">
			<summary>Gets the currently effective typography variations for the text contents of the <see cref="T:System.Windows.Controls.TextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.Typography"></see> object that specifies the currently effective typography variations.For a list of default typography values, see the <see cref="T:System.Windows.Documents.Typography"></see> class page.</returns>
		</member>
		<member name="T:System.Windows.Controls.TextChangedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Controls.TextChangedEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Controls.UndoAction)">
			<summary> Initializes a new instance of the TextChangedEventArgs class.     </summary>
			<param name="action">The <see cref="P:System.Windows.Controls.TextChangedEventArgs.UndoAction"></see> caused by the text change.</param>
			<param name="id">The event identifier (ID).</param>
		</member>
		<member name="M:System.Windows.Controls.TextChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Performs the proper type casting to call the type-safe TextChangedEventHandler  delegate for the TextChanged event.</summary>
			<param name="genericTarget">The current object along the event's route.</param>
			<param name="genericHandler">The handler to invoke.</param>
		</member>
		<member name="P:System.Windows.Controls.TextChangedEventArgs.UndoAction">
			<summary> Gets how the undo stack is caused or affected by this text change </summary>
			<returns>The <see cref="T:System.Windows.Controls.UndoAction"></see> appropriate for this text change.</returns>
		</member>
		<member name="T:System.Windows.Controls.TextChangedEventHandler">
			<summary> Represents the method that handles the TextChanged  event.       </summary>
		</member>
		<member name="T:System.Windows.Controls.TextSearch">
			<summary>Enables a user to quickly access items in a set by typing prefixes of strings. </summary>
		</member>
		<member name="F:System.Windows.Controls.TextSearch.TextPathProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextSearch.TextPath"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextSearch.TextPath"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TextSearch.TextProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TextSearch.Text"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TextSearch.Text"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Controls.TextSearch.GetText(System.Windows.DependencyObject)">
			<summary>Returns the string to that identifies the specified item.</summary>
			<returns>The string that identifies the specified item.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.TextSearch.GetTextPath(System.Windows.DependencyObject)">
			<summary>Returns the name of the property that identifies an item in the specified element's collection. </summary>
			<returns>The name of the property that identifies the item to the user.</returns>
			<param name="element">The element from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.TextSearch.SetText(System.Windows.DependencyObject,System.String)">
			<summary> Writes the <see cref="P:System.Windows.Controls.TextSearch.Text"></see> attached property value to the specified element. </summary>
			<param name="element">The element to which the property value is written.</param>
			<param name="t ext">The string that identifies the item.</param>
		</member>
		<member name="M:System.Windows.Controls.TextSearch.SetTextPath(System.Windows.DependencyObject,System.String)">
			<summary> Writes the <see cref="P:System.Windows.Controls.TextSearch.TextPath"></see> attached property to the specified element. </summary>
			<param name="element">The element to which the property value is written.</param>
			<param name="p ath">The name of the property that identifies an item.</param>
		</member>
		<member name="P:System.Windows.Controls.TextSearch.Text">
			<summary>Gets or sets the string that identifies an item in a control's collection.</summary>
			<returns>The text that identifies the item to the user. The default value is an empty string.</returns>
		</member>
		<member name="P:System.Windows.Controls.TextSearch.TextPath">
			<summary>Gets or sets the name of the items' property that identifies each item in a control's collection.</summary>
			<returns>The name of the property that contains the text that identifies the item to the user. The default value is an empty string.</returns>
		</member>
		<member name="T:System.Windows.Controls.ToolBar">
			<summary>Provides a container for a group of commands or controls.  </summary>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolBar"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.ToolBar.BandIndexProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.BandIndex"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.BandIndex"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBar.BandProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.Band"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.Band"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBar.HasOverflowItemsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.HasOverflowItems"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBar.IsOverflowItemProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBar.IsOverflowOpenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBar.OrientationProperty">
			<summary>Identifies the <see cref="T:System.Windows.Controls.Orientation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="T:System.Windows.Controls.Orientation"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBar.OverflowModeProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.GetIsOverflowItem(System.Windows.DependencyObject)">
			<summary> Reads the value of the <see cref="P:System.Windows.Controls.ToolBar.IsOverflowItem"></see> property from the specified element. </summary>
			<returns>The value of the property.</returns>
			<param name="element">The element from which to read the property.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.GetOverflowMode(System.Windows.DependencyObject)">
			<summary>Reads the value of the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode"></see> property from the specified element. </summary>
			<returns>The value of the property.</returns>
			<param name="element">The element from which to read the property.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.MeasureOverride(System.Windows.Size)">
			<summary> Remeasures a <see cref="T:System.Windows.Controls.ToolBar"></see>. </summary>
			<returns>The size of the <see cref="T:System.Windows.Controls.ToolBar"></see>.</returns>
			<param name="constraint">The measurement constraints. A <see cref="T:System.Windows.Controls.ToolBar"></see> cannot return a size larger than the constraint.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary> Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> property changes. </summary>
			<param name="e">The arguments for the <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Called when the mouse is pressed on a <see cref="T:System.Windows.Controls.ToolBar"></see> item. </summary>
			<param name="e">The arguments for the <see cref="E:System.Windows.UIElement.KeyDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
			<summary>Called when the <see cref="T:System.Windows.Controls.ToolBar"></see> loses mouse capture. </summary>
			<param name="e">The arguments for the <see cref="E:System.Windows.UIElement.LostMouseCapture"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary>Prepares the specified element to display the specified item. </summary>
			<param name="item">The item to display.</param>
			<param name="element">The element that will display the item.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBar.SetOverflowMode(System.Windows.DependencyObject,System.Windows.Controls.OverflowMode)">
			<summary>Writes the value of the <see cref="P:System.Windows.Controls.ToolBar.OverflowMode"></see> property to the specified element. </summary>
			<param name="mode">The property value to set.</param>
			<param name="element">The element to write the property to.</param>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.Band">
			<summary>Gets or sets a value that indicates where the toolbar should be located in the <see cref="T:System.Windows.Controls.ToolBarTray"></see>. This is a dependency property.</summary>
			<returns>The band of the <see cref="T:System.Windows.Controls.ToolBarTray"></see> in which the toolbar is positioned. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.BandIndex">
			<summary>Gets or sets the band index number that indicates the position of the toolbar on the band. This is a dependency property.</summary>
			<returns>The position of a toolbar on the band of a <see cref="T:System.Windows.Controls.ToolBarTray"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.ButtonStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to buttons on a toolbar.</summary>
			<returns>A resource key that represents the default style for buttons on the toolbar.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.CheckBoxStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to check boxes on a <see cref="T:System.Windows.Controls.ToolBar"></see>.</summary>
			<returns>A resource key that represents the default style for check boxes on the <see cref="T:System.Windows.Controls.ToolBar"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.ComboBoxStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to combo boxes on a <see cref="T:System.Windows.Controls.ToolBar"></see>.</summary>
			<returns>A resource key that represents the default style for combo boxes on the toolbar.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.HasOverflowItems">
			<summary>Gets a value that indicates whether the toolbar has items that are not visible. This is a dependency property.</summary>
			<returns>true if there are items on the toolbar that are not visible; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.IsOverflowOpen">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.ToolBar"></see> overflow area is currently visible. This is a dependency property.</summary>
			<returns>true if the overflow area is visible; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.MenuStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to menus on a <see cref="T:System.Windows.Controls.ToolBar"></see>.</summary>
			<returns>A resource key that represents the default style for menus on the toolbar.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.Orientation">
			<summary> Gets the orientation of the <see cref="T:System.Windows.Controls.ToolBar"></see>. This is a dependency property.</summary>
			<returns>The toolbar orientation. The default is <see cref="F:System.Windows.Controls.Orientation.Horizontal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.RadioButtonStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to radio buttons on a toolbar.</summary>
			<returns>A resource key that represents the default style for radio buttons on the toolbar.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.SeparatorStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to separators on a <see cref="T:System.Windows.Controls.ToolBar"></see>.</summary>
			<returns>A resource key that represents the default style for separators on the toolbar.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.TextBoxStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to text boxes on a <see cref="T:System.Windows.Controls.ToolBar"></see>.</summary>
			<returns>A resource key that represents the default style for text boxes on the toolbar</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.ToggleButtonStyleKey">
			<summary>Gets the <see cref="T:System.Windows.Style"></see> applied to toggle buttons on a <see cref="T:System.Windows.Controls.ToolBar"></see>.</summary>
			<returns>A resource key that represents the default style for toggle buttons on the toolbar.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.IsOverflowItem">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.ToolBar"></see> item is an overflow item.</summary>
			<returns>true if the item is an overflow item; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBar.OverflowMode">
			<summary> Gets or sets a value that indicates when an item should be placed in the overflow panel instead of in the main panel.</summary>
			<returns>The overflow mode; the default is <see cref="F:System.Windows.Controls.OverflowMode.AsNeeded"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.ToolBarTray">
			<summary>Layout container that handles the layout of a <see cref="T:System.Windows.Controls.ToolBar"></see>. </summary>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolBarTray"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.ToolBarTray.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.Background"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBarTray.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBarTray.IsLockedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolBarTray.OrientationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolBarTray.Orientation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolBarTray.Orientation"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.ArrangeOverride(System.Windows.Size)">
			<summary> Called to arrange and size its <see cref="T:System.Windows.Controls.ToolBar"></see> children. </summary>
			<returns>The size of the control.</returns>
			<param name="arrangeSize">The size that the <see cref="T:System.Windows.Controls.ToolBarTray"></see> assumes to position its children.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.GetIsLocked(System.Windows.DependencyObject)">
			<summary>Reads the value of the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked"></see> property from the specified element. </summary>
			<returns>The property's value.</returns>
			<param name="d">The element from which to read the property.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.GetVisualChild(System.Int32)">
			<summary>Gets the index number of the visible child.</summary>
			<param name="index">Index of the visual child.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.MeasureOverride(System.Windows.Size)">
			<summary> Called to remeasure a <see cref="T:System.Windows.Controls.ToolBarTray"></see>. </summary>
			<returns>The size of the control.</returns>
			<param name="constraint">The measurement constraints; a <see cref="T:System.Windows.Controls.ToolBarTray"></see> cannot return a size larger than the constraint.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Called when a <see cref="T:System.Windows.Controls.ToolBarTray"></see> is displayed to get the Drawing Context (DC) to use to render the <see cref="T:System.Windows.Controls.ToolBarTray"></see>.</summary>
			<param name="dc">Drawing context to use to render the <see cref="T:System.Windows.Controls.ToolBarTray"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.SetIsLocked(System.Windows.DependencyObject,System.Boolean)">
			<summary>Writes the value of the <see cref="P:System.Windows.Controls.ToolBarTray.IsLocked"></see> property to the specified element. </summary>
			<param name="d">The element to write the property to.</param>
			<param name="value">The property value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.ToolBarTray.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.ToolBarTray.Background">
			<summary>Gets or sets a brush to use for the background color of the <see cref="T:System.Windows.Controls.ToolBarTray"></see></summary>
			<returns>Returns a brush.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBarTray.IsLocked">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Controls.ToolBar"></see> can be moved inside a <see cref="T:System.Windows.Controls.ToolBarTray"></see>. </summary>
			<returns>A Boolean value true, if the toolbar cannot be moved inside the toolbar tray; false otherwise. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBarTray.LogicalChildren">
			<summary>Gets an enumerator to the logical child elements of a <see cref="T:System.Windows.Controls.ToolBarTray"></see>. </summary>
			<returns>Returns an enumerator to the children of a <see cref="T:System.Windows.Controls.ToolBarTray"></see> element.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBarTray.Orientation">
			<summary> Specifies the orientation of a <see cref="T:System.Windows.Controls.ToolBarTray"></see> (horizontal or vertical). </summary>
			<returns>The default value is horizontal.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBarTray.ToolBars">
			<summary>Gets the collection of <see cref="T:System.Windows.Controls.ToolBar"></see> elements to add to a <see cref="T:System.Windows.Controls.ToolBarTray"></see>.</summary>
			<returns>Returns a <see cref="T:System.Windows.Controls.ToolBar"></see> collection.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolBarTray.VisualChildrenCount">
			<summary>Gets the number of children that are currently visible.</summary>
			<returns>Returns an integer count of the visible children of a <see cref="T:System.Windows.Controls.ToolBarTray"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.ToolTip">
			<summary>Represents a control that creates a pop-up window that displays information for an element in the interface. </summary>
		</member>
		<member name="M:System.Windows.Controls.ToolTip.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ToolTip"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.ToolTip.Closed">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip"></see> is closed and is no longer visible. </summary>
		</member>
		<member name="E:System.Windows.Controls.ToolTip.Opened">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.ToolTip"></see> becomes visible.</summary>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.ClosedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.ToolTip.Closed"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.ToolTip.Closed"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.CustomPopupPlacementCallbackProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.HasDropShadowProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.HasDropShadow"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.HorizontalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.HorizontalOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.IsOpenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.IsOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.IsOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.OpenedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.ToolTip.Opened"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.ToolTip.Opened"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.PlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.Placement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.Placement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.PlacementRectangleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.PlacementTargetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.StaysOpenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.StaysOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.StaysOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTip.VerticalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTip.VerticalOffset"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ToolTip.OnClosed(System.Windows.RoutedEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.Controls.ToolTip.Closed"></see> event.</summary>
			<param name="e">The event information.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTip.OnCreateAutomationPeer">
			<summary>Creates the implementation of <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.ToolTip"></see> control.</summary>
			<returns>A new <see cref="T:System.Windows.Automation.Peers.ToolTipAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.ToolTip"></see> control.</returns>
		</member>
		<member name="M:System.Windows.Controls.ToolTip.OnOpened(System.Windows.RoutedEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.Controls.ToolTip.Opened"></see> event. </summary>
			<param name="e">The event information.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTip.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Responds to a change in the visual parent of a <see cref="T:System.Windows.Controls.ToolTip"></see>.</summary>
			<param name="oldParent">The previous visual parent.</param>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.CustomPopupPlacementCallback">
			<summary>Gets or sets the delegate handler method to use to position the <see cref="T:System.Windows.Controls.ToolTip"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback"></see> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.ToolTip"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.HasDropShadow">
			<summary>Gets or sets whether the control has a drop shadow.</summary>
			<returns>true if the control has a drop shadow; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.HorizontalOffset">
			<summary>Gets or sets the offset from left of the area that is specified for the <see cref="T:System.Windows.Controls.ToolTip"></see> control.</summary>
			<returns>A value that specifies a horizontal distance from the position that is specified by the <see cref="P:System.Windows.Controls.ToolTip.Placement"></see>, <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle"></see>, and <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"></see> property values. These three values define where to place the <see cref="T:System.Windows.Controls.ToolTip"></see> and the horizontal offset provides fine-tuning. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.IsOpen">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Controls.ToolTip"></see> is visible.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ToolTip"></see> is visible; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.Placement">
			<summary>Gets or sets the orientation of the <see cref="T:System.Windows.Controls.ToolTip"></see> control when it opens, and specifies how the <see cref="T:System.Windows.Controls.ToolTip"></see> control behaves when it overlaps screen boundaries. </summary>
			<returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode"></see> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.ToolTip"></see> control when it opens, and that specifies how the control interacts with screen boundaries. The default value is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.PlacementRectangle">
			<summary>Gets or sets the rectangular area relative to which the <see cref="T:System.Windows.Controls.ToolTip"></see> control is positioned when it opens.</summary>
			<returns>The <see cref="T:System.Windows.Rect"></see> structure that defines the rectangle that is used to position the <see cref="T:System.Windows.Controls.ToolTip"></see> control. The default value is <see cref="P:System.Windows.Rect.Empty"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.PlacementTarget">
			<summary>Gets or sets the <see cref="T:System.Windows.UIElement"></see> relative to which the <see cref="T:System.Windows.Controls.ToolTip"></see> is positioned when it opens.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> that is the logical parent of the <see cref="T:System.Windows.Controls.ToolTip"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.StaysOpen">
			<summary>Gets or sets a value that indicates whether an open <see cref="T:System.Windows.Controls.ToolTip"></see> remains open until the user clicks the mouse when the mouse is not over the <see cref="T:System.Windows.Controls.ToolTip"></see>.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.ToolTip"></see> stays open until it is closed by the user clicking the mouse button outside the <see cref="T:System.Windows.Controls.ToolTip"></see>; otherwise, false. The default value is true.</returns>
			<exception cref="T:System.NotSupportedException">Occurs when <see cref="P:System.Windows.Controls.ToolTip.StaysOpen"></see> is set to false when a tooltip is not open.</exception>
		</member>
		<member name="P:System.Windows.Controls.ToolTip.VerticalOffset">
			<summary>Gets or sets the offset from the top of the area that is specified for the <see cref="T:System.Windows.Controls.ToolTip"></see> control content.</summary>
			<returns>A value that specifies a vertical distance from the position that is specified by the <see cref="P:System.Windows.Controls.ToolTip.Placement"></see>, <see cref="P:System.Windows.Controls.ToolTip.PlacementRectangle"></see>, and <see cref="P:System.Windows.Controls.ToolTip.PlacementTarget"></see> property values. These three values define where the <see cref="T:System.Windows.Controls.ToolTip"></see> should be placed and the vertical offset provides fine-tuning. The default value is zero (0).</returns>
		</member>
		<member name="T:System.Windows.Controls.ToolTipEventArgs">
			<summary>Provides event information for events that occur when a tooltip opens or closes. This class cannot be inherited.</summary>
		</member>
		<member name="T:System.Windows.Controls.ToolTipEventHandler">
			<summary>Represents the method that handles events that occur when a tooltip opens and closes.</summary>
		</member>
		<member name="T:System.Windows.Controls.ToolTipService">
			<summary>Represents a service that provides properties and events to control the display and behavior of tooltips. This class cannot be inherited.</summary>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.BetweenShowDelayProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.HasDropShadowProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.HorizontalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.InitialShowDelayProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.IsEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled"></see> attached property. </summary>
			<returns>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.IsOpenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.PlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.Placement"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.Placement"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.PlacementRectangleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.PlacementTargetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.ShowDurationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.ShowOnDisabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent">
			<summary>Identifies the <see cref="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent"></see> event that is exposed by objects that use the <see cref="T:System.Windows.Controls.ToolTipService"></see> service to display tooltips. </summary>
			<returns>The identifier for the <see cref="F:System.Windows.Controls.ToolTipService.ToolTipClosingEvent"></see> event.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent">
			<summary>Identifies the <see cref="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent"></see> event that is exposed by objects that use the <see cref="T:System.Windows.Controls.ToolTipService"></see> service to display tooltips. </summary>
			<returns>The identifier for the <see cref="F:System.Windows.Controls.ToolTipService.ToolTipOpeningEvent"></see> event.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.ToolTipProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.ToolTipService.VerticalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetBetweenShowDelay(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetHasDropShadow(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow"></see> attached property for an object. </summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetHorizontalOffset(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetInitialShowDelay(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetIsEnabled(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetIsOpen(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsOpen"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.IsOpen"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetPlacement(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.Placement"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.Placement"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetPlacementRectangle(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetPlacementTarget(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget"></see> attached property for an object. </summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetShowDuration(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration"></see> attached property for an object. </summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetShowOnDisabled(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled"></see> attached property for an object. </summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetToolTip(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.GetVerticalOffset(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset"></see> attached property for an object.</summary>
			<returns>The object's <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset"></see> property value.</returns>
			<param name="element">The object from which the property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetBetweenShowDelay(System.Windows.DependencyObject,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.BetweenShowDelay"></see> attached property for an object. </summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetHasDropShadow(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HasDropShadow"></see> attached property for an object.</summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetHorizontalOffset(System.Windows.DependencyObject,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.HorizontalOffset"></see> attached property for an object.</summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetInitialShowDelay(System.Windows.DependencyObject,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> attached property for an object.</summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetIsEnabled(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.IsEnabled"></see> attached property for an object. </summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetPlacement(System.Windows.DependencyObject,System.Windows.Controls.Primitives.PlacementMode)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.Placement"></see> attached property for an object. </summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetPlacementRectangle(System.Windows.DependencyObject,System.Windows.Rect)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle"></see> attached property for an object. </summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetPlacementTarget(System.Windows.DependencyObject,System.Windows.UIElement)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget"></see> attached property for an object. </summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetShowDuration(System.Windows.DependencyObject,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowDuration"></see> attached property for an object. </summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetShowOnDisabled(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ShowOnDisabled"></see> attached property for an object. </summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetToolTip(System.Windows.DependencyObject,System.Object)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.ToolTip"></see>attached property for an object.</summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The value to set.</param>
		</member>
		<member name="M:System.Windows.Controls.ToolTipService.SetVerticalOffset(System.Windows.DependencyObject,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.ToolTipService.VerticalOffset"></see> attached property for an object.</summary>
			<param name="element">The object to which the attached property is written.</param>
			<param name="value">The desired value.</param>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.BetweenShowDelay">
			<summary>Gets or sets the maximum time between the display of two tooltips where the second tooltip appears without a delay.</summary>
			<returns>An integer value that represents the delay time in milliseconds. The default value is 100 milliseconds.</returns>
			<exception cref="T:System.ArgumentNullException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> property is less than zero (0).</exception>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.HasDropShadow">
			<summary>Gets or sets whether the tooltip displays a drop shadow effect.</summary>
			<returns>true if a drop shadow effect appears with the tooltip; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.HorizontalOffset">
			<summary>Gets or sets the offset from the left of the area that is specified for the tooltip by the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle"></see> and <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget"></see> properties.</summary>
			<returns>A value that specifies a horizontal distance. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.InitialShowDelay">
			<summary>Gets or sets the length of time before a tooltip opens. </summary>
			<returns>An integer value that represents the display delay time in milliseconds. The default value is <see cref="P:System.Windows.SystemParameters.MouseHoverTime"></see> in milliseconds.</returns>
			<exception cref="T:System.ArgumentNullException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> property is less than zero (0).</exception>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.IsEnabled">
			<summary>Gets or sets whether a tooltip appears.</summary>
			<returns>true if the tooltip appears when the user pauses the mouse pointer over the object that defines the tooltip; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.IsOpen">
			<summary>Gets whether a tooltip is currently visible. </summary>
			<returns>true if the tooltip is visible; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.Placement">
			<summary>Gets or sets the orientation of the tooltip when it opens, and specifies how the tooltip behaves when it overlaps screen boundaries.</summary>
			<returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode"></see> enumeration value that determines the orientation of the tooltip when it opens, and that specifies how the tooltip interacts with screen boundaries. The default value is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Mouse"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.PlacementRectangle">
			<summary>Gets or sets the rectangular area relative to which the tooltip is positioned.</summary>
			<returns>A <see cref="T:System.Windows.Rect"></see> structure that defines the rectangle that is used to position the <see cref="T:System.Windows.Controls.ToolTip"></see> control. The default value is <see cref="P:System.Windows.Rect.Empty"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.PlacementTarget">
			<summary>Gets or sets the object relative to which the tooltip is positioned.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> that is the logical parent of the <see cref="T:System.Windows.Controls.ToolTip"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.ShowDuration">
			<summary>Gets or sets the amount of time that a tooltip remains visible.</summary>
			<returns>An integer value that represents the display time in milliseconds. The default value is 5000 milliseconds.</returns>
			<exception cref="T:System.ArgumentNullException">The value of the <see cref="P:System.Windows.Controls.ToolTipService.InitialShowDelay"></see> property is less than zero (0).</exception>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.ShowOnDisabled">
			<summary>Gets or sets whether a tooltip appears for an object that is not enabled.</summary>
			<returns>true if the tooltip appears when the object is not enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.ToolTip">
			<summary>Gets or sets the content of a tooltip.</summary>
			<returns>A <see cref="T:System.Windows.DependencyObject"></see> element that defines the content for a tooltip. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.ToolTipService.VerticalOffset">
			<summary>Gets or sets the distance from the top of the area that is specified for the tooltip by the <see cref="P:System.Windows.Controls.ToolTipService.PlacementRectangle"></see> and <see cref="P:System.Windows.Controls.ToolTipService.PlacementTarget"></see> properties.</summary>
			<returns>A value that specifies a vertical distance. The default value is zero (0).</returns>
		</member>
		<member name="T:System.Windows.Controls.TreeView">
			<summary>Represents a control that displays hierarchical data in a tree structure that has items that can expand and collapse. </summary>
		</member>
		<member name="M:System.Windows.Controls.TreeView.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeView"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.TreeView.SelectedItemChanged">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem"></see> changes.</summary>
		</member>
		<member name="F:System.Windows.Controls.TreeView.SelectedItemChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.TreeView.SelectedItemProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedItem"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedItem"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TreeView.SelectedValuePathProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.TreeView.SelectedValueProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TreeView.SelectedValue"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="F:System.Windows.Controls.TreeView.SelectedValuePathProperty"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.TreeView.GetContainerForItemOverride">
			<summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem"></see> to use to display content.</summary>
			<returns>A new <see cref="T:System.Windows.Controls.TreeViewItem"></see> to use as a container for content.</returns>
		</member>
		<member name="M:System.Windows.Controls.TreeView.IsItemItsOwnContainerOverride(System.Object)">
			<summary>Determines whether the specified item is its own container or can be its own container.</summary>
			<returns>true if item is a <see cref="T:System.Windows.Controls.TreeViewItem"></see>; otherwise, false.</returns>
			<param name="item">The object to evaluate.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeView.OnCreateAutomationPeer">
			<summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.TreeView"></see> control.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewAutomationPeer"></see> for the <see cref="T:System.Windows.Controls.TreeView"></see> control.</returns>
		</member>
		<member name="M:System.Windows.Controls.TreeView.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Provides class handling for an <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged"></see> event when the keyboard focus changes for a <see cref="T:System.Windows.Controls.TreeView"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Provides class handling for an <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event that occurs when there is a change in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeView.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown"></see> event for a <see cref="T:System.Windows.Controls.TreeView"></see>.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeView.OnSelectedItemChanged(System.Windows.RoutedPropertyChangedEventArgs{System.Object})">
			<summary>Raises the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged"></see> event when the <see cref="P:System.Windows.Controls.TreeView.SelectedItem"></see> property value changes.</summary>
			<param name="e">Provides the item that was previously selected and the item that is currently selected for the <see cref="E:System.Windows.Controls.TreeView.SelectedItemChanged"></see> event.</param>
		</member>
		<member name="P:System.Windows.Controls.TreeView.HandlesScrolling">
			<summary>Gets whether the <see cref="T:System.Windows.Controls.TreeView"></see> can scroll.</summary>
			<returns>Always returns true because the control has a <see cref="T:System.Windows.Controls.ScrollViewer"></see> in its style.</returns>
		</member>
		<member name="P:System.Windows.Controls.TreeView.SelectedItem">
			<summary>Gets the selected item in a <see cref="T:System.Windows.Controls.TreeView"></see>.</summary>
			<returns>The selected object in the <see cref="T:System.Windows.Controls.TreeView"></see>, or null if no item is selected. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.TreeView.SelectedValue">
			<summary>Gets the value of the component of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem"></see> at the specified <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath"></see>. </summary>
			<returns>The object that is at the specified <see cref="P:System.Windows.Controls.TreeView.SelectedValuePath"></see> of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem"></see>, or null if no item is selected. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.TreeView.SelectedValuePath">
			<summary>Gets or sets the path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue"></see> of the <see cref="P:System.Windows.Controls.TreeView.SelectedItem"></see> in a <see cref="T:System.Windows.Controls.TreeView"></see>.</summary>
			<returns>A string that contains the path that is used to get the <see cref="P:System.Windows.Controls.TreeView.SelectedValue"></see>. The default value is String.Empty.</returns>
		</member>
		<member name="T:System.Windows.Controls.TreeViewItem">
			<summary>Implements a selectable item in a <see cref="T:System.Windows.Controls.TreeView"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.TreeViewItem"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.TreeViewItem.Collapsed">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded"></see> property changes from true to false.</summary>
		</member>
		<member name="E:System.Windows.Controls.TreeViewItem.Expanded">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded"></see> property changes from false to true.</summary>
		</member>
		<member name="E:System.Windows.Controls.TreeViewItem.Selected">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected"></see> property of a <see cref="T:System.Windows.Controls.TreeViewItem"></see> changes from false to true.</summary>
		</member>
		<member name="E:System.Windows.Controls.TreeViewItem.Unselected">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected"></see> property of a <see cref="T:System.Windows.Controls.TreeViewItem"></see> changes from true to false.</summary>
		</member>
		<member name="F:System.Windows.Controls.TreeViewItem.CollapsedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed"></see> routed_event. This field is read-only.</summary>
		</member>
		<member name="F:System.Windows.Controls.TreeViewItem.ExpandedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.TreeViewItem.Expanded"></see> routed_event. </summary>
		</member>
		<member name="F:System.Windows.Controls.TreeViewItem.IsExpandedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.TreeViewItem.IsSelectedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.TreeViewItem.IsSelectionActiveProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelectionActive"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.TreeViewItem.SelectedEvent">
			<summary>Identified by the <see cref="E:System.Windows.Controls.TreeViewItem.Selected"></see> routed_event. This field is read-only.</summary>
		</member>
		<member name="F:System.Windows.Controls.TreeViewItem.UnselectedEvent">
			<summary>Identified by the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected"></see> routed_event. </summary>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.GetContainerForItemOverride">
			<summary>Creates a new <see cref="T:System.Windows.Controls.TreeViewItem"></see> to use to display the object.</summary>
			<returns>A new <see cref="T:System.Windows.Controls.TreeViewItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.IsItemItsOwnContainerOverride(System.Object)">
			<summary>Determines whether an object is a <see cref="T:System.Windows.Controls.TreeViewItem"></see>.</summary>
			<returns>true if item is a <see cref="T:System.Windows.Controls.TreeViewItem"></see>; otherwise, false.</returns>
			<param name="item">The object to evaluate.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnCollapsed(System.Windows.RoutedEventArgs)">
			<summary>Raises a <see cref="E:System.Windows.Controls.TreeViewItem.Collapsed"></see> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded"></see> property changes from true to false. </summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnCreateAutomationPeer">
			<summary>Defines an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.TreeViewItem"></see>. </summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.TreeViewItemAutomationPeer"></see> object for the <see cref="T:System.Windows.Controls.TreeViewItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnExpanded(System.Windows.RoutedEventArgs)">
			<summary>Raises an <see cref="E:System.Windows.Controls.TreeViewItem.Expanded"></see> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsExpanded"></see> property changes from false to true.</summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnGotFocus(System.Windows.RoutedEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.GotFocus"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event that occurs when there is a change in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Provides class handling for a <see cref="E:System.Windows.UIElement.KeyDown"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for a <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnSelected(System.Windows.RoutedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Selected"></see> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected"></see> property changes from false to true.</summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnUnselected(System.Windows.RoutedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Controls.TreeViewItem.Unselected"></see> event when the <see cref="P:System.Windows.Controls.TreeViewItem.IsSelected"></see> property changes from true to false.</summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.TreeViewItem.OnVisualParentChanged(System.Windows.DependencyObject)">
			<summary>Responds to a change in the visual parent of a <see cref="T:System.Windows.Controls.TreeViewItem"></see>.</summary>
			<param name="oldParent">The previous visual parent.</param>
		</member>
		<member name="P:System.Windows.Controls.TreeViewItem.IsExpanded">
			<summary>Gets or sets whether the nested items in a <see cref="T:System.Windows.Controls.TreeViewItem"></see> are expanded or collapsed.</summary>
			<returns>true if the nested items of a <see cref="T:System.Windows.Controls.TreeViewItem"></see> are visible; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.TreeViewItem.IsSelected">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Controls.TreeViewItem"></see> control is selected.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.TreeViewItem"></see> is selected; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.TreeViewItem.IsSelectionActive">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Controls.TreeViewItem"></see> has keyboard focus.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.TreeViewItem"></see> has keyboard focus; otherwise, false. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.UIElementCollection">
			<summary>Represents an ordered collection of UIElements. </summary>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.#ctor(System.Windows.UIElement,System.Windows.FrameworkElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.UIElementCollection"></see> class. </summary>
			<param name="logicalParent">The logical parent of the elements in the collection.</param>
			<param name="visualParent">The <see cref="T:System.Windows.UIElement"></see> parent of the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.Add(System.Windows.UIElement)">
			<summary>Adds the specified element to the <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<returns>The index position of the added element.</returns>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> to add.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.ClearLogicalParent(System.Windows.UIElement)">
			<summary>Clears the logical parent of an element when the element leaves a <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> whose logical parent is being cleared.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.Contains(System.Windows.UIElement)">
			<summary>Determines whether a specified element is in the <see cref="T:System.Windows.Controls.UIElementCollection"></see>.</summary>
			<returns>true if the specified <see cref="T:System.Windows.UIElement"></see> is found in the collection; otherwise, false.</returns>
			<param name="element">The element to find.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies a <see cref="T:System.Windows.UIElement"></see> from a <see cref="T:System.Windows.Controls.UIElementCollection"></see> to an array, starting at a specified index position. </summary>
			<param name="array">An array into which the collection is copied.</param>
			<param name="index">The index position of the element where copying begins.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.CopyTo(System.Windows.UIElement[],System.Int32)">
			<summary>Copies a <see cref="T:System.Windows.UIElement"></see> from a <see cref="T:System.Windows.Controls.UIElementCollection"></see> to an array, starting at a specified index position. </summary>
			<param name="array">An array of <see cref="T:System.Windows.UIElement"></see> objects.</param>
			<param name="index">The index position of the element where copying begins.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.GetEnumerator">
			<summary>Returns an enumerator that can iterate the <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> that can list the members of this collection.</returns>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.IndexOf(System.Windows.UIElement)">
			<summary>Returns the index position of a specified element in a <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<returns>The index position of the element.</returns>
			<param name="element">The element whose index position is required.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.Insert(System.Int32,System.Windows.UIElement)">
			<summary>Inserts an element into a <see cref="T:System.Windows.Controls.UIElementCollection"></see> at the specified index position. </summary>
			<param name="element">The element to insert into the <see cref="T:System.Windows.Controls.UIElementCollection"></see>.</param>
			<param name="index">The index position where you want to insert the element.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.Remove(System.Windows.UIElement)">
			<summary>Removes the specified element from a <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<param name="element">The element to remove from the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.RemoveAt(System.Int32)">
			<summary>Removes the <see cref="T:System.Windows.UIElement"></see> at the specified index. </summary>
			<param name="index">The index of the <see cref="T:System.Windows.UIElement"></see> that you want to remove.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.RemoveRange(System.Int32,System.Int32)">
			<summary>Removes a range of elements from a <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<param name="count">The number of elements to remove.</param>
			<param name="index">The index position of the element where removal begins.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.SetLogicalParent(System.Windows.UIElement)">
			<summary>Sets the logical parent of an element in a <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> whose logical parent is set.</param>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.UIElementCollection.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.UIElementCollection.Capacity">
			<summary>Gets or sets the number of elements that the <see cref="T:System.Windows.Controls.UIElementCollection"></see> can contain. </summary>
			<returns>The total number of elements the collection can contain.</returns>
		</member>
		<member name="P:System.Windows.Controls.UIElementCollection.Count">
			<summary>Gets the actual number of elements in the collection. </summary>
			<returns>The actual number of elements in the collection.</returns>
		</member>
		<member name="P:System.Windows.Controls.UIElementCollection.IsSynchronized">
			<summary>Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection"></see> interface is synchronized (thread-safe).</summary>
			<returns>true if access to the collection is synchronized; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.UIElementCollection.Item(System.Int32)">
			<summary>Gets or sets the <see cref="T:System.Windows.UIElement"></see> stored at the zero-based index position of the <see cref="T:System.Windows.Controls.UIElementCollection"></see>. </summary>
			<returns>A <see cref="T:System.Windows.UIElement"></see> at the specified index position.</returns>
			<param name="index">The index position of the <see cref="T:System.Windows.UIElement"></see>.</param>
		</member>
		<member name="P:System.Windows.Controls.UIElementCollection.SyncRoot">
			<summary>Gets an object that you can use to synchronize access to the <see cref="T:System.Collections.ICollection"></see> interface. </summary>
			<returns><see cref="T:System.Object"></see> that you can use to synchronize access to the <see cref="T:System.Collections.ICollection"></see> interface.</returns>
		</member>
		<member name="T:System.Windows.Controls.UndoAction">
			<summary> How the undo stack caused or is affected by a text change. </summary>
		</member>
		<member name="F:System.Windows.Controls.UndoAction.Clear">
			<summary> This change will clear the undo stack </summary>
		</member>
		<member name="F:System.Windows.Controls.UndoAction.Create">
			<summary> This change will create a new undo unit </summary>
		</member>
		<member name="F:System.Windows.Controls.UndoAction.Merge">
			<summary> This change will merge into the previous undo unit </summary>
		</member>
		<member name="F:System.Windows.Controls.UndoAction.None">
			<summary> This change will not affect the undo stack at all </summary>
		</member>
		<member name="F:System.Windows.Controls.UndoAction.Redo">
			<summary> This change is the result of a call to Redo() </summary>
		</member>
		<member name="F:System.Windows.Controls.UndoAction.Undo">
			<summary> This change is the result of a call to Undo() </summary>
		</member>
		<member name="T:System.Windows.Controls.UserControl">
			<summary>Provides a simple way to create a control.</summary>
		</member>
		<member name="M:System.Windows.Controls.UserControl.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.UserControl"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.UserControl.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for this <see cref="T:System.Windows.Controls.UserControl"></see>.</summary>
			<returns>A new <see cref="T:System.Windows.Automation.Peers.UserControlAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.UserControl"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.Validation">
			<summary>Provides methods and attached properties that support data validation. This class cannot be inherited.</summary>
		</member>
		<member name="F:System.Windows.Controls.Validation.ErrorEvent">
			<summary>Identifies the <see cref="T:System.Windows.Controls.Validation"></see>.<see cref="E:System.Windows.Controls.Validation.Error"></see> attached event.</summary>
			<returns>The identifier for the <see cref="T:System.Windows.Controls.Validation"></see>.<see cref="E:System.Windows.Controls.Validation.Error"></see> attached event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Validation.ErrorsProperty">
			<summary>Identifies the <see cref="T:System.Windows.Controls.Validation"></see>.<see cref="P:System.Windows.Controls.Validation.Errors"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.Errors"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Validation.ErrorTemplateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Validation.HasErrorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Validation.HasError"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Validation.HasError"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Validation.AddErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
			<summary>Adds an event handler for the <see cref="T:System.Windows.Controls.Validation"></see>.<see cref="E:System.Windows.Controls.Validation.Error"></see>attached event to the specified object.</summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> object to add handler to.</param>
			<param name="handler">The handler to add.</param>
		</member>
		<member name="M:System.Windows.Controls.Validation.ClearInvalid(System.Windows.Data.BindingExpressionBase)">
			<summary>Removes all <see cref="T:System.Windows.Controls.ValidationError"></see> objects from the specified <see cref="T:System.Windows.Data.BindingExpressionBase"></see> object.</summary>
			<param name="bindingExpression">The object to turn valid.</param>
			<exception cref="T:System.ArgumentNullException">If bindingExpression is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Validation.GetErrors(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.Errors"></see> attached property of the specified element.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1"></see> of <see cref="T:System.Windows.Controls.ValidationError"></see> objects.</returns>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> object to read the value from.</param>
			<exception cref="T:System.ArgumentNullException">If element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Validation.GetErrorTemplate(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate"></see> attached property of the specified element.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ControlTemplate"></see> used to generate validation error feedback on the adorner layer.</returns>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> object to read the value from.</param>
			<exception cref="T:System.ArgumentNullException">If element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Validation.GetHasError(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Validation.HasError"></see> attached property of the specified element.</summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> object to read the value from.</param>
			<exception cref="T:System.ArgumentNullException">If element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)">
			<summary>Marks the specified <see cref="T:System.Windows.Data.BindingExpression"></see> object as invalid with the specified <see cref="T:System.Windows.Controls.ValidationError"></see> object.</summary>
			<param name="validationError">The <see cref="T:System.Windows.Controls.ValidationError"></see> object to use.</param>
			<param name="bindingExpression">The <see cref="T:System.Windows.Data.BindingExpression"></see> object to mark as invalid.</param>
			<exception cref="T:System.ArgumentNullException">If validationError is null.</exception>
			<exception cref="T:System.ArgumentNullException">If bindingExpression is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Validation.RemoveErrorHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Controls.ValidationErrorEventArgs})">
			<summary>Adds an event handler for the <see cref="T:System.Windows.Controls.Validation"></see>.<see cref="E:System.Windows.Controls.Validation.Error"></see>attached event from the specified object.</summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> object to remove handler from.</param>
			<param name="handler">The handler to remove.</param>
		</member>
		<member name="M:System.Windows.Controls.Validation.SetErrorTemplate(System.Windows.DependencyObject,System.Windows.Controls.ControlTemplate)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.Validation.ErrorTemplate"></see> attached property to the specified element.</summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> object to set value on.</param>
			<param name="value">The <see cref="T:System.Windows.Controls.ControlTemplate"></see> to use to generate validation error feedback on the adorner layer.</param>
			<exception cref="T:System.ArgumentNullException">If element is null.</exception>
		</member>
		<member name="P:System.Windows.Controls.Validation.Errors">
			<summary>Gets the collection of all active <see cref="T:System.Windows.Controls.ValidationError"></see> objects on the bound element.</summary>
			<returns>A read-only collection of all active <see cref="T:System.Windows.Controls.ValidationError"></see> objects on the bound element, The default is an empty collection.</returns>
		</member>
		<member name="P:System.Windows.Controls.Validation.ErrorTemplate">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.ControlTemplate"></see> used to generate validation error feedback on the adorner layer.</summary>
			<returns>The default template defines a red border around the element being adorned.</returns>
		</member>
		<member name="P:System.Windows.Controls.Validation.HasError">
			<summary>Gets a value that indicates whether any binding on the binding target element has a <see cref="T:System.Windows.Controls.ValidationError"></see>.</summary>
			<returns>Set to true if any binding on the bound element has a non-empty <see cref="P:System.Windows.Controls.Validation.Errors"></see> collection; otherwise, false. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.ValidationError">
			<summary>Represents a validation error that is created either by the binding engine when a <see cref="T:System.Windows.Controls.ValidationRule"></see> reports a validation error, or through the <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)"></see> method explicitly.</summary>
		</member>
		<member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationError"></see> class with the specified parameters.</summary>
			<param name="bindingInError">The <see cref="T:System.Windows.Data.BindingExpression"></see> or <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object with the validation error.</param>
			<param name="ruleInError">The rule that detected validation error.</param>
		</member>
		<member name="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationError"></see> class with the specified parameters.</summary>
			<param name="exception">The exception that caused the validation failure. This parameter is optional and can be set to null.</param>
			<param name="bindingInError">The <see cref="T:System.Windows.Data.BindingExpression"></see> or <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object with the validation error.</param>
			<param name="errorContent">Information about the error.</param>
			<param name="ruleInError">The rule that detected validation error.</param>
		</member>
		<member name="P:System.Windows.Controls.ValidationError.BindingInError">
			<summary>Gets the <see cref="T:System.Windows.Data.BindingExpression"></see> or <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object of this <see cref="T:System.Windows.Controls.ValidationError"></see>. The object is either marked invalid explicitly or has a failed validation rule.</summary>
			<returns>The <see cref="T:System.Windows.Data.BindingExpression"></see> or <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object of this <see cref="T:System.Windows.Controls.ValidationError"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ValidationError.ErrorContent">
			<summary>Gets or sets an object that provides additional context for this <see cref="T:System.Windows.Controls.ValidationError"></see>, such as a string describing the error.</summary>
			<returns>An object that provides additional context for this <see cref="T:System.Windows.Controls.ValidationError"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ValidationError.Exception">
			<summary>Gets or sets the <see cref="T:System.Exception"></see> object that was the cause of this <see cref="T:System.Windows.Controls.ValidationError"></see>, if the error is the result of an exception.</summary>
			<returns>The <see cref="T:System.Exception"></see> object, if the error is the result of an exception.</returns>
		</member>
		<member name="P:System.Windows.Controls.ValidationError.RuleInError">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.ValidationRule"></see> object that was the cause of this <see cref="T:System.Windows.Controls.ValidationError"></see>, if the error is the result of a validation rule.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ValidationRule"></see> object, if the error is the result of a validation rule.</returns>
		</member>
		<member name="T:System.Windows.Controls.ValidationErrorEventAction">
			<summary>Describes whether a <see cref="T:System.Windows.Controls.ValidationError"></see> object has been added or cleared.</summary>
		</member>
		<member name="F:System.Windows.Controls.ValidationErrorEventAction.Added">
			<summary>A new <see cref="T:System.Windows.Controls.ValidationError"></see> object has been detected.</summary>
		</member>
		<member name="F:System.Windows.Controls.ValidationErrorEventAction.Removed">
			<summary>An existing <see cref="T:System.Windows.Controls.ValidationError"></see> object has been cleared.</summary>
		</member>
		<member name="T:System.Windows.Controls.ValidationErrorEventArgs">
			<summary>Provides information for the <see cref="E:System.Windows.Controls.Validation.Error"></see> attached event.</summary>
		</member>
		<member name="M:System.Windows.Controls.ValidationErrorEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Invokes the specified handler in a type-specific way on the specified object.</summary>
			<param name="genericTarget">The object to invoke the handler on.</param>
			<param name="genericHandler">The generic handler to call in a type-specific way.</param>
		</member>
		<member name="P:System.Windows.Controls.ValidationErrorEventArgs.Action">
			<summary>Gets a value that indicates whether the error is a new error or an existing error that has now been cleared.</summary>
			<returns>A <see cref="T:System.Windows.Controls.ValidationErrorEventAction"></see> value that indicates whether the error is a new error or an existing error that has now been cleared.</returns>
		</member>
		<member name="P:System.Windows.Controls.ValidationErrorEventArgs.Error">
			<summary>Gets the error that caused this <see cref="E:System.Windows.Controls.Validation.Error"></see> event.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ValidationError"></see> object that caused this <see cref="E:System.Windows.Controls.Validation.Error"></see> event.</returns>
		</member>
		<member name="T:System.Windows.Controls.ValidationResult">
			<summary>Represents the result returned by the <see cref="T:System.Windows.Controls.ValidationRule"></see>.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)"></see> method that indicates whether the checked value passed the <see cref="T:System.Windows.Controls.ValidationRule"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationResult"></see> class.</summary>
			<param name="isValid">Whether or not the value checked against the <see cref="T:System.Windows.Controls.ValidationRule"></see> is valid.</param>
			<param name="errorContent">Information about the invalidity.</param>
		</member>
		<member name="M:System.Windows.Controls.ValidationResult.Equals(System.Object)">
			<summary>Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.ValidationResult"></see> for value equality.</summary>
			<returns>true if obj and this instance of <see cref="T:System.Windows.Controls.ValidationResult"></see>.have the same values.</returns>
			<param name="obj">The <see cref="T:System.Windows.Controls.ValidationResult"></see> instance to compare.</param>
		</member>
		<member name="M:System.Windows.Controls.ValidationResult.GetHashCode">
			<summary>Returns the hash code for this <see cref="T:System.Windows.Controls.ValidationResult"></see>.</summary>
			<returns>The hash code for this <see cref="T:System.Windows.Controls.ValidationResult"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
			<summary>Compares two <see cref="T:System.Windows.Controls.ValidationResult"></see> objects for value equality.</summary>
			<returns>true if the two objects are equal; otherwise, false.</returns>
			<param name="right">The second instance to compare.</param>
			<param name="left">The first instance to compare.</param>
		</member>
		<member name="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)">
			<summary>Compares two <see cref="T:System.Windows.Controls.ValidationResult"></see> objects for value inequality.</summary>
			<returns>true if the values are not equal; otherwise, false.</returns>
			<param name="right">The second instance to compare.</param>
			<param name="left">The first instance to compare.</param>
		</member>
		<member name="P:System.Windows.Controls.ValidationResult.ErrorContent">
			<summary>Gets an object that provides additional information about the invalidity.</summary>
			<returns>An object that provides additional information about the invalidity.</returns>
		</member>
		<member name="P:System.Windows.Controls.ValidationResult.IsValid">
			<summary>Gets a value that indicates whether the value checked against the <see cref="T:System.Windows.Controls.ValidationRule"></see> is valid.</summary>
			<returns>true if the value is valid; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.ValidationResult.ValidResult">
			<summary>Gets a valid instance of <see cref="T:System.Windows.Controls.ValidationResult"></see>.</summary>
			<returns>A valid instance of <see cref="T:System.Windows.Controls.ValidationResult"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.ValidationRule">
			<summary>Provides a way to create a custom rule in order to check the validity of user input. This is an abstract class.</summary>
		</member>
		<member name="M:System.Windows.Controls.ValidationRule.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationRule"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)">
			<summary>When overridden in a derived class, performs validation checks on a value.</summary>
			<returns>Returns a <see cref="T:System.Windows.Controls.ValidationResult"></see> object.</returns>
			<param name="cultureInfo">The culture to use in this rule.</param>
			<param name="value">The value from the binding target to check.</param>
		</member>
		<member name="T:System.Windows.Controls.ViewBase">
			<summary>Represents the base class for views that define the appearance of data in a <see cref="T:System.Windows.Controls.ListView"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.ViewBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.ViewBase"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.ViewBase.ClearItem(System.Windows.Controls.ListViewItem)">
			<summary>Removes all bindings and styling that are set for an item.</summary>
			<param name="item">The <see cref="T:System.Windows.Controls.ListViewItem"></see> to remove settings from.</param>
		</member>
		<member name="M:System.Windows.Controls.ViewBase.GetAutomationPeer(System.Windows.Controls.ListView)">
			<summary>Is called when a <see cref="T:System.Windows.Controls.ListView"></see> control creates a <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see> for its <see cref="P:System.Windows.Controls.ListView.View"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Automation.Peers.IViewAutomationPeer"></see> interface that implements the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see> for a custom <see cref="P:System.Windows.Controls.ListView.View"></see>. </returns>
			<param name="parent">The <see cref="T:System.Windows.Controls.ListView"></see> control to use to create the <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.ViewBase.PrepareItem(System.Windows.Controls.ListViewItem)">
			<summary>Prepares an item in the view for display, by setting bindings and styles.</summary>
			<param name="item">The item to prepare for display.</param>
		</member>
		<member name="P:System.Windows.Controls.ViewBase.DefaultStyleKey">
			<summary>Gets the object that is associated with the style for the view mode.</summary>
			<returns>The style to use for the view mode. The default value is the style for the <see cref="T:System.Windows.Controls.ListBox"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.ViewBase.ItemContainerDefaultStyleKey">
			<summary>Gets the style to use for the items in the view mode.</summary>
			<returns>The style of a <see cref="T:System.Windows.Controls.ListViewItem"></see>. The default value is the style for the <see cref="T:System.Windows.Controls.ListBoxItem"></see> control.</returns>
		</member>
		<member name="T:System.Windows.Controls.Viewbox">
			<summary>Defines a content decorator that can stretch and scale a single child to fill the available space.</summary>
		</member>
		<member name="M:System.Windows.Controls.Viewbox.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Viewbox"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Viewbox.StretchDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.StretchDirection"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Viewbox.StretchDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Viewbox.StretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Viewbox.Stretch"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Viewbox.Stretch"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Viewbox.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.Viewbox"></see> element.</summary>
			<returns><see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.Viewbox"></see> element and its child elements.</returns>
			<param name="arrangeSize">The <see cref="T:System.Windows.Size"></see> this element uses to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.Viewbox.GetVisualChild(System.Int32)">
			<summary>Gets a <see cref="T:System.Windows.Media.Visual"></see> child at the specified index position.</summary>
			<returns>A <see cref="T:System.Windows.Media.Visual"></see> child of the parent <see cref="T:System.Windows.Controls.Viewbox"></see> element.</returns>
			<param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual"></see> child.</param>
		</member>
		<member name="M:System.Windows.Controls.Viewbox.MeasureOverride(System.Windows.Size)">
			<summary>Measures the child elements of a <see cref="T:System.Windows.Controls.Viewbox"></see> prior to arranging them during the <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the element size you want.</returns>
			<param name="c onstraint">A <see cref="T:System.Windows.Size"></see> limit that <see cref="T:System.Windows.Controls.Viewbox"></see> cannot exceed.</param>
		</member>
		<member name="P:System.Windows.Controls.Viewbox.Child">
			<summary>Gets or sets the single child of a <see cref="T:System.Windows.Controls.Viewbox"></see> element. </summary>
			<returns>The single child of a <see cref="T:System.Windows.Controls.Viewbox"></see> element. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Viewbox.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of this <see cref="T:System.Windows.Controls.Viewbox"></see> element.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Viewbox.Stretch">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.Viewbox"></see> <see cref="T:System.Windows.Media.Stretch"></see> mode, which determines how content fits into the available space.</summary>
			<returns>A <see cref="T:System.Windows.Media.Stretch"></see> that determines how content fits in the available space. The default is <see cref="F:System.Windows.Media.Stretch.Uniform"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Viewbox.StretchDirection">
			<summary>Gets or sets the <see cref="T:System.Windows.Controls.StretchDirection"></see>, which determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.StretchDirection"></see> that determines how scaling is applied to the contents of a <see cref="T:System.Windows.Controls.Viewbox"></see>. The default is <see cref="F:System.Windows.Controls.StretchDirection.Both"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Viewbox.VisualChildrenCount">
			<summary>Gets the number of child <see cref="T:System.Windows.Media.Visual"></see> objects in this instance of <see cref="T:System.Windows.Controls.Viewbox"></see>.</summary>
			<returns>The number of <see cref="T:System.Windows.Media.Visual"></see> children.</returns>
		</member>
		<member name="T:System.Windows.Controls.Viewport3D">
			<summary>Provides a rendering surface for 3-D visual content. </summary>
		</member>
		<member name="M:System.Windows.Controls.Viewport3D.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Viewport3D"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.Viewport3D.CameraProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Viewport3D.Camera"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Viewport3D.Camera"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Viewport3D.ChildrenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Viewport3D.Children"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Viewport3D.Children"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Viewport3D.ArrangeOverride(System.Windows.Size)">
			<summary>Causes the <see cref="T:System.Windows.Controls.Viewport3D"></see> to arrange its visual content to fit a specified size. </summary>
			<returns>The final size of the arranged <see cref="T:System.Windows.Controls.Viewport3D"></see>.</returns>
			<param name="finalSize">Size that <see cref="T:System.Windows.Controls.Viewport3D"></see> will assume.</param>
		</member>
		<member name="M:System.Windows.Controls.Viewport3D.GetVisualChild(System.Int32)">
			<summary>Gets the <see cref="T:System.Windows.Media.Visual"></see> at a specified position in the <see cref="P:System.Windows.Controls.Viewport3D.Children"></see> collection of the <see cref="T:System.Windows.Controls.Viewport3D"></see>.</summary>
			<returns>Visual at the specified position in the <see cref="P:System.Windows.Controls.Viewport3D.Children"></see> collection.</returns>
			<param name="index">Position of the element in the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.Viewport3D.OnCreateAutomationPeer">
			<summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.Viewport3D"></see>.</summary>
			<returns><see cref="T:System.Windows.Automation.Peers.Viewport3DAutomationPeer"></see> object for this <see cref="T:System.Windows.Controls.Viewport3D"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Viewport3D.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.Viewport3D.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.Viewport3D.Camera">
			<summary> Gets or sets a camera object that projects the 3-D contents of the <see cref="T:System.Windows.Controls.Viewport3D"></see> to the 2-D surface of the <see cref="T:System.Windows.Controls.Viewport3D"></see>. </summary>
		</member>
		<member name="P:System.Windows.Controls.Viewport3D.Children">
			<summary>Gets a collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D"></see> children of the <see cref="T:System.Windows.Controls.Viewport3D"></see>.</summary>
			<returns>Collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D"></see> children of the <see cref="T:System.Windows.Controls.Viewport3D"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Viewport3D.VisualChildrenCount">
			<summary>Gets an integer that represents the number of <see cref="T:System.Windows.Media.Visual"></see> objects in the <see cref="P:System.Windows.Media.Media3D.ModelVisual3D.Children"></see> collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D"></see>.</summary>
			<returns>Integer that represents the number of Visuals in the Children collection of the <see cref="T:System.Windows.Media.Media3D.Visual3D"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.VirtualizingPanel">
			<summary>Provides a framework for <see cref="T:System.Windows.Controls.Panel"></see> elements that virtualize their child data collection. This is an abstract class.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingPanel"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingPanel.AddInternalChild(System.Windows.UIElement)">
			<summary>Adds the specified <see cref="T:System.Windows.UIElement"></see> to the <see cref="P:System.Windows.Controls.Panel.InternalChildren"></see> collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel"></see> element.</summary>
			<param name="child">The <see cref="T:System.Windows.UIElement"></see> child to add to the collection.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingPanel.BringIndexIntoView(System.Int32)">
			<summary>When implemented in a derived class, generates the item at the specified index location and makes it visible.</summary>
			<param name="index">The index position of the item that is generated and made visible.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingPanel.InsertInternalChild(System.Int32,System.Windows.UIElement)">
			<summary>Adds the specified <see cref="T:System.Windows.UIElement"></see> to the <see cref="P:System.Windows.Controls.Panel.InternalChildren"></see> collection of a <see cref="T:System.Windows.Controls.VirtualizingPanel"></see> element at the specified index position.</summary>
			<param name="child">The <see cref="T:System.Windows.UIElement"></see> child to add to the collection.</param>
			<param name="index">The index position within the collection at which the child element is inserted.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingPanel.OnClearChildren">
			<summary>Called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
			<summary>Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl"></see> for this <see cref="T:System.Windows.Controls.Panel"></see> changes.</summary>
			<param name="sender">The <see cref="T:System.Object"></see> that raised the event.</param>
			<param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingPanel.RemoveInternalChildRange(System.Int32,System.Int32)">
			<summary>Removes child elements from the <see cref="P:System.Windows.Controls.Panel.InternalChildren"></see> collection.</summary>
			<param name="range">The total number of child elements to remove from the collection.</param>
			<param name="index">The beginning index position within the collection at which the first child element is removed.</param>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingPanel.ItemContainerGenerator">
			<summary>Gets a value that identifies the <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> for this <see cref="T:System.Windows.Controls.VirtualizingPanel"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> for this <see cref="T:System.Windows.Controls.VirtualizingPanel"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.VirtualizingStackPanel">
			<summary>Arranges and virtualizes content on a single line that is oriented either horizontally or vertically.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem">
			<summary>Occurs when an item is being re-virtualized by the <see cref="T:System.Windows.Controls.ItemsControl"></see> that is associated with this instance of <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItemEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem"></see> attached event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.VirtualizingStackPanel.OrientationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.Orientation"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.AddCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
			<summary>Adds an event handler for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem"></see> attached event.</summary>
			<param name="element">The <see cref="T:System.Windows.DependencyObject"></see> that is listening for this event.</param>
			<param name="handler">The event handler that is to be added.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> element.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> element and its child elements.</returns>
			<param name="arrangeSize">The <see cref="T:System.Windows.Size"></see> that this element should use to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.BringIndexIntoView(System.Int32)">
			<summary>Generates the item at the specified index position and brings it into view.</summary>
			<param name="index">The position of the item to generate and make visible.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">The index position does not exist in the child collection.</exception>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.GetIsVirtualizing(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing"></see> attached property.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> is virtualizing its content; otherwise false.</returns>
			<param name="o">The object from which the attached property value is read.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.LineDown">
			<summary>Scrolls content downward by one logical unit.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.LineLeft">
			<summary>Scrolls content to the left by one logical unit.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.LineRight">
			<summary>Scrolls content to the right by one logical unit.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.LineUp">
			<summary>Scrolls content upward by one logical unit.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
			<summary>Scrolls to the specified coordinates and makes that portion of a <see cref="T:System.Windows.Media.Visual"></see> visible.</summary>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> that becomes visible.</param>
			<param name="rectangle">A <see cref="T:System.Windows.Rect"></see> that represents the coordinate space within a <see cref="T:System.Windows.Media.Visual"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.MeasureOverride(System.Windows.Size)">
			<summary>Measures the child elements of a <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.VirtualizingStackPanel.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the desired size of the element.</returns>
			<param name="constraint">An upper limit <see cref="T:System.Windows.Size"></see> that should not be exceeded.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelDown">
			<summary>Scrolls content logically downward in response to a downward click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelLeft">
			<summary>Scrolls content logically to the left in response to a left click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelRight">
			<summary>Scrolls content logically to the right in response to a right click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.MouseWheelUp">
			<summary>Scrolls content logically upward in response to an upward click of the mouse wheel button.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.OnCleanUpVirtualizedItem(System.Windows.Controls.CleanUpVirtualizedItemEventArgs)">
			<summary>Is called when an item that is hosted by the <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> is re-virtualized. </summary>
			<param name="e">Data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.OnClearChildren">
			<summary>Is called when the collection of child elements is cleared by the base <see cref="T:System.Windows.Controls.Panel"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
			<summary>Is called when the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl"></see> for this <see cref="T:System.Windows.Controls.Panel"></see> changes.</summary>
			<param name="sender">The <see cref="T:System.Object"></see> that raised the event.</param>
			<param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.PageDown">
			<summary>Scrolls content downward by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.PageLeft">
			<summary>Scrolls content to the left by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.PageRight">
			<summary>Scrolls content to the right by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.PageUp">
			<summary>Scrolls content upward by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.RemoveCleanUpVirtualizedItemHandler(System.Windows.DependencyObject,System.Windows.Controls.CleanUpVirtualizedItemEventHandler)">
			<summary>Removes an event handler for the <see cref="E:System.Windows.Controls.VirtualizingStackPanel.CleanUpVirtualizedItem"></see> attached event. </summary>
			<param name="element">The <see cref="T:System.Windows.DependencyObject"></see> from which the handler is being removed.</param>
			<param name="handler">Specifies the event handler that is to be removed.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.SetHorizontalOffset(System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset"></see> property.</summary>
			<param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.SetIsVirtualizing(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="F:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizingProperty"></see> attached property.</summary>
			<param name="element">The object to which the attached property value is set.</param>
			<param name="value">true if the <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> is virtualizing; otherwise false.</param>
		</member>
		<member name="M:System.Windows.Controls.VirtualizingStackPanel.SetVerticalOffset(System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset"></see> property.</summary>
			<param name="offset">The value of the <see cref="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset"></see> property.</param>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.CanHorizontallyScroll">
			<summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> can scroll in the horizontal dimension.</summary>
			<returns>true if content can scroll in the horizontal dimension; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.CanVerticallyScroll">
			<summary>Gets or sets a value that indicates whether content can scroll in the vertical dimension.</summary>
			<returns>true if content can scroll in the vertical dimension; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentHeight">
			<summary>Gets a value that contains the vertical size of the extent. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical size of the extent. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.ExtentWidth">
			<summary>Gets a value that contains the horizontal size of the extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the horizontal size of the extent. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.HasLogicalOrientation">
			<summary>Gets a value that indicates if this <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> has a vertical or horizontal orientation.</summary>
			<returns>This property always returns true.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.HorizontalOffset">
			<summary>Gets a value that contains the horizontal offset of the scrolled content. </summary>
			<returns><see cref="T:System.Double"></see> that represents the horizontal offset of the scrolled content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.LogicalOrientation">
			<summary>Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation"></see> of the <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Controls.Orientation"></see> value.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.Orientation">
			<summary>Gets or sets a value that describes the horizontal or vertical orientation of stacked content.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Orientation"></see> of child content. The default value is <see cref="F:System.Windows.Controls.Orientation.Vertical"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.ScrollOwner">
			<summary>Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see>. </summary>
			<returns>The <see cref="T:System.Windows.Controls.ScrollViewer"></see> that owns scrolling for this <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.VerticalOffset">
			<summary>Gets a value that contains the vertical offset of the scrolled content. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical offset of the scrolled content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportHeight">
			<summary>Gets a value that contains the vertical size of the viewport of the content. </summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical size of the viewport of the content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.ViewportWidth">
			<summary>Gets a value that contains the horizontal size of the viewport of the content.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the vertical size of the viewport of the content. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.VirtualizingStackPanel.IsVirtualizing">
			<summary>Gets or sets a value that indicates that this <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> is virtualizing its child collection.</summary>
			<returns>true if this instance of <see cref="T:System.Windows.Controls.VirtualizingStackPanel"></see> is virtualizing its child collection; otherwise false. The default value is true.</returns>
		</member>
		<member name="T:System.Windows.Controls.WrapPanel">
			<summary>Positions child elements in sequential position from left to right, breaking content to the next line at the edge of the containing box. Subsequent ordering happens sequentially from top to bottom or from right to left, depending on the value of the <see cref="P:System.Windows.Controls.WrapPanel.Orientation"></see> property.</summary>
		</member>
		<member name="M:System.Windows.Controls.WrapPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.WrapPanel"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.WrapPanel.ItemHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight"></see>  dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.WrapPanel.ItemHeight"></see>  dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.WrapPanel.ItemWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth"></see>  dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.WrapPanel.ItemWidth"></see>  dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.WrapPanel.OrientationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.WrapPanel.Orientation"></see>  dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.WrapPanel.Orientation"></see>  dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content of a <see cref="T:System.Windows.Controls.WrapPanel"></see> element.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the arranged size of this <see cref="T:System.Windows.Controls.WrapPanel"></see> element and its children.</returns>
			<param name="finalSize">The <see cref="T:System.Windows.Size"></see> that this element should use to arrange its child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.WrapPanel.MeasureOverride(System.Windows.Size)">
			<summary>Measures the child elements of a <see cref="T:System.Windows.Controls.WrapPanel"></see> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)"></see> pass.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> that represents the desired size of the element.</returns>
			<param name="constraint">An upper limit <see cref="T:System.Windows.Size"></see> that should not be exceeded.</param>
		</member>
		<member name="P:System.Windows.Controls.WrapPanel.ItemHeight">
			<summary>Gets or sets a value that specifies the height of all items that are contained within a <see cref="T:System.Windows.Controls.WrapPanel"></see>.</summary>
			<returns>The <see cref="T:System.Double"></see> that represents the uniform height of all items that are contained within the <see cref="T:System.Windows.Controls.WrapPanel"></see>. The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.WrapPanel.ItemWidth">
			<summary>Gets or sets a value that specifies the width of all items that are contained within a <see cref="T:System.Windows.Controls.WrapPanel"></see>.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the uniform width of all items that are contained within the <see cref="T:System.Windows.Controls.WrapPanel"></see>. The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.WrapPanel.Orientation">
			<summary>Gets or sets a value that specifies the dimension in which child content is arranged.</summary>
			<returns>An <see cref="T:System.Windows.Controls.Orientation"></see> value that represents the physical orientation of content within the <see cref="T:System.Windows.Controls.WrapPanel"></see> as horizontal or vertical. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"></see>.</returns>
		</member>
		<member name="N:System.Windows.Controls.Primitives">
			<summary>Contains base classes and controls that are intended to be used as part of other more complex controls.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.AutoToolTipPlacement">
			<summary>Describes the means by which the automatic <see cref="T:System.Windows.Controls.ToolTip"></see> is positioned on a <see cref="T:System.Windows.Controls.Slider"></see> control.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.BottomRight">
			<summary>For a horizontal <see cref="T:System.Windows.Controls.Slider"></see> show the automatic <see cref="T:System.Windows.Controls.ToolTip"></see> at the bottom edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>. For a vertical <see cref="T:System.Windows.Controls.Slider"></see> show the automatic <see cref="T:System.Windows.Controls.ToolTip"></see> at the right edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.None">
			<summary>No automatic <see cref="T:System.Windows.Controls.ToolTip"></see></summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.AutoToolTipPlacement.TopLeft">
			<summary>For a horizontal <see cref="T:System.Windows.Controls.Slider"></see> show the automatic <see cref="T:System.Windows.Controls.ToolTip"></see> at the top edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>. For a vertical <see cref="T:System.Windows.Controls.Slider"></see> show the automatic <see cref="T:System.Windows.Controls.ToolTip"></see> at the left edge of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.BulletDecorator">
			<summary>Represents a layout control that aligns a "bullet" and another visual object.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.BulletDecorator.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.BulletDecorator.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Background"></see> dependency property. </returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.BulletDecorator.ArrangeOverride(System.Windows.Size)">
			<summary>Overrides the default content arrangement behavior for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control.</summary>
			<returns>The computed size of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control. </returns>
			<param name="arrangeSize">The available <see cref="T:System.Windows.Size"></see> to use to lay out the content of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.BulletDecorator.GetVisualChild(System.Int32)">
			<summary>Gets the child element that is at the specified index.</summary>
			<returns>The <see cref="T:System.Windows.Media.Visual"></see> child element that is at the specified index.</returns>
			<param name="index">The specified index for the child element.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">The index is not 0 or 1.</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.BulletDecorator.MeasureOverride(System.Windows.Size)">
			<summary>Overrides the default measurement behavior for the objects of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control.</summary>
			<returns>The required <see cref="T:System.Windows.Size"></see> for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control, based on the size of its <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet"></see> and <see cref="P:System.Windows.Controls.Decorator.Child"></see> objects.</returns>
			<param name="constraint">The upper <see cref="T:System.Windows.Size"></see> limit of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.BulletDecorator.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Renders the content of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control.</summary>
			<param name="dc">The <see cref="T:System.Windows.Media.DrawingContext"></see> for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see>. </param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.BulletDecorator.Background">
			<summary>Gets or sets the background color for a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control.</summary>
			<returns>The background color for the <see cref="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet"></see> and <see cref="P:System.Windows.Controls.Decorator.Child"></see> of a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.BulletDecorator.Bullet">
			<summary>Gets or sets the object to use as the bullet in a <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see>.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> to use as the bullet. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.BulletDecorator.LogicalChildren">
			<summary>Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control.</summary>
			<returns>The enumerator that provides access to the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.BulletDecorator.VisualChildrenCount">
			<summary>Gets the number of visual child elements for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see> control.</summary>
			<returns>The number of visual elements that are defined for the <see cref="T:System.Windows.Controls.Primitives.BulletDecorator"></see>. The default value is zero (0).</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ButtonBase">
			<summary>Represents the base class for all <see cref="T:System.Windows.Controls.Button"></see> controls. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.ButtonBase.Click">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.Button"></see> is clicked. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty">
			<summary>Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
			<summary>Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey"></see> for this control is called. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed"></see> property changes.</summary>
			<param name="e">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.KeyDown"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
			<summary> Responds to the <see cref="E:System.Windows.UIElement.KeyUp"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyUp"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary> Called when an element loses keyboard focus. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
			<summary> Called when an element no longer is receiving mouse event messages. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
			<summary> Called when the mouse enters an element. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
			<summary>Called when the mouse leaves an element. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.MouseMove"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseMove"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
			<summary> Called when the rendered size of a control changes. </summary>
			<param name="sizeInfo">Specifies the size changes.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode">
			<summary>Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event should occur. </summary>
			<returns>Default value is OnRelease. For a list of possible values see <see cref="T:System.Windows.Controls.ClickMode"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ButtonBase.Command">
			<summary>Gets or sets the command to invoke when this button is pressed.</summary>
			<returns>A command to invoke when this button is pressed. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter">
			<summary> Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"></see> property. </summary>
			<returns>Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command"></see> property.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget">
			<summary>Gets or sets the element on which to raise the specified command.</summary>
			<returns>Element on which to raise a command.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore">
			<summary>Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled"></see> property.</summary>
			<returns>Returns the value of the property.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed">
			<summary>Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase"></see> is currently activated. </summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase"></see> is activated; otherwise false. The default is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.CustomPopupPlacement">
			<summary>Defines custom placement parameters for a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.#ctor(System.Windows.Point,System.Windows.Controls.Primitives.PopupPrimaryAxis)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structure.</summary>
			<param name="primaryAxis">The <see cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis"></see> along which a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control moves when it is obstructed by a screen edge.</param>
			<param name="point">The <see cref="T:System.Windows.Point"></see> that is relative to the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> where the upper-left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> is placed.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.Equals(System.Object)">
			<summary>Compares this structure with another <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structure to determine whether they are equal.</summary>
			<returns>true if the structures have the same values; otherwise, false.</returns>
			<param name="o">The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structure to compare.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.GetHashCode">
			<summary>Gets the hash code for this structure. </summary>
			<returns>The hash code for this structure.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Equality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
			<summary>Compares two <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structures to determine whether they are equal.</summary>
			<returns>true if the structures have the same values; otherwise, false.</returns>
			<param name="placement2">The second <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structure to compare.</param>
			<param name="placement1">The first <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structure to compare.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.CustomPopupPlacement.op_Inequality(System.Windows.Controls.Primitives.CustomPopupPlacement,System.Windows.Controls.Primitives.CustomPopupPlacement)">
			<summary>Compares two <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structures to determine whether they are not equal. </summary>
			<returns>true if the structures do not have the same values; otherwise, false.</returns>
			<param name="placement2">The second <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structure to compare.</param>
			<param name="placement1">The first <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> structure to compare.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.CustomPopupPlacement.Point">
			<summary>Gets or sets the point that is relative to the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> where the upper-left corner of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> contro is placedl. </summary>
			<returns>A <see cref="T:System.Windows.Point"></see> that is used to position a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. The default value is (0,0).</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback">
			<summary>Represents a method that provides custom positioning for a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. </summary>
			<returns>An array of possible <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement"></see> positions for the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control relative to the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DocumentPageView">
			<summary>Represents a viewport for a paginated <see cref="T:System.Windows.Documents.DocumentPage"></see>.    </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageConnected">
			<summary>Occurs when a <see cref="T:System.Windows.Media.Visual"></see> element of the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage"></see> is connected.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.DocumentPageView.PageDisconnected">
			<summary>Occurs when a <see cref="T:System.Windows.Media.Visual"></see> element of the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage"></see> is disconnected.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentPageView.PageNumberProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentPageView.StretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges the content to fit a specified view size.</summary>
			<returns>The actual size that the page view used to arrange itself and its children.</returns>
			<param name="finalSize">The maximum size that the page view should use to arrange itself and its children.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose">
			<summary>Releases all resources used by the <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetService(System.Type)">
			<summary>Returns a service object associated with this page view instance.</summary>
			<returns>The service object of the specified serviceType for this page view instance.</returns>
			<param name="serviceType">The type of service object to return.</param>
			<exception cref="T:System.ArgumentNullException">The serviceType parameter is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.GetVisualChild(System.Int32)">
			<summary>Returns the <see cref="T:System.Windows.Media.Visual"></see> child at a specified index.</summary>
			<returns>The visual child at the specified index.</returns>
			<param name="index">The index of the visual child to return.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is less than zero, or greater than or equal to <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount"></see>.</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.MeasureOverride(System.Windows.Size)">
			<summary>Returns the available viewport size that can be given to display the current <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage"></see>.</summary>
			<returns>The actual desired size.</returns>
			<param name="availableSize">The maximum available size.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for this <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see>.</summary>
			<returns>The new <see cref="T:System.Windows.Automation.Peers.DocumentPageViewAutomationPeer"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentPageView.System.IDisposable.Dispose">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose"></see> method instead. </summary>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPage">
			<summary>Gets the <see cref="T:System.Windows.Documents.DocumentPage"></see> associated with this view.</summary>
			<returns>The document page associated with this view.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentPageView.DocumentPaginator">
			<summary>Gets or sets the <see cref="T:System.Windows.Documents.DocumentPaginator"></see> used to retrieve content pages for this view.</summary>
			<returns>The paginator that retrieves content pages for this view.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentPageView.IsDisposed">
			<summary>Gets a value that indicates whether <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose"></see> has been called for this instance.</summary>
			<returns>true if <see cref="M:System.Windows.Controls.Primitives.DocumentPageView.Dispose"></see> has been called for this <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see>; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentPageView.PageNumber">
			<summary>Gets or sets the page number of the current page displayed.</summary>
			<returns>The zero-based page number of the current page displayed.  The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch"></see> enumeration that specifies how content should be stretched to fill the display page.</summary>
			<returns>The enumeration value that specifies how content should be stretched to fill the display page.  The default <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch"></see> setting is <see cref="F:System.Windows.Media.Stretch.Uniform"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.StretchDirection"></see> enumeration that specifies in what scaling directions <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch"></see> should be applied.</summary>
			<returns>The enumeration value that specifies in what scaling directions <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.Stretch"></see> should be applied.  The default <see cref="P:System.Windows.Controls.Primitives.DocumentPageView.StretchDirection"></see> is <see cref="F:System.Windows.Controls.StretchDirection.DownOnly"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentPageView.VisualChildrenCount">
			<summary>Gets the number of visual children contained in this view.</summary>
			<returns>The number of visual children contained in this view.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DocumentViewerBase">
			<summary>Provides a base class for viewers that are intended to display fixed or flow content (represented by a <see cref="T:System.Windows.Documents.FixedDocument"></see> or <see cref="T:System.Windows.Documents.FlowDocument"></see>, respectively).</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.#ctor">
			<summary>Initializes base class values when called by a derived class.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.DocumentViewerBase.PageViewsChanged">
			<summary>Occurs when the collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> items associated with this viewer (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews"></see> property) changes.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPageProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPagePropertyKey">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage"></see> dependency property key.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage"></see> dependency property key.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPageProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPagePropertyKey">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage"></see> dependency property key.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage"></see> dependency property key.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.DocumentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPageProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage"></see> attached property</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumberPropertyKey">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber"></see> dependency property key.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber"></see> dependency property key.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.DocumentViewerBase.PageCountPropertyKey">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount"></see> dependency property key.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount"></see> dependency property key.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CancelPrint">
			<summary>Cancels any current printing job.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPage(System.Int32)">
			<summary>Returns a value that indicates whether or the viewer is able to jump to the specified page number.</summary>
			<returns>A Boolean value that indicates whether or the viewer is able to jump to the specified page number.</returns>
			<param name="pageNumber">A page number to check for as a valid jump target.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.FirstPage">
			<summary>Causes the viewer to jump to the first page of the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> property).</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetIsMasterPage(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage"></see>attached property for a specified dependency object.</summary>
			<returns>The value of the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage"></see> attached property, read from the dependency object specified by element.</returns>
			<param name="element">A dependency object from which to retrieve the value of <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage"></see>.</param>
			<exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetMasterPageView">
			<summary>Returns the current master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> for this viewer.</summary>
			<returns>The current master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> for this viewer, or null if no master <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> can be found.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)">
			<summary>Creates and returns a new, read-only collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> objects that are associated with the current display document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> property).</summary>
			<returns>A read-only collection of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> objects that are associated with the current display document.</returns>
			<param name="changed">Returns true on the first call to <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)"></see> or if the collection has not changed since the previous <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)"></see> call; otherwise, false if the collection has changed since the last <see cref="M:System.Windows.Controls.Primitives.DocumentViewerBase.GetPageViewsCollection(System.Boolean@)"></see> call.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.GoToPage(System.Int32)">
			<summary>Causes the viewer to jump to a specified page number.</summary>
			<param name="pageNumber">The number of the page to jump to.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.InvalidatePageViews">
			<summary>Causes the working <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews"></see> collection to be re-built.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.LastPage">
			<summary>Causes the viewer to jump to the last page in the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> property).</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.NextPage">
			<summary>Causes the viewer to jump to the next page in the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> property).</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnApplyTemplate">
			<summary>Builds the visual tree for the viewer.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnBringIntoView(System.Windows.DependencyObject,System.Windows.Rect,System.Int32)">
			<summary>Invoked whenever the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> event reaches an element derived from this class in its route.  Implement this method to add class handling for this event.</summary>
			<param name="rect">A rectangular region, in the coordinate space of element, which should be made visible.</param>
			<param name="pageNumber">The page number for the page that contains element.</param>
			<param name="element">The element from which the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView"></see> event originated.</param>
			<exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCancelPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.CancelPrint"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this viewer.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this viewer.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnDocumentChanged">
			<summary>Called whenever the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> property is modified.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnFirstPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.FirstPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnGoToPageCommand(System.Int32)">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.GoToPage"></see> routed command.</summary>
			<param name="pageNumber">The number of the page to jump to.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnLastPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.LastPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnMasterPageNumberChanged">
			<summary>Called whenever the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber"></see> property is modified.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnNextPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.NextPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPageViewsChanged">
			<summary>Called whenever the working set of <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> objects for this viewer (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews"></see> property) is modified.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPreviousPageCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.NavigationCommands.PreviousPage"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.OnPrintCommand">
			<summary>Handles the <see cref="P:System.Windows.Input.ApplicationCommands.Print"></see> routed command.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.PreviousPage">
			<summary>Causes the viewer to jump to the previous page of the current document (represented by the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see> property).</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.Print">
			<summary>Invokes a standard Print dialog which can be used to print the contents of the viewer and configure printing preferences.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.SetIsMasterPage(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage"></see> attached property on a specified dependency object.</summary>
			<param name="element">A dependency object on which to set the value of <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage"></see>.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised if element is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DocumentViewerBase.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToNextPage">
			<summary>Gets a value that indicates whether or not the viewer can jump to the next page in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see>.</summary>
			<returns>true if the viewer can jump to the next page; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.CanGoToPreviousPage">
			<summary>Gets a value that indicates whehter or not the viewer can jump to the previous page in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see>.</summary>
			<returns>true if the viewer can jump to the previous page; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document">
			<summary>Gets or sets a <see cref="T:System.Windows.Documents.IDocumentPaginatorSource"></see> to be paginated and displayed by the viewer.</summary>
			<returns>A <see cref="T:System.Windows.Documents.IDocumentPaginatorSource"></see> to be paginated and displayed by the viewer.The default property is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.LogicalChildren">
			<summary>Gets an enumerator for the children in the logical tree of the viewer.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> object that can be used to enumerate the logical children of the viewer.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.MasterPageNumber">
			<summary>Gets the page number for the current master page.</summary>
			<returns>The page number for the current master page, or 0 if no Document is currently loaded.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageCount">
			<summary>Gets the total number of pages in the current <see cref="P:System.Windows.Controls.Primitives.DocumentViewerBase.Document"></see>.</summary>
			<returns>The number of pages in the current document, or 0 if no document is currently loaded.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.PageViews">
			<summary>Gets a read-only collection of the active <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> objects contained within the viewer.</summary>
			<returns>A read-only collection of the active <see cref="T:System.Windows.Controls.Primitives.DocumentPageView"></see> objects contained within the viewer.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DocumentViewerBase.IsMasterPage">
			<summary>Gets a value that indicates whether or not a child element in the viewer should be used as a master page.</summary>
			<returns>true if the associated element should be used as the master page; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DragCompletedEventArgs">
			<summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"></see> event that occurs when a user completes a drag operation with the mouse of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.#ctor(System.Double,System.Double,System.Boolean)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventArgs"></see> class. </summary>
			<param name="canceled">A Boolean value that indicates whether the drag operation was canceled by a call to the <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag"></see> method.</param>
			<param name="horizontalChange">The horizontal change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control, resulting from the drag operation.</param>
			<param name="verticalChange">The vertical change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control, resulting from the drag operation.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DragCompletedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"></see> event to the <see cref="T:System.Windows.Controls.Primitives.DragCompletedEventHandler"></see> type.</summary>
			<param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> that uses the handler.</param>
			<param name="genericHandler">The event handler delegate.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.Canceled">
			<summary>Gets whether the drag operation for a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> was canceled by a call to the <see cref="M:System.Windows.Controls.Primitives.Thumb.CancelDrag"></see> method. </summary>
			<returns>true if a drag operation was canceled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.HorizontalChange">
			<summary>Gets the horizontal change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> after the user drags the control with the mouse. </summary>
			<returns>The horizontal difference between the point at which the user pressed the left mouse button and the point at which the user released the button during a drag operation of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control. There is no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DragCompletedEventArgs.VerticalChange">
			<summary>Gets the vertical change in position of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> after the user drags the control with the mouse.</summary>
			<returns>The vertical difference between the point at which the user pressed the left mouse button and the point at which the user released the button during a drag operation of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control. There is no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DragCompletedEventHandler">
			<summary>Represents a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"></see> event of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control. </summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DragDeltaEventArgs">
			<summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event that occurs one or more times when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control with the mouse.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.#ctor(System.Double,System.Double)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventArgs"></see> class.</summary>
			<param name="horizontalChange">The horizontal change in the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event.</param>
			<param name="verticalChange">The vertical change in the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> position since the last <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DragDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event to the <see cref="T:System.Windows.Controls.Primitives.DragDeltaEventHandler"></see> type.</summary>
			<param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> that uses the handler.</param>
			<param name="genericHandler">The event handler delegate.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.HorizontalChange">
			<summary>Gets the horizontal distance that the mouse has moved since the previous <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control with the mouse.</summary>
			<returns>A horizontal change in position of the mouse during a drag operation. There is no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DragDeltaEventArgs.VerticalChange">
			<summary>Gets the vertical distance that the mouse has moved since the previous <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event when the user drags the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> with the mouse.</summary>
			<returns>A vertical change in position of the mouse during a drag operation. There is no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DragDeltaEventHandler">
			<summary>Represents a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> event of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control. </summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DragStartedEventArgs">
			<summary>Provides information about the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"></see> event that occurs when a user drags a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control with the mouse..</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.#ctor(System.Double,System.Double)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.DragStartedEventArgs"></see> class.</summary>
			<param name="horizontalOffset">The horizontal offset of the mouse click with respect to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>.</param>
			<param name="verticalOffset">The vertical offset of the mouse click with respect to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.DragStartedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Converts a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"></see> event to the <see cref="T:System.Windows.Controls.Primitives.DragStartedEventHandler"></see> type.</summary>
			<param name="genericTarget">The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> that uses the handler.</param>
			<param name="genericHandler">The event handler delegate.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.HorizontalOffset">
			<summary>Gets the horizontal offset of the mouse click relative to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>.</summary>
			<returns>The horizontal offset of the mouse click with respect to the upper-left corner of the bounding box of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>. There is no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.DragStartedEventArgs.VerticalOffset">
			<summary>Gets the vertical offset of the mouse click relative to the screen coordinates of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>.</summary>
			<returns>The horizontal offset of the mouse click with respect to the upper-left corner of the bounding box of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see>. There is no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.DragStartedEventHandler">
			<summary>Represents a method that handles the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"></see> event of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.GeneratorDirection">
			<summary>Specifies the direction in which item generation will occur. <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection"></see> is used by <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Backward">
			<summary>Specifies to generate items in a backward direction.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.GeneratorDirection.Forward">
			<summary>Specifies to generate items in a forward direction.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.GeneratorPosition">
			<summary><see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> is used to describe the position of an item that is managed by <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GeneratorPosition.#ctor(System.Int32,System.Int32)">
			<summary>Initializes a new instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> with the specified index and offset.</summary>
			<param name="offset">An <see cref="T:System.Int32"></see> offset that is relative to the ungenerated (unrealized) items near the indexed item. An offset of 0 refers to the indexed element itself, an offset 1 refers to the next ungenerated (unrealized) item, and an offset of -1 refers to the previous item.</param>
			<param name="index">An <see cref="T:System.Int32"></see> index that is relative to the generated (realized) items. -1 is a special value that refers to a fictitious item at the beginning or the end of the items list.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GeneratorPosition.Equals(System.Object)">
			<summary>Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> for value equality.</summary>
			<returns>true if o and this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> have the same values.</returns>
			<param name="o">The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> instance to compare.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GeneratorPosition.GetHashCode">
			<summary>Returns the hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>.</summary>
			<returns>The hash code for this <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Equality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
			<summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> objects for value equality.</summary>
			<returns>true if the two objects are equal; otherwise, false.</returns>
			<param name="gp1">The first instance to compare.</param>
			<param name="gp2">The second instance to compare.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GeneratorPosition.op_Inequality(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorPosition)">
			<summary>Compares two <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> objects for value inequality.</summary>
			<returns>true if the values are not equal; otherwise, false.</returns>
			<param name="gp1">The first instance to compare.</param>
			<param name="gp2">The second instance to compare.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GeneratorPosition.ToString">
			<summary>Returns a string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>.</summary>
			<returns>A string representation of this instance of <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see></returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Index">
			<summary>Gets or sets the <see cref="T:System.Int32"></see> index that is relative to the generated (realized) items.</summary>
			<returns>An <see cref="T:System.Int32"></see> index that is relative to the generated (realized) items.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.GeneratorPosition.Offset">
			<summary>Gets or sets the <see cref="T:System.Int32"></see> offset that is relative to the ungenerated (unrealized) items near the indexed item.</summary>
			<returns>An <see cref="T:System.Int32"></see> offset that is relative to the ungenerated (unrealized) items near the indexed item.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.GeneratorStatus">
			<summary>Used by <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> to indicate the status of its item generation.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.GeneratorStatus.ContainersGenerated">
			<summary>The generator has finished generating containers.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.GeneratorStatus.Error">
			<summary>The generator has finished generating containers, but encountered one or more errors.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.GeneratorStatus.GeneratingContainers">
			<summary>The generator is generating containers.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.GeneratorStatus.NotStarted">
			<summary>The generator has not tried to generate content.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase">
			<summary>Represents the base class for classes that define the layout for a row of data where different data items are displayed in different columns.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ColumnsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.GetVisualChild(System.Int32)">
			<summary>Gets the visual child in the row item at the specified index.</summary>
			<returns>A <see cref="T:System.Windows.Media.Visual"></see> object that contains the child at the specified index.</returns>
			<param name="index">The index of the child.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.GridViewRowPresenterBase.ToString">
			<summary>Returns a string representation of a <see cref="T:System.Windows.Controls.Primitives.GridViewRowPresenterBase"></see> object.</summary>
			<returns>A string that contains the type of the object and the number of columns.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.Columns">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.GridViewColumnCollection"></see>.</summary>
			<returns>A collection of <see cref="T:System.Windows.Controls.GridViewColumn"></see> objects that display data. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.LogicalChildren">
			<summary>Gets an enumerator for the logical children of a row.</summary>
			<returns>The <see cref="T:System.Collections.IEnumerator"></see> for the logical children of this row. There is no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.GridViewRowPresenterBase.VisualChildrenCount">
			<summary>Gets the number of visual children for a row. </summary>
			<returns>The number of visual children for the current row. There is no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.IItemContainerGenerator">
			<summary>An interface that is implemented by classes which are responsible for generating user interface (UI) content on behalf of a host.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext">
			<summary>Returns the container element used to display the next item.</summary>
			<returns>A <see cref="T:System.Windows.DependencyObject"></see> that is the container element which is used to display the next item.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext(System.Boolean@)">
			<summary>Returns the container element used to display the next item, and whether the container element has been newly generated (realized).</summary>
			<returns>A <see cref="T:System.Windows.DependencyObject"></see> that is the container element which is used to display the next item.</returns>
			<param name="isNewlyRealized">Is true if the returned <see cref="T:System.Windows.DependencyObject"></see> is newly generated (realized); otherwise, false.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GeneratorPositionFromIndex(System.Int32)">
			<summary>Returns the <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> object that maps to the item at the specified index.</summary>
			<returns>An <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see> object that maps to the item at the specified index.</returns>
			<param name="itemIndex">The index of desired item. </param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.GetItemContainerGeneratorForPanel(System.Windows.Controls.Panel)">
			<summary>Returns the <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> appropriate for use by the specified panel.</summary>
			<returns>An <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see> appropriate for use by the specified panel.</returns>
			<param name="panel">The panel for which to return an appropriate <see cref="T:System.Windows.Controls.ItemContainerGenerator"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.IndexFromGeneratorPosition(System.Windows.Controls.Primitives.GeneratorPosition)">
			<summary>Returns the index that maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>.</summary>
			<returns>An <see cref="T:System.Int32"></see> that is the index which maps to the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>.</returns>
			<param name="position">The index of desired item.The <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>  for the desired index.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.PrepareItemContainer(System.Windows.DependencyObject)">
			<summary>Prepares the specified element as the container for the corresponding item.</summary>
			<param name="container">The container to prepare. Normally, container is the result of the previous call to <see cref="Overload:System.Windows.Controls.Primitives.IItemContainerGenerator.GenerateNext"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.Remove(System.Windows.Controls.Primitives.GeneratorPosition,System.Int32)">
			<summary>Removes one or more generated (realized) items.</summary>
			<param name="count">The <see cref="T:System.Int32"></see> number of elements to remove, starting at position.</param>
			<param name="position">The <see cref="T:System.Int32"></see> index of the element to remove. position must refer to a previously generated (realized) item, which means its offset must be zero.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.RemoveAll">
			<summary>Removes all generated (realized) items.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection)">
			<summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection"></see>.</summary>
			<returns>An <see cref="T:System.IDisposable"></see> object that tracks the lifetime of the generation process.</returns>
			<param name="direction">A <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection"></see> that specifies the direction which to generate items.</param>
			<param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>, that specifies the position of the item to start generating items at.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IItemContainerGenerator.StartAt(System.Windows.Controls.Primitives.GeneratorPosition,System.Windows.Controls.Primitives.GeneratorDirection,System.Boolean)">
			<summary>Prepares the generator to generate items, starting at the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>, and in the specified <see cref="T:System.Windows.Controls.Primitives.GeneratorDirection"></see>, and controlling whether or not to start at a generated (realized) item.</summary>
			<returns>An <see cref="T:System.IDisposable"></see> object that tracks the lifetime of the generation process.</returns>
			<param name="direction">Specifies the position of the item to start generating items at.</param>
			<param name="position">A <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>, that specifies the position of the item to start generating items at.</param>
			<param name="allowStartAtRealizedItem">A <see cref="T:System.Boolean"></see> that specifies whether to start at a generated (realized) item.</param>
		</member>
		<member name="T:System.Windows.Controls.Primitives.IScrollInfo">
			<summary>Represents the main scrollable region inside a <see cref="T:System.Windows.Controls.ScrollViewer"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)">
			<summary>Forces content to scroll until the coordinate space of a <see cref="T:System.Windows.Media.Visual"></see> object is visible. </summary>
			<returns>A <see cref="T:System.Windows.Rect"></see> that is visible.</returns>
			<param name="visual">A <see cref="T:System.Windows.Media.Visual"></see> that becomes visible.</param>
			<param name="rectangle">A bounding rectangle that identifies the coordinate space to make visible.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)">
			<summary>Sets the amount of horizontal offset.</summary>
			<param name="offset">The degree to which content is horizontally offset from the containing viewport.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)">
			<summary>Sets the amount of vertical offset.</summary>
			<param name="offset">The degree to which content is vertically offset from the containing viewport.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll">
			<summary>Gets or sets a value that indicates whether scrolling on the horizontal axis is possible.</summary>
			<returns>true if scrolling is possible; otherwise, false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll">
			<summary>Gets or sets a value that indicates whether scrolling on the vertical axis is possible. </summary>
			<returns>true if scrolling is possible; otherwise, false. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight">
			<summary>Gets the vertical size of the extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents, in device independent pixels, the vertical size of the extent.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth">
			<summary>Gets the horizontal size of the extent.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents, in device independent pixels, the horizontal size of the extent. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset">
			<summary>Gets the horizontal offset of the scrolled content.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents, in device independent pixels, the horizontal offset. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner">
			<summary>Gets or sets a <see cref="T:System.Windows.Controls.ScrollViewer"></see> element that controls scrolling behavior.</summary>
			<returns>A <see cref="T:System.Windows.Controls.ScrollViewer"></see> element that controls scrolling behavior. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset">
			<summary>Gets the vertical offset of the scrolled content.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents, in device independent pixels, the vertical offset of the scrolled content. Valid values are between zero and the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight"></see> minus the <see cref="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight">
			<summary>Gets the vertical size of the viewport for this content.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth">
			<summary>Gets the horizontal size of the viewport for this content.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents, in device independent pixels, the vertical size of the viewport for this content. This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"></see> event.</summary>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Action">
			<summary>Gets the action that occurred on the items collection.</summary>
			<returns>Returns the action that occurred.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemCount">
			<summary>Gets the number of items that were involved in the change.</summary>
			<returns>Integer that represents the number of items involved in the change.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.ItemUICount">
			<summary>Gets the number of user interface (UI) elements involved in the change.</summary>
			<returns>Integer that represents the number of UI elements involved in the change.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.OldPosition">
			<summary>Gets the position in the collection before the change occurred.</summary>
			<returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ItemsChangedEventArgs.Position">
			<summary>Gets the position in the collection where the change occurred.</summary>
			<returns>Returns a <see cref="T:System.Windows.Controls.Primitives.GeneratorPosition"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ItemsChangedEventHandler">
			<summary>Represents the method that receives <see cref="T:System.Windows.Controls.Primitives.ItemsChangedEventArgs"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.LayoutInformation">
			<summary>Defines methods that provide additional information about the layout state of an element. This is an abstract class. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutClip(System.Windows.FrameworkElement)">
			<summary>Returns a <see cref="T:System.Windows.Media.Geometry"></see> that represents the visible region of an element.</summary>
			<returns>A <see cref="T:System.Windows.Media.Geometry"></see> that represents the visible region of an element.</returns>
			<param name="element">The <see cref="T:System.Windows.FrameworkElement"></see> whose layout clip is desired.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutExceptionElement(System.Windows.Threading.Dispatcher)">
			<summary>Returns a <see cref="T:System.Windows.UIElement"></see> that was being processed by the layout engine at the moment of an unhandled exception.</summary>
			<returns>A <see cref="T:System.Windows.UIElement"></see> that was being processed by the layout engine at the moment of an unhandled exception.</returns>
			<param name="dispatcher">The <see cref="T:System.Windows.Threading.Dispatcher"></see> object that defines the scope of the operation. There is one dispatcher per layout engine instance.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when dispatcher is null.</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.LayoutInformation.GetLayoutSlot(System.Windows.FrameworkElement)">
			<summary>Returns a <see cref="T:System.Windows.Rect"></see> that represents the layout partition that is reserved for a child element.</summary>
			<returns>A <see cref="T:System.Windows.Rect"></see> that represents the layout slot of the element.</returns>
			<param name="element">The <see cref="T:System.Windows.FrameworkElement"></see> whose layout slot is desired.</param>
		</member>
		<member name="T:System.Windows.Controls.Primitives.MenuBase">
			<summary>Base class for all <see cref="T:System.Windows.Controls.Menu"></see> controls. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.MenuBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.MenuBase"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.MenuBase.GetContainerForItemOverride">
			<summary>Creates or identifies the element used to display the specified item.</summary>
			<returns>A <see cref="T:System.Windows.Controls.MenuItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.MenuBase.HandleMouseButton(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Called when a mouse button is pressed or released. </summary>
			<param name="e">The event data for a mouse event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.MenuBase.IsItemItsOwnContainerOverride(System.Object)">
			<summary>Determines whether the specified item is, or is eligible to be, its own ItemUI. </summary>
			<returns>Returns true if the item is its own ItemUI; otherwise, false.</returns>
			<param name="item">Specified item.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.MenuBase.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Reports a change to the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin"></see> property. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.MenuBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.KeyDown"></see> event. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.KeyDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.MenuBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
			<summary>Called whenever the user moves the mouse pointer out of a control. </summary>
			<param name="e">The event data for the <see cref="E:System.Windows.UIElement.MouseLeave"></see> event.</param>
		</member>
		<member name="T:System.Windows.Controls.Primitives.PlacementMode">
			<summary>Describes the placement of a where a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control appears on the screen.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Absolute">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control relative to the upper-left corner of the screen and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control then repositions itself to align with the edge.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.AbsolutePoint">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control relative to the upper-left corner of the screen and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control extends in the opposite direction from the axis defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> or <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see>=.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Bottom">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control where the control  aligns its upper edge with the lower edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> and aligns its left edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself so that its lower edge aligns with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control then repositions itself so that its upper edge aligns with the upper screen-edge.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Center">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control where it is centered over the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If a screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself to align with the screen edge. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Custom">
			<summary>A position and repositioning behavior for the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control that is defined by the  <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback"></see> delegate specified by the <see cref="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback"></see> property.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Left">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control that aligns its left edge with the right edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> and aligns its upper edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the left screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself so that its left edge aligns with the right edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the right edge of the control aligns with the right screen-edge. If the upper or lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself to align with the obscuring screen edge.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Mouse">
			<summary>A postion of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control that aligns its upper edge with the lower edge of the bounding box of the mouse and aligns its left edge with the left edge of the bounding box of the mouse. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, it repositions itself to align with the upper edge of the bounding box of the mouse. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself to align with the upper screen-edge. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control relative to the tip of the mouse cursor and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see> property values. If a horizontal or vertical screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, it opens in the opposite direction from the obscuring edge. If the opposite screen edge also obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, it then aligns with the obscuring screen edge.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Relative">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control relative to the upper-left corner of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see> property values. If the screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself to align with the screen edge.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.RelativePoint">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control relative to the upper-left corner of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> and at an offset that is defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> and <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see> property values. If a screen edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> extends in the opposite direction from the direction from the axis defined by the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> or <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see>. If the opposite screen edge also obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control then aligns with this screen edge.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Right">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control that aligns its left edge with the right edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> and aligns its upper edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself so that its left edge aligns with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the left screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself so that its left edge aligns with the left screen-edge. If the upper or lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control then repositions itself to align with the obscuring screen edge.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PlacementMode.Top">
			<summary>A position of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control that aligns its lower edge with the upper edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> and aligns its left edge with the left edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the upper screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the control repositions itself so that its upper edge aligns with the lower edge of the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>. If the lower screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, the lower edge of the control aligns with the lower screen-edge. If the left or right screen-edge obscures the <see cref="T:System.Windows.Controls.Primitives.Popup"></see>, it then repositions itself to align with the obscuring screen.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.Popup">
			<summary>Represents a control that creates a separate pop-up window that has content.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Popup.Closed">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"></see> property changes to false. </summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Popup.Opened">
			<summary>Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"></see> property changes to true. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.ChildProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Child"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.Child"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty">
			<summary>Identifies the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.PlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)">
			<summary>Attaches a child element to a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. </summary>
			<param name="popup">The <see cref="T:System.Windows.Controls.Primitives.Popup"></see> to which to add child content. </param>
			<param name="child">The <see cref="T:System.Windows.UIElement"></see> child content. </param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore">
			<summary>Returns the logical parent of a <see cref="T:System.Windows.Controls.Primitives.Popup"></see>. </summary>
			<returns>If the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> does not have a defined parent and the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> is not null, the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see> is returned. Otherwise, the return values are the same as <see cref="M:System.Windows.FrameworkElement.GetUIParentCore"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)">
			<summary>Determines the required size of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> content within the visual tree of the logical parent.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> structure that has the <see cref="P:System.Windows.Size.Height"></see> and <see cref="P:System.Windows.Size.Width"></see> properties both equal to zero (0).</returns>
			<param name="availableSize">The available size that this element can give to the child. You can use infinity as a value to indicate that the element can size to whatever content is available.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)">
			<summary>Responds when the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"></see> property changes from to true to false.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)">
			<summary>Responds to the condition in which the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen"></see> property changes from false to true. </summary>
			<param name="e">The event arguments.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Popup.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control can contain transparent content.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control can contain transparent content; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.Child">
			<summary>Gets or sets the content of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. </summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> content of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback">
			<summary>Gets or sets a delegate handler method that positions the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback"></see> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.HasDropShadow">
			<summary>Gets whether a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> is displayed with a drop shadow effect.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> is displayed with a drop shadow; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset">
			<summary>Gets or sets the offset from the left of the area that is specified for the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control content by a combination of the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement"></see>, <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>, and <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle"></see> properties. </summary>
			<returns>An offset from the left of the area that is specified for the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control by a combination of the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement"></see>, <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>, and <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle"></see> properties. The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.IsOpen">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> is visible. </summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> is visible; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.LogicalChildren">
			<summary>Gets an enumerator that you can use to access the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> that you can use to access the logical child elements of a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.Placement">
			<summary>Gets or sets the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control when the control opens, and specifies the behavior of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control when it overlaps screen boundaries.</summary>
			<returns>A <see cref="T:System.Windows.Controls.Primitives.PlacementMode"></see> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control when the control opens, and that specifies how the control interacts with screen boundaries. The default value is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom"></see>. </returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle">
			<summary>Gets or sets the rectangle relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control is positioned when it opens.</summary>
			<returns>The rectangle that is used to position the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.PlacementTarget">
			<summary>Gets or sets the element relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> is positioned when it opens.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> that is the logical parent of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.PopupAnimation">
			<summary>Gets or sets an animation for the opening and closing of a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Primitives.PopupAnimation"></see> enumeration value that defines an animation to open and close a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control. The default value is <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.StaysOpen">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control closes when the control is no longer in focus.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control closes when the control is no longer in focus; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Popup.VerticalOffset">
			<summary>Gets or sets the offset from top the area that is specified for the  <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control content by a combination of the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement"></see>, <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>, and <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle"></see> properties. </summary>
			<returns>An offset from the left of the area that is specified for the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control by a combination of the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement"></see>, <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget"></see>, and <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle"></see> properties. The default value is 0.0.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.PopupAnimation">
			<summary>Describes how a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control animates when it opens.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PopupAnimation.Fade">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control gradually appears, or fades in. This effect is created by increasing the opacity of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> window over time.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PopupAnimation.None">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control appears without animation. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PopupAnimation.Scroll">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control scrolls from the upper-left corner of its parent. If the screen does not provide enough room to allow the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> default behavior, the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> scrolls from the lower-right corner instead.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PopupAnimation.Slide">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control slides down or up into place. By default, a <see cref="T:System.Windows.Controls.Primitives.Popup"></see>  slides down. However, if the screen does not provide enough room for the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> to slide down, it slides up instead.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.PopupPrimaryAxis">
			<summary>Describes the direction to move a <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control to increase the amount of the <see cref="T:System.Windows.Controls.Primitives.Popup"></see> that is visible.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Horizontal">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control changes position by moving along the horizontal axis of the screen before moving along the vertical axis. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.None">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control changes position according to default <see cref="T:System.Windows.Controls.Primitives.Popup"></see> behavior. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.PopupPrimaryAxis.Vertical">
			<summary>A <see cref="T:System.Windows.Controls.Primitives.Popup"></see> control changes position by moving it along the vertical axis of the screen before moving along the horizontal axis.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.RangeBase">
			<summary>Represents the base class for elements that have a specific range. Examples of such elements are <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, <see cref="T:System.Windows.Controls.ProgressBar"></see> and <see cref="T:System.Windows.Controls.Slider"></see>. This class defines the relevant events and properties, and provides handlers for the events. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RangeBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged">
			<summary> Occurs when the range value changes. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RangeBase.LargeChangeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RangeBase.MaximumProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RangeBase.MinimumProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RangeBase.SmallChangeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RangeBase.ValueChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged"></see> routed event. </summary>
			<returns>The <see cref="E:System.Windows.Controls.Primitives.RangeBase.ValueChanged"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RangeBase.ValueProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RangeBase.OnMaximumChanged(System.Double,System.Double)">
			<summary>Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> property changes. </summary>
			<param name="newMaximum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> property.</param>
			<param name="oldMaximum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RangeBase.OnMinimumChanged(System.Double,System.Double)">
			<summary> Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> property changes. </summary>
			<param name="oldMinimum">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> property.</param>
			<param name="newMinimum">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RangeBase.OnValueChanged(System.Double,System.Double)">
			<summary> Called when the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property changes. </summary>
			<param name="oldValue">Old value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property</param>
			<param name="newValue">New value of the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RangeBase.ToString">
			<summary>Provides a string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> object. </summary>
			<returns>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> object.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.RangeBase.LargeChange">
			<summary>Gets or sets a value to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> control. </summary>
			<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> element. The default value is 1.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.RangeBase.Maximum">
			<summary>Gets or sets the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the range element. </summary>
			<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the range element. The default value is one (1).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.RangeBase.Minimum">
			<summary>Gets or sets the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the range element. </summary>
			<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> possible <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the range element. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.RangeBase.SmallChange">
			<summary>Gets or sets a <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> to be added to or subtracted from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of a <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> control. </summary>
			<returns><see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> to add to or subtract from the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the <see cref="T:System.Windows.Controls.Primitives.RangeBase"></see> element. The default value is 0.1.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.RangeBase.Value">
			<summary>Gets or sets the current <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the range element. </summary>
			<returns>Default value is zero (0).</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.RepeatButton">
			<summary>Control that raises its <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click"></see> event repeatedly from the time it is pressed until it is released. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RepeatButton.DelayProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Delay"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.RepeatButton.IntervalProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.RepeatButton.Interval"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.KeyDown"></see> event. </summary>
			<param name="e">The event data for a <see cref="E:System.Windows.UIElement.KeyDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.OnKeyUp(System.Windows.Input.KeyEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.KeyUp"></see> event. </summary>
			<param name="e">The event data for a <see cref="E:System.Windows.UIElement.KeyUp"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
			<summary>Called when a <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> loses mouse capture. </summary>
			<param name="e">The event data for a <see cref="E:System.Windows.UIElement.LostMouseCapture"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
			<summary>Reports when the mouse enters an element. </summary>
			<param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseEnter"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
			<summary>Reports when the mouse leaves an element. </summary>
			<param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseLeave"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event. </summary>
			<param name="e">The event data for a <see cref="E:System.Windows.UIElement.MouseLeftButtonDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.RepeatButton.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"></see> event. </summary>
			<param name="e">The event data for a <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp"></see> event.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.RepeatButton.Delay">
			<summary>Gets or sets the amount of time, in milliseconds, the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> waits while it is pressed before it starts repeating. The value must be non-negative. </summary>
			<returns>The default value is the system key press delay. See System Parameters Info(SPI_GETKEYBOARDDELAY).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.RepeatButton.Interval">
			<summary>Gets or sets the amount of time, in milliseconds, between repeats once repeating starts. The value must be non-negative. </summary>
			<returns>The default value is the system key repeat rate. See System Parameters Info(SPI_GETKEYBOARDSPEED).</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ResizeGrip">
			<summary>Represents an implementation of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control that enables a <see cref="T:System.Windows.Window"></see> to change its size. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ResizeGrip.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ResizeGrip"></see> class. </summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ScrollBar">
			<summary>Represents a control that provides a scroll bar that has a sliding <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> whose position corresponds to a value.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollBar.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.ScrollBar.Scroll">
			<summary>Occurs one or more times as content scrolls in a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> when the user moves the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> by using the mouse.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> by a small amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> by a small amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> by a small amount in the horizontal direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> by a small amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.OrientationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.Orientation"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> by a large amount in the vertical direction of increasing value of its <see cref="T:System.Windows.Controls.Primitives.Track"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> by a large amount in the horizontal direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> by a large amount in the vertical direction of decreasing value of its <see cref="T:System.Windows.Controls.Primitives.Track"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand">
			<summary>The command that scrolls the content to the lower-right corner of a <see cref="T:System.Windows.Controls.ScrollViewer"></see> control. </summary>
			<returns>This command is only used with a <see cref="T:System.Windows.Controls.ScrollViewer"></see> control.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand">
			<summary>The command that scrolls a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> value for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollBar.ViewportSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollBar.OnApplyTemplate">
			<summary>Creates the visual tree for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing"></see> event that occurs when the <see cref="T:System.Windows.Controls.ContextMenu"></see> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> closes.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollBar.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> event that occurs when the <see cref="T:System.Windows.Controls.ContextMenu"></see> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> opens.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollBar.OnCreateAutomationPeer">
			<summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for this <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> control.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.ScrollBarAutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> control.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown"></see> event.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollBar.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ScrollBar.IsEnabledCore">
			<summary>Gets whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> is enabled.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> is enabled in a <see cref="T:System.Windows.Controls.ScrollViewer"></see> and the size of the content is larger than the display area; otherwise false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ScrollBar.Orientation">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> is displayed horizontally or vertically.</summary>
			<returns>An <see cref="T:System.Windows.Controls.Orientation"></see> enumeration value that defines whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> is displayed horizontally or vertically. The default value is <see cref="F:System.Windows.Controls.Orientation.Vertical"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ScrollBar.Track">
			<summary>Gets the <see cref="T:System.Windows.Controls.Primitives.Track"></see> for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> control.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Primitives.Track"></see> that is used with a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> control. There is no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ScrollBar.ViewportSize">
			<summary>Gets or sets the amount of the scrollable content that is currently visible.</summary>
			<returns>The amount of the scrollable content that is currently visible. The default value is zero (0).</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ScrollEventArgs">
			<summary>Provides data for a <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> event that occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> moves. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.#ctor(System.Windows.Controls.Primitives.ScrollEventType,System.Double)">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.Primitives.ScrollEventArgs"></see> class by using the specified <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"></see> enumeration value and the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. </summary>
			<param name="scrollEventType">A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"></see> enumeration value that describes the type of <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> movement that caused the event.</param>
			<param name="newValue">The value that corresponds to the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ScrollEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Performs the appropriate type casting to call the type-safe <see cref="T:System.Windows.Controls.Primitives.ScrollEventHandler"></see> delegate for the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> event. </summary>
			<param name="genericTarget">The current object along the event's route.</param>
			<param name="genericHandler">The event handler to call.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.NewValue">
			<summary>Gets a value that represents the new location of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. </summary>
			<returns>The value that corresponds to the new position of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ScrollEventArgs.ScrollEventType">
			<summary>Gets the <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"></see> enumeration value that describes the change in the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> position that caused this event.</summary>
			<returns>A <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"></see> enumeration value that describes the type of <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> movement that caused the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> event.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ScrollEventHandler">
			<summary>Represents the method that is used to handle the <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> event that occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> of a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> moves.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ScrollEventType">
			<summary>Describes the behavior that cause a <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> event for a <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> control. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.EndScroll">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> was dragged to a new position and is now no longer being dragged by the user.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.First">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Minimum"></see> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. This movement occurs when the CTRL+HOME keys are pressed for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. This movement corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToTopCommand"></see> in a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> and a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToLeftEndCommand"></see> in a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeDecrement">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"></see>, to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the page button that is above the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> is pressed, or when the PAGE UP key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageUpCommand"></see>. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the page button to the left of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageLeftCommand"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.LargeIncrement">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> moved a specified distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.LargeChange"></see>, to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the page button that is below the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> is pressed, or when the PAGE DOWN key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageDownCommand"></see>. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the page button to the right of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.PageRightCommand"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.Last">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> moved to the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Maximum"></see> position of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the CTRL+END keys are pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToEndCommand"></see>. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollToRightEndCommand"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallDecrement">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> moved a small distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"></see>, to the left for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> or upward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the upper <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> is pressed or when the UP ARROW key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineUpCommand"></see>. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the left <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineLeftCommand"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.SmallIncrement">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> moved a small distance, as determined by the value of <see cref="P:System.Windows.Controls.Primitives.RangeBase.SmallChange"></see>, to the right for a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see> or downward for a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. For a vertical <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the lower <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> is pressed or when the DOWN ARROW key is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineDownCommand"></see>. For a horizontal <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>, this movement occurs when the right <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> is pressed, and corresponds to a <see cref="F:System.Windows.Controls.Primitives.ScrollBar.LineRightCommand"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbPosition">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> moved to a new position because the user selected Scroll Here in the shortcut menu of the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. This movement corresponds to the <see cref="F:System.Windows.Controls.Primitives.ScrollBar.ScrollHereCommand"></see>. To view the shortcut menu, right-click the mouse when the pointer is over the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ScrollEventType.ThumbTrack">
			<summary>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> was dragged and this caused a <see cref="E:System.Windows.UIElement.MouseMove"></see> event. A <see cref="E:System.Windows.Controls.Primitives.ScrollBar.Scroll"></see> event of this <see cref="T:System.Windows.Controls.Primitives.ScrollEventType"></see> may occur more than one time when the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> is dragged in the <see cref="T:System.Windows.Controls.Primitives.ScrollBar"></see>.s</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.Selector">
			<summary>Represents a control that allows a user to select items from among its child elements. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Selector"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Selector.SelectionChanged">
			<summary>Occurs when the selection of a <see cref="T:System.Windows.Controls.Primitives.Selector"></see> changes.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Selector.Selected">
			<summary>Occurs when an item is selected.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Selector.Unselected">
			<summary>Occurs when an item is unselected.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.IsSelectedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.IsSelectionActiveProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItemProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem"></see> Dependency property</summary>
			<returns>This dependency property is the identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem"></see> property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.SelectedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected"></see> routed event.</summary>
			<returns><see cref="E:System.Windows.Controls.Primitives.Selector.Selected"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.SelectedIndexProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedIndex"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.SelectedItemProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.SelectedValuePathProperty">
			<summary> Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.SelectedValueProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.SelectionChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Selector.UnselectedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected"></see> routed event. </summary>
			<returns><see cref="E:System.Windows.Controls.Primitives.Selector.Unselected"></see> routed event.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.AddSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
			<summary>Adds a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected"></see> attached event. </summary>
			<param name="element">Element that listens to this event.</param>
			<param name="handler">Event handler to add.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.AddUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
			<summary>Adds a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected"></see> attached event. </summary>
			<param name="element">Element that listens to this event.</param>
			<param name="handler">Event handler to add.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelected(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected"></see> attached property that indicates whether an item is selected. </summary>
			<returns>Boolean value, true if the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected"></see> property is true.</returns>
			<param name="element">Object to query concerning the <see cref="P:System.Windows.Controls.Primitives.Selector.IsSelected"></see> property.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)">
			<summary>Gets a value that indicates whether the keyboard focus is within the <see cref="T:System.Windows.Controls.Primitives.Selector"></see></summary>
			<returns>Value of the property, true if the keyboard focus is within the <see cref="T:System.Windows.Controls.Primitives.Selector"></see>.</returns>
			<param name="element">The element from which to read the attached property.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Called when the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin"></see> property has changed. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Updates the current selection when an item in the <see cref="T:System.Windows.Controls.Primitives.Selector"></see> has changed</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.OnItemsSourceChanged(System.Collections.IEnumerable,System.Collections.IEnumerable)">
			<summary>Called when the source of an item in a selector changes.</summary>
			<param name="oldValue">Old value of the source.</param>
			<param name="newValue">New value of the source.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
			<summary>Called when the selection changes.</summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.RemoveSelectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
			<summary>Removes a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Selected"></see> attached event. </summary>
			<param name="element">Element that listens to this event.</param>
			<param name="handler">Event handler to remove.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.RemoveUnselectedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
			<summary>Removes a handler for the <see cref="E:System.Windows.Controls.Primitives.Selector.Unselected"></see> attached event. </summary>
			<param name="element">Element that listens to this event.</param>
			<param name="handler">Event handler to remove.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Selector.SetIsSelected(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets a property value that indicates whether an item in a <see cref="T:System.Windows.Controls.Primitives.Selector"></see> is selected. </summary>
			<param name="isSelected">Value to set.</param>
			<param name="element">Object on which to set the property.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Selector.IsSynchronizedWithCurrentItem">
			<summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Selector"></see> should keep the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see> synchronized with the current item in the <see cref="P:System.Windows.Controls.ItemsControl.Items"></see> property. </summary>
			<returns>true if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see> is always synchronized with the current item in the <see cref="T:System.Windows.Controls.ItemCollection"></see>; false if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see> is never synchronized with the current item; null if the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see> is synchronized with the current item only if the <see cref="T:System.Windows.Controls.Primitives.Selector"></see> uses a <see cref="T:System.Windows.Data.CollectionView"></see>.  The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Selector.SelectedIndex">
			<summary>Gets or sets the index of the first item in the current selection or returns negative one (-1) if the selection is empty. </summary>
			<returns>The index of first item in the current selection. The default value is negative one (-1).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Selector.SelectedItem">
			<summary>Gets or sets the first item in the current selection or returns null if the selection is empty. </summary>
			<returns>The first item in the current selection or null if the selection is empty.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Selector.SelectedValue">
			<summary>Gets or sets the value of the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see>, obtained by using <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath"></see>. </summary>
			<returns>Value of the selected item.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Selector.SelectedValuePath">
			<summary>Gets or sets a value that indicates the path used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"></see> from the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedItem"></see>. </summary>
			<returns>Returns a string containing the path used to get the <see cref="P:System.Windows.Controls.Primitives.Selector.SelectedValue"></see>. Default is an empty string.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Selector.IsSelected">
			<summary>Gets or sets a value that indicates whether an item is selected.</summary>
			<returns>true if the item is selected; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Selector.IsSelectionActive">
			<summary>Gets a value that indicates whether the keyboard focus is within the value returned by a <see cref="T:System.Windows.Controls.Primitives.Selector"></see>.</summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.StatusBar">
			<summary>Represents a control that displays items and information in a horizontal bar in an application window.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBar.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBar.GetContainerForItemOverride">
			<summary>Creates a new <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see>.</summary>
			<returns>A new <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBar.IsItemItsOwnContainerOverride(System.Object)">
			<summary>Determines whether the specified item is a <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see> or a <see cref="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey"></see>. </summary>
			<returns>true if the item is a <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see> or a <see cref="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey"></see>; otherwise, false.</returns>
			<param name="item">The specified object to evaluate.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBar.OnCreateAutomationPeer">
			<summary>Specifies an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.StatusBarAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see>.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBar.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
			<summary>Prepares an item for display in the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see>.</summary>
			<param name="item">The content of the item to display.</param>
			<param name="element">The item to display in the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBar.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)">
			<summary>Determines whether to apply the <see cref="T:System.Windows.Style"></see> for an item in the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> to an object.</summary>
			<returns>true if the item is not a <see cref="T:System.Windows.Controls.Separator"></see>; otherwise, false.</returns>
			<param name="item">The object to evaluate.</param>
			<param name="container">The container for the item.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.StatusBar.SeparatorStyleKey">
			<summary>The key that represents the style to use for <see cref="T:System.Windows.Controls.Separator"></see> objects in the <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see>.</summary>
			<returns>A <see cref="T:System.Windows.ResourceKey"></see> that references the style to use for <see cref="T:System.Windows.Controls.Separator"></see> objects.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.StatusBarItem">
			<summary>Represents an item of a <see cref="T:System.Windows.Controls.Primitives.StatusBar"></see> control. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBarItem.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.StatusBarItem.OnCreateAutomationPeer">
			<summary>Specifies an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.StatusBarItemAutomationPeer"></see> for this <see cref="T:System.Windows.Controls.Primitives.StatusBarItem"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.TabPanel">
			<summary> Handles the layout of the tab buttons in a <see cref="T:System.Windows.Controls.TabControl"></see>. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TabPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TabPanel"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TabPanel.ArrangeOverride(System.Windows.Size)">
			<summary> Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.TabPanel"></see> object. </summary>
			<returns>Size of tab panel.</returns>
			<param name="arrangeSize">Size that a tab panel assumes to position child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TabPanel.GetLayoutClip(System.Windows.Size)">
			<summary>Used to override default clipping.</summary>
			<returns>A size that is the layout size of the <see cref="T:System.Windows.Controls.Primitives.TabPanel"></see>.</returns>
			<param name="layoutSlotSize">Size of the panel.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TabPanel.MeasureOverride(System.Windows.Size)">
			<summary> Called when remeasuring the control is required. </summary>
			<returns>The desired size.</returns>
			<param name="constraint">Constraint size is an upper limit. The return value should not exceed this size.</param>
		</member>
		<member name="T:System.Windows.Controls.Primitives.TextBoxBase">
			<summary>An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox"></see> and <see cref="T:System.Windows.Controls.RichTextBox"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged">
			<summary>Occurs when the text selection has changed.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged">
			<summary>Occurs when content changes in the text element.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent">
			<summary> Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)">
			<summary>Appends a string to the contents of a text control.</summary>
			<param name="textData">A string that specifies the text to append to the current contents of the text control.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange">
			<summary>Begins a change block.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.Copy">
			<summary>Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.Cut">
			<summary>Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock">
			<summary>Creates a change block.</summary>
			<returns>An <see cref="T:System.IDisposable"></see> object that refers to a new change block.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange">
			<summary>Ends a change block.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown">
			<summary>Scrolls the contents of the control down by one line.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft">
			<summary>Scrolls the contents of the control to the left by one line.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight">
			<summary>Scrolls the contents of the control to the right by one line.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp">
			<summary>Scrolls the contents of the control upward by one line. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit">
			<summary>Locks the most recent undo unit of the undo stack of the application. This prevents the locked unit from being merged with undo units that are added subsequently.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate">
			<summary>Is called when a control template is applied.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
			<summary>Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening"></see> routed event reaches this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Arguments of the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)">
			<summary>  Invoked whenever an unhandled  <see cref="E:System.Windows.DragDrop.DragEnter"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.UIElement.LostFocus"></see> event (using the provided arguments).</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove"></see> attached routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp"></see> event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Arguments of the event. These arguments will include details about which mouse button was depressed, and the handled state.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
			<summary>Is called when a <see cref="E:System.Windows.UIElement.MouseWheel"></see> event is routed to this class (or to a class that inherits from this class).</summary>
			<param name="e">The mouse wheel arguments that are associated with this event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
			<summary>  Invoked whenever an unhandled DragDrop.QueryContinueDrag attached  routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor"></see> attached  routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)">
			<summary>Is called when the caret or current selection changes position.</summary>
			<param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
			<summary>Is called when the control template changes.</summary>
			<param name="oldTemplate">A <see cref="T:System.Windows.Controls.ControlTemplate"></see> object that specifies the control template that is currently active.</param>
			<param name="newTemplate">A <see cref="T:System.Windows.Controls.ControlTemplate"></see> object that specifies a new control template to use.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)">
			<summary>Is called when content in this editing control changes.</summary>
			<param name="e">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
			<summary>  Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput"></see> attached  routed event reaches an element derived from this class in its route. Implement this method to add class handling for this event.</summary>
			<param name="e">Provides data about the event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown">
			<summary>Scrolls the contents of the control down by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft">
			<summary>Scrolls the contents of the control to the left by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight">
			<summary>Scrolls the contents of the control to the right by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp">
			<summary>Scrolls the contents of the control up by one page.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.Paste">
			<summary>Pastes the contents of the Clipboard over the current selection in the text editing control.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.Redo">
			<summary>Undoes the most recent undo command. In other words, redoes the most recent undo unit on the undo stack.</summary>
			<returns>true if the redo operation was successful; otherwise, false. This method returns false if there is no undo command available (the undo stack is empty).</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd">
			<summary>Scrolls the view of the editing control to the end of the content.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome">
			<summary>Scrolls the view of the editing control to the beginning of the viewport.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)">
			<summary>Scrolls the contents of the editing control to the specified horizontal offset.</summary>
			<param name="offset">A double value that specifies the horizontal offset to scroll to.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)">
			<summary>Scrolls the contents of the editing control to the specified vertical offset.</summary>
			<param name="offset">A double value that specifies the vertical offset to scroll to.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll">
			<summary>Selects the entire contents of the text editing control.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TextBoxBase.Undo">
			<summary>Undoes the most recent undo command. In other words, undoes the most recent undo unit on the undo stack.</summary>
			<returns>true if the undo operation was successful; otherwise, false. This method returns false if the undo stack is empty.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn">
			<summary>Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</summary>
			<returns>true if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored. The default value is false for <see cref="T:System.Windows.Controls.TextBox"></see> and true for <see cref="T:System.Windows.Controls.RichTextBox"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab">
			<summary>Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</summary>
			<returns>true if pressing the TAB key inserts a tab character at the current cursor position; false if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection">
			<summary>Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</summary>
			<returns>true if automatic word selection is enabled; otherwise, false.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo">
			<summary>Gets a value that indicates whether the most recent undo action can be redone.</summary>
			<returns>true if the most recent undo action can be redone; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo">
			<summary>Gets a value that indicates whether the most recent action can be undone.</summary>
			<returns>true if the most recent action can be undone; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight">
			<summary>Gets the vertical size of the visible content area.</summary>
			<returns>A floating-point value that specifies the vertical size of the visible content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text-editing control is not configured to support scrolling.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth">
			<summary>Gets the horizontal size of the visible content area.</summary>
			<returns>A floating-point value that specifies the horizontal size of the visible content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset">
			<summary>Gets or sets the horizontal scroll position.</summary>
			<returns>A floating-point value that specifies the horizontal scroll position, in device-independent units (1/96th inch per unit). Setting this property causes the text editing control to scroll to the specified horizontal offset.  Reading this property returns the current horizontal offset.The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
			<exception cref="T:System.ArgumentException">An attempt is made to set this property to a negative value.</exception>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a horizontal scroll bar is shown.</summary>
			<returns>A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility"></see> enumeration.The default value is Hidden.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly">
			<summary>Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</summary>
			<returns>true if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled">
			<summary>Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</summary>
			<returns>true to enable undo support; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck">
			<summary>Gets a <see cref="T:System.Windows.Controls.SpellCheck"></see> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Controls.SpellCheck"></see> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase"></see> or <see cref="T:System.Windows.Controls.RichTextBox"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset">
			<summary>Gets or sets the vertical scroll position.</summary>
			<returns>A floating-point value that specifies the vertical scroll position, in device-independent units (1/96th inch per unit).Setting this property causes the text editing control to scroll to the specified vertical offset.  Reading this property returns the current vertical offset.The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
			<exception cref="T:System.ArgumentException">An attempt is made to set this property to a negative value.</exception>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility">
			<summary>Gets or sets a value that indicates whether a vertical scroll bar is shown.</summary>
			<returns>A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility"></see> enumeration. The default value is Hidden.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight">
			<summary>Gets the vertical size of the scrollable content area.</summary>
			<returns>A floating-point value that specifies the vertical size of the scrollable content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth">
			<summary>Gets the horizontal size of the scrollable content area.</summary>
			<returns>A floating-point value that specifies the horizontal size of the scrollable content area, in device-independent units (1/96th inch per unit).The value of this property is 0.0 if the text editing control is not configured to support scrolling.This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.Thumb">
			<summary>Represents a control that lets the user drag and resize controls. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Thumb.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Thumb.DragCompleted">
			<summary>Occurs when the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control loses mouse capture.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Thumb.DragDelta">
			<summary>Occurs one or more times as the mouse changes position when a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control has logical focus and mouse capture. </summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.Thumb.DragStarted">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control receives logical focus and mouse capture.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Thumb.DragCompletedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragCompleted"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Thumb.DragDeltaEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragDelta"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Thumb.DragStartedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"></see> routed event. </summary>
			<returns>The identifier for the <see cref="E:System.Windows.Controls.Primitives.Thumb.DragStarted"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Thumb.IsDraggingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Thumb.OnCreateAutomationPeer">
			<summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.ThumbAutomationPeer"></see> for the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Thumb.OnDraggingChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Responds to a change in the value of the <see cref="P:System.Windows.Controls.Primitives.Thumb.IsDragging"></see> property. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Thumb.OnMouseMove(System.Windows.Input.MouseEventArgs)">
			<summary>Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove"></see> event. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Thumb.IsDragging">
			<summary>Gets whether the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control has logical focus and mouse capture and the left mouse button is pressed.</summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control has focus and mouse capture; otherwise false. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.TickBar">
			<summary>Represents a control that draws a set of tick marks for a <see cref="T:System.Windows.Controls.Slider"></see> control.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TickBar.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.TickBar"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.FillProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Fill"></see> dependency property. This property is read-only.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.IsDirectionReversedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed"></see> dependency property. This property is read-only.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Slider.IsSelectionRangeEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.MaximumProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Maximum"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.MinimumProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Minimum"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.PlacementProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Placement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.ReservedSpaceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.SelectionEndProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.SelectionStartProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.SelectionStart"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.TickFrequencyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.TickFrequency"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBar.TicksProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks"></see> dependency property. This property is read-only.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.TickBar.Ticks"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.TickBar.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Draws the tick marks for a <see cref="T:System.Windows.Controls.Slider"></see> control. </summary>
			<param name="dc">The <see cref="T:System.Windows.Media.DrawingContext"></see> that is used to draw the ticks.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.Fill">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> that is used to draw the tick marks.</summary>
			<returns>A <see cref="T:System.Windows.Media.Brush"></see> to use to draw tick marks. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.IsDirectionReversed">
			<summary>Gets or sets the direction of increasing value of the tick marks..</summary>
			<returns>true if the direction of increasing value is to the left for a horizontal <see cref="T:System.Windows.Controls.Slider"></see> or down for a vertical <see cref="T:System.Windows.Controls.Slider"></see>; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.IsSelectionRangeEnabled">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.TickBar"></see> displays a selection range. </summary>
			<returns>true if a selection range is displayed; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.Maximum">
			<summary>Gets or sets the maximum value that is possible for a tick mark.</summary>
			<returns>The largest possible value for a tick mark. The default value is 100.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.Minimum">
			<summary>Gets or sets the minimum value that is possible for a tick mark.</summary>
			<returns>The smallest possible value for a tick mark. The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.Placement">
			<summary>Gets or sets where tick marks appear  relative to a <see cref="T:System.Windows.Controls.Primitives.Track"></see> of a <see cref="T:System.Windows.Controls.Slider"></see> control.</summary>
			<returns>A <see cref="T:System.Windows.Controls.Primitives.TickBarPlacement"></see> enumeration value that identifies the position of the <see cref="T:System.Windows.Controls.Primitives.TickBar"></see> in the <see cref="T:System.Windows.Style"></see> layout of a <see cref="T:System.Windows.Controls.Slider"></see>. The default value is <see cref="F:System.Windows.Controls.Primitives.TickBarPlacement.Top"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.ReservedSpace">
			<summary>Gets or sets a space buffer for the area that contains the tick marks that are specified for a <see cref="T:System.Windows.Controls.Primitives.TickBar"></see>.</summary>
			<returns>A value that represents the total buffer area on either side of the row or column of tick marks. The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.SelectionEnd">
			<summary>Gets or sets the end point of a selection.</summary>
			<returns>The last value in a range of values for a selection. The default value is -1.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.SelectionStart">
			<summary>Gets or sets the start point of a selection. </summary>
			<returns>The first value in a range of values for a selection. The default value is -1.0.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.TickFrequency">
			<summary>Gets or sets the interval between tick marks.</summary>
			<returns>The distance between tick marks. The default value is one (1.0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.TickBar.Ticks">
			<summary>Gets or sets the positions of the tick marks.</summary>
			<returns>A <see cref="T:System.Windows.Media.DoubleCollection"></see> that specifies the locations of the tick marks. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.TickBarPlacement">
			<summary>Specifies the placement of a <see cref="T:System.Windows.Controls.Primitives.TickBar"></see> with respect to the <see cref="T:System.Windows.Controls.Primitives.Track"></see> of a <see cref="T:System.Windows.Controls.Slider"></see> control.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Bottom">
			<summary>The tick bar is positioned below the <see cref="T:System.Windows.Controls.Primitives.Track"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Left">
			<summary>The tick bar is positioned to the left of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Right">
			<summary>The tick bar is positioned to the right of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickBarPlacement.Top">
			<summary>The tick bar is positioned above the <see cref="T:System.Windows.Controls.Primitives.Track"></see> of the <see cref="T:System.Windows.Controls.Slider"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.TickPlacement">
			<summary>Specifies the position of tick marks in a <see cref="T:System.Windows.Controls.Slider"></see> control with respect to the <see cref="T:System.Windows.Controls.Primitives.Track"></see> that the control implements.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickPlacement.Both">
			<summary>Tick marks appear above and below the <see cref="T:System.Windows.Controls.Primitives.Track"></see> bar for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>, or to the left and right of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see>.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickPlacement.BottomRight">
			<summary>Tick marks appear below the <see cref="T:System.Windows.Controls.Primitives.Track"></see> for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>, or to the right of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see>. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickPlacement.None">
			<summary>No tick marks appear. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.TickPlacement.TopLeft">
			<summary>Tick marks appear above the <see cref="T:System.Windows.Controls.Primitives.Track"></see> for a horizontal <see cref="T:System.Windows.Controls.Slider"></see>, or to the left of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> for a vertical <see cref="T:System.Windows.Controls.Slider"></see>. </summary>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ToggleButton">
			<summary>Base class for controls that can switch states, such as <see cref="T:System.Windows.Controls.CheckBox"></see>. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToggleButton.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.ToggleButton.Checked">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> is checked.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate">
			<summary>Occurs when the state of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> is neither on nor off.</summary>
		</member>
		<member name="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked">
			<summary>Occurs when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> is unchecked.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ToggleButton.CheckedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked"></see>  routed event. </summary>
			<returns><see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ToggleButton.IndeterminateEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate"></see>  routed event. </summary>
			<returns><see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ToggleButton.IsCheckedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ToggleButton.IsThreeStateProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ToggleButton.UncheckedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked"></see>  routed event. </summary>
			<returns><see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked"></see> routed event.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToggleButton.OnChecked(System.Windows.RoutedEventArgs)">
			<summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> raises a <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked"></see> event.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Checked"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToggleButton.OnIndeterminate(System.Windows.RoutedEventArgs)">
			<summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> raises an <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate"></see> event.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Indeterminate"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToggleButton.OnUnchecked(System.Windows.RoutedEventArgs)">
			<summary>Called when a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> raises an <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked"></see> event.</summary>
			<param name="e">The event data for the <see cref="E:System.Windows.Controls.Primitives.ToggleButton.Unchecked"></see> event.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToggleButton.ToString">
			<summary>Returns the string representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> object. </summary>
			<returns>String representation of a <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> object.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ToggleButton.IsChecked">
			<summary>Gets or sets whether the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> is checked. </summary>
			<returns>true if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> is checked; false if the <see cref="T:System.Windows.Controls.Primitives.ToggleButton"></see> is unchecked; otherwise null. The default is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ToggleButton.IsThreeState">
			<summary>Determines whether the control supports two or three states. </summary>
			<returns>A Boolean value, true if the control supports three states; false otherwise. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel">
			<summary>Used to arrange overflow <see cref="T:System.Windows.Controls.ToolBar"></see> items.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth"></see> dependency property.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges and sizes the content of a <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel"></see> object.</summary>
			<returns>The size of the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel"></see>.</returns>
			<param name="arrangeBounds">Size that a toolbar overflow panel assumes to position child elements.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.CreateUIElementCollection(System.Windows.FrameworkElement)">
			<summary>Creates a new <see cref="T:System.Windows.Controls.UIElementCollection"></see>.</summary>
			<returns>A new collection.</returns>
			<param name="logicalParent">Logical parent of the new collection.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarOverflowPanel.MeasureOverride(System.Windows.Size)">
			<summary>Remeasures the <see cref="T:System.Windows.Controls.Primitives.ToolBarOverflowPanel"></see>. </summary>
			<returns>The desired size.</returns>
			<param name="constraint">Constraint size is an upper limit. The return value should not exceed this size.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ToolBarOverflowPanel.WrapWidth">
			<summary>Gets or sets the recommended width for an overflow <see cref="T:System.Windows.Controls.ToolBar"></see> before items flow to the next line.</summary>
			<returns>A double value that represents the recommended width of the <see cref="T:System.Windows.Controls.ToolBar"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.ToolBarPanel">
			<summary>Arranges <see cref="T:System.Windows.Controls.ToolBar"></see> items inside a <see cref="T:System.Windows.Controls.ToolBar"></see>.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarPanel.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarPanel.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges and sizes <see cref="T:System.Windows.Controls.ToolBar"></see> items inside a <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel"></see>.</summary>
			<returns>The size of the panel.</returns>
			<param name="arrangeSize">The size that the <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel"></see> assumes to position its children.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarPanel.GetVisualChild(System.Int32)">
			<summary>Gets the child at a specified index.</summary>
			<returns>Returns the child at the specified index.</returns>
			<param name="index">Specified index. Index must be between 0 and the count of the visual children.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.ToolBarPanel.MeasureOverride(System.Windows.Size)">
			<summary>Remeasures a toolbar panel.</summary>
			<returns>The desired size of the panel.</returns>
			<param name="constraint">The measurement constraints; a <see cref="T:System.Windows.Controls.Primitives.ToolBarPanel"></see> cannot return a size larger than the constraint.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.ToolBarPanel.VisualChildrenCount">
			<summary>Gets the number of <see cref="T:System.Windows.Controls.ToolBar"></see> items that are currently visible.</summary>
			<returns>Returns the number of visible items.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.Track">
			<summary>Represents a control primitive that handles the positioning and sizing of a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control and two <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> controls that are used to set a <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see>. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Track.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Track.IsDirectionReversedProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Track.MaximumProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Maximum"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Track.MinimumProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Minimum"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Track.OrientationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Orientation"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Track.ValueProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.Track.ViewportSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.Track.ViewportSize"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Track.ArrangeOverride(System.Windows.Size)">
			<summary>Creates the layout for the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Size"></see> to use for the <see cref="T:System.Windows.Controls.Primitives.Track"></see> content.</returns>
			<param name="arrangeSize">The area that is provided for the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Track.GetVisualChild(System.Int32)">
			<summary>Gets the child of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> at the specified index.</summary>
			<returns>Returns the object of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> at the specified index in the list of visual child elements. The index must be a number between zero (0) and the value of the <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount"></see> property minus one (1).</returns>
			<param name="index">The index of the child.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">The specified index is greater than the value of the <see cref="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount"></see> property minus one (1).</exception>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Track.MeasureOverride(System.Windows.Size)">
			<summary>Measures the layout size that is required for the <see cref="T:System.Windows.Controls.Primitives.Track"></see> and its components.</summary>
			<returns>The layout <see cref="T:System.Windows.Size"></see> that is required by the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</returns>
			<param name="ava ilableSize">The size of the available space for the track.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Track.ValueFromDistance(System.Double,System.Double)">
			<summary>Calculates the change in the <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> when the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> moves.</summary>
			<returns>The change in <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> that corresponds to the displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> of the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</returns>
			<param name="horizontal">The horizontal displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see>.</param>
			<param name="vertical">The vertical displacement of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see>.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.Track.ValueFromPoint(System.Windows.Point)">
			<summary>Calculates the distance from the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> to a specified point along the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
			<returns>The distance between the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> and the specified pt value.</returns>
			<param name="pt">The specified point.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton">
			<summary>Gets the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> that decreases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property of the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> that reduces the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> control when the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> is pressed. The default value is a <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> control that has default settings.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton">
			<summary>Gets the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> that increases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> property of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> class.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> that increases the <see cref="P:System.Windows.Controls.Primitives.RangeBase.Value"></see> of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> control when the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> is pressed. The default value is a <see cref="T:System.Windows.Controls.Primitives.RepeatButton"></see> control that has default settings.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.IsDirectionReversed">
			<summary>Gets or sets whether the direction of increasing <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> is reversed from the default direction.</summary>
			<returns>true if the <see cref="P:System.Windows.Controls.Primitives.Track.IncreaseRepeatButton"></see> and the <see cref="P:System.Windows.Controls.Primitives.Track.DecreaseRepeatButton"></see> exchanged positions and the direction of increasing value is reversed; otherwise false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.Maximum">
			<summary>Gets or sets the maximum possible <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> of the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
			<returns>The largest allowable <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> for the <see cref="T:System.Windows.Controls.Primitives.Track"></see>. The default value is one (1).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.Minimum">
			<summary>Gets or sets the minimum possible <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> of the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
			<returns>The smallest allowable <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> for the <see cref="T:System.Windows.Controls.Primitives.Track"></see>. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.Orientation">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Track"></see> is displayed horizontally or vertically.</summary>
			<returns>An <see cref="T:System.Windows.Controls.Orientation"></see> enumeration value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Track"></see> is displayed horizontally or vertically. The default value is <see cref="F:System.Windows.Controls.Orientation.Vertical"></see>.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.Thumb">
			<summary>Gets the <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control that is used to change the <see cref="P:System.Windows.Controls.Primitives.Track.Value"></see> of a <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control that is used with the <see cref="T:System.Windows.Controls.Primitives.Track"></see>. The default value is a <see cref="T:System.Windows.Controls.Primitives.Thumb"></see> control that has default settings.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.Value">
			<summary>Gets or sets the current value of the <see cref="T:System.Windows.Controls.Primitives.Track"></see> as determined by the position of the <see cref="P:System.Windows.Controls.Primitives.Track.Thumb"></see> control.</summary>
			<returns>The current value of the <see cref="T:System.Windows.Controls.Primitives.Track"></see>. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.ViewportSize">
			<summary>Gets or sets the size of the part of the scrollable content that is visible.</summary>
			<returns>The size of the visible area of the scrollable content. The default value is Double.NaN, which means that the content size is not defined.</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.Track.VisualChildrenCount">
			<summary>Gets the number of child elements of a <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</summary>
			<returns>An integer between 0 and 2 that specifies the number of child elements in the <see cref="T:System.Windows.Controls.Primitives.Track"></see>.</returns>
		</member>
		<member name="T:System.Windows.Controls.Primitives.UniformGrid">
			<summary>Provides a way to arrange content in a grid where all the cells in the grid have the same size.</summary>
		</member>
		<member name="M:System.Windows.Controls.Primitives.UniformGrid.#ctor">
			<summary>Initializes an instance of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Controls.Primitives.UniformGrid.ColumnsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Columns"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.UniformGrid.FirstColumnProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Controls.Primitives.UniformGrid.RowsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Controls.Primitives.UniformGrid.Rows"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Controls.Primitives.UniformGrid.ArrangeOverride(System.Windows.Size)">
			<summary>Defines the layout of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid"></see> by distributing space evenly among all of the child elements.</summary>
			<returns>The actual <see cref="T:System.Windows.Size"></see> of the grid that is rendered to display the child elements that are visible.</returns>
			<param name="arrangeSize">The <see cref="T:System.Windows.Size"></see> of the area for the grid to use.</param>
		</member>
		<member name="M:System.Windows.Controls.Primitives.UniformGrid.MeasureOverride(System.Windows.Size)">
			<summary>Computes the desired size of the <see cref="T:System.Windows.Controls.Primitives.UniformGrid"></see> by measuring all of the child elements.</summary>
			<returns>The desired <see cref="T:System.Windows.Size"></see> based on the child content of the grid and the constraint parameter.</returns>
			<param name="constraint">The <see cref="T:System.Windows.Size"></see> of the available area for the grid.</param>
		</member>
		<member name="P:System.Windows.Controls.Primitives.UniformGrid.Columns">
			<summary>Gets or sets the number of columns that are in the grid.</summary>
			<returns>The number of columns that are in the grid. The default value is zero (0). </returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.UniformGrid.FirstColumn">
			<summary>Gets or sets the number of leading blank cells in the first row of the grid.</summary>
			<returns>The number of empty cells that are in the first row of the grid. The default value is zero (0).</returns>
		</member>
		<member name="P:System.Windows.Controls.Primitives.UniformGrid.Rows">
			<summary>Gets or sets the number of rows that are in the grid.</summary>
			<returns>The number of rows that are in the grid. The default value is zero (0).</returns>
		</member>
		<member name="N:System.Windows.Data">
			<summary>Contains classes used for binding properties to data sources, data source provider classes, and data-specific implementations of collections and views.</summary>
		</member>
		<member name="T:System.Windows.Data.Binding">
			<summary>Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</summary>
		</member>
		<member name="M:System.Windows.Data.Binding.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.Binding.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.Binding"></see> class with an initial path.</summary>
			<param name="path">The initial <see cref="P:System.Windows.Data.Binding.Path"></see> for the binding.</param>
		</member>
		<member name="E:System.Windows.Data.Binding.SourceUpdated">
			<summary>Occurs when a value is transferred from the binding target to the binding source, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnSourceUpdated"></see> value set to true.</summary>
		</member>
		<member name="E:System.Windows.Data.Binding.TargetUpdated">
			<summary>Occurs when a value is transferred from the binding source to the binding target, but only for bindings with the <see cref="P:System.Windows.Data.Binding.NotifyOnTargetUpdated"></see> value set to true.</summary>
		</member>
		<member name="F:System.Windows.Data.Binding.SourceUpdatedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated"></see> attached event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Data.Binding.SourceUpdated"></see> attached event.</returns>
		</member>
		<member name="F:System.Windows.Data.Binding.TargetUpdatedEvent">
			<summary>Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated"></see> attached event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Data.Binding.TargetUpdated"></see> attached event.</returns>
		</member>
		<member name="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty">
			<summary>Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
			<summary>Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated"></see> attached event. </summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> that listens to the event.</param>
			<param name="handler">The handler to add.</param>
		</member>
		<member name="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
			<summary>Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated"></see> attached event. </summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> that listens to the event.</param>
			<param name="handler">The handler to add.</param>
		</member>
		<member name="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)">
			<summary>Returns an XML namespace manager object used by the binding attached to the specified object. </summary>
			<returns>A returned object used for viewing XML namespaces that relate to the binding on the passed object element. This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager"></see>.</returns>
			<param name="target">The object from which to get namespace information.</param>
			<exception cref="T:System.ArgumentNullException">The target parameter cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
			<summary>Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated"></see> attached event. </summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> that listens to the event.</param>
			<param name="handler">The handler to remove.</param>
		</member>
		<member name="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})">
			<summary>Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated"></see> attached event. </summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see> that listens to the event.</param>
			<param name="handler">The handler to remove.</param>
		</member>
		<member name="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)">
			<summary>Sets a namespace manager object used by the binding attached to the provided element. </summary>
			<param name="target">The object from which to get namespace information.</param>
			<param name="value">The <see cref="T:System.Xml.XmlNamespaceManager"></see> to use for namespace evaluation in the passed element.</param>
			<exception cref="T:System.ArgumentNullException">target is null. </exception>
		</member>
		<member name="M:System.Windows.Data.Binding.ShouldSerializePath">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.Path"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.Binding.ShouldSerializeSource">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.Source"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.Binding.ShouldSerializeValidationRules">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.BindsDirectlyToSource">
			<summary>Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path"></see> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider"></see> object.</summary>
			<returns>false to evaluate the path relative to the data item itself; otherwise, true. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.Converter">
			<summary>Gets or sets the converter to use.</summary>
			<returns>A value of type <see cref="T:System.Windows.Data.IValueConverter"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.ConverterCulture">
			<summary>Gets or sets the culture in which to evaluate the converter.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.ConverterParameter">
			<summary>Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter"></see>.</summary>
			<returns>The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.ElementName">
			<summary>Gets or sets the name of the element to use as the binding source object.</summary>
			<returns>The value of the Name property or x:Name Attribute of the element of interest. You can refer only to elements that are created in code if they are registered to the appropriate <see cref="T:System.Windows.NameScope"></see> through RegisterName. For more information, see WPF Namescopes.The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.IsAsync">
			<summary>Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding"></see> should get and set values asynchronously.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.Mode">
			<summary>Gets or sets a value that indicates the direction of the data flow in the binding.</summary>
			<returns>One of the <see cref="T:System.Windows.Data.BindingMode"></see> values. The default value is <see cref="F:System.Windows.Data.BindingMode.Default"></see>, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)"></see> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault"></see> property.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.NotifyOnSourceUpdated">
			<summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated"></see> event when a value is transferred from the binding target to the binding source.</summary>
			<returns>true if the <see cref="E:System.Windows.Data.Binding.SourceUpdated"></see> event should be raised when the binding source value is updated; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.NotifyOnTargetUpdated">
			<summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated"></see> event when a value is transferred from the binding source to the binding target.</summary>
			<returns>true if the <see cref="E:System.Windows.Data.Binding.TargetUpdated"></see> event should be raised when the binding target value is updated; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.NotifyOnValidationError">
			<summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error"></see> attached event on the bound object.</summary>
			<returns>true if the <see cref="E:System.Windows.Controls.Validation.Error"></see> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.Path">
			<summary>Gets or sets the path to the binding source property.</summary>
			<returns>The path to the binding source. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.RelativeSource">
			<summary>Gets or sets the binding source by specifying its location relative to the position of the binding target.</summary>
			<returns>A <see cref="T:System.Windows.Data.RelativeSource"></see> object specifying the relative location of the binding source to use. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.Source">
			<summary>Gets or sets the object to use as the binding source.</summary>
			<returns>The object to use as the binding source.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter">
			<summary>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule"></see> with your binding.</summary>
			<returns>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.UpdateSourceTrigger">
			<summary>Gets or sets a value that determines the timing of binding source updates.</summary>
			<returns>One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> values. The default value is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default"></see>, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> value of the target dependency property. However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged"></see>, while the <see cref="P:System.Windows.Controls.TextBox.Text"></see> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus"></see>.A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger"></see> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)"></see> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger"></see> property.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.ValidationRules">
			<summary>Gets a collection of rules that check the validity of the user input.</summary>
			<returns>A collection of <see cref="T:System.Windows.Controls.ValidationRule"></see> objects.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.XPath">
			<summary>Gets or sets an XPath query that returns the value on the XML binding source to use.</summary>
			<returns>The XPath query. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.Binding.XmlNamespaceManager">
			<summary>Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager"></see> used to perform namespace-aware XPath queries in XML bindings.</summary>
			<returns>The <see cref="T:System.Xml.XmlNamespaceManager"></see> used to perform namespace-aware XPath queries in XML bindings. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Data.BindingBase">
			<summary>Represents the base class for <see cref="T:System.Windows.Data.Binding"></see>, <see cref="T:System.Windows.Data.PriorityBinding"></see>, and <see cref="T:System.Windows.Data.MultiBinding"></see>. This class is abstract.</summary>
		</member>
		<member name="M:System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set on the property where this binding and extension are applied. This method is sealed.</summary>
			<returns>The value to set on the binding target property.</returns>
			<param name="serviceProvider">The object that can provide services for the markup extension. May be null; see the Remarks section later in this topic for more information.</param>
		</member>
		<member name="M:System.Windows.Data.BindingBase.ShouldSerializeFallbackValue">
			<summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> property on instances of this class.</summary>
			<returns>true if the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingBase.FallbackValue">
			<summary>Gets or sets the value to use when the binding is unable to return a value.</summary>
			<returns>The default value is <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see>.</returns>
		</member>
		<member name="T:System.Windows.Data.BindingExpression">
			<summary>Contains instance information about a single instance of a <see cref="T:System.Windows.Data.Binding"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Data.BindingExpression.UpdateSource">
			<summary>Sends the current binding target value to the binding source property in <see cref="F:System.Windows.Data.BindingMode.TwoWay"></see> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource"></see> bindings.</summary>
			<exception cref="T:System.InvalidOperationException">The binding has been detached from its target.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingExpression.UpdateTarget">
			<summary>Forces a data transfer from the binding source property to the binding target property.</summary>
			<exception cref="T:System.InvalidOperationException">The binding has been detached from its target.</exception>
		</member>
		<member name="P:System.Windows.Data.BindingExpression.DataItem">
			<summary>Gets the binding source object that this <see cref="T:System.Windows.Data.BindingExpression"></see> uses.</summary>
			<returns>Returns the binding source object that this <see cref="T:System.Windows.Data.BindingExpression"></see> uses.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingExpression.ParentBinding">
			<summary>Returns the <see cref="T:System.Windows.Data.Binding"></see> object of the current <see cref="T:System.Windows.Data.BindingExpression"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Data.Binding"></see> object of the current binding expression.</returns>
		</member>
		<member name="T:System.Windows.Data.BindingExpressionBase">
			<summary>Represents the base class for <see cref="T:System.Windows.Data.BindingExpression"></see>, <see cref="T:System.Windows.Data.PriorityBindingExpression"></see>, and <see cref="T:System.Windows.Data.MultiBindingExpression"></see>. This class is abstract.</summary>
		</member>
		<member name="M:System.Windows.Data.BindingExpressionBase.UpdateSource">
			<summary>Sends the current binding target value to the binding source in <see cref="F:System.Windows.Data.BindingMode.TwoWay"></see> or <see cref="F:System.Windows.Data.BindingMode.OneWayToSource"></see> bindings.</summary>
		</member>
		<member name="M:System.Windows.Data.BindingExpressionBase.UpdateTarget">
			<summary>Forces a data transfer from the binding source to the binding target.</summary>
		</member>
		<member name="P:System.Windows.Data.BindingExpressionBase.HasError">
			<summary>Gets a value that indicates whether the parent binding has a failed validation rule.</summary>
			<returns>true if the parent binding has a failed validation rule; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingExpressionBase.ParentBindingBase">
			<summary>Gets the <see cref="T:System.Windows.Data.BindingBase"></see> object from which this <see cref="T:System.Windows.Data.BindingExpressionBase"></see> object is created.</summary>
			<returns>The <see cref="T:System.Windows.Data.BindingBase"></see> object from which this <see cref="T:System.Windows.Data.BindingExpressionBase"></see> object is created.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingExpressionBase.Status">
			<summary>Gets the status of the binding expression.</summary>
			<returns>A <see cref="T:System.Windows.Data.BindingStatus"></see> value that describes the status of the binding expression.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingExpressionBase.ValidationError">
			<summary>Gets the <see cref="T:System.Windows.Controls.ValidationError"></see> that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase"></see> to be invalid.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ValidationError"></see> that caused this instance of <see cref="T:System.Windows.Data.BindingExpressionBase"></see> to be invalid.</returns>
		</member>
		<member name="T:System.Windows.Data.BindingListCollectionView">
			<summary>Represents the <see cref="T:System.Windows.Data.CollectionView"></see> for collections that implement <see cref="T:System.ComponentModel.IBindingList"></see>, such as Microsoft ActiveX Data Objects (ADO) data views.</summary>
		</member>
		<member name="M:System.Windows.Data.BindingListCollectionView.#ctor(System.ComponentModel.IBindingList)">
			<summary>Initializes an instance of <see cref="T:System.Windows.Data.BindingListCollectionView"></see> over the given list.</summary>
			<param name="list">The underlying <see cref="T:System.ComponentModel.IBindingList"></see>.</param>
		</member>
		<member name="M:System.Windows.Data.BindingListCollectionView.Contains(System.Object)">
			<summary>Returns a value that indicates whether a given item belongs to this collection view.</summary>
			<returns>true if the item belongs to this collection view; otherwise, false.</returns>
			<param name="item">The object to check.</param>
		</member>
		<member name="M:System.Windows.Data.BindingListCollectionView.GetItemAt(System.Int32)">
			<summary>Retrieves the item at the specified zero-based index in this view.</summary>
			<returns>The item at the specified zero-based index in this view.</returns>
			<param name="index">The zero-based index at which the item is located.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingListCollectionView.IndexOf(System.Object)">
			<summary>Returns the index at which the given item belongs in the collection view.</summary>
			<returns>The index of the item in the collection, or -1 if the item does not exist in the collection view.</returns>
			<param name="item">The object to look for in the collection.</param>
		</member>
		<member name="M:System.Windows.Data.BindingListCollectionView.MoveCurrentToPosition(System.Int32)">
			<summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> in the view.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
			<param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> to.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index is out of range. </exception>
		</member>
		<member name="M:System.Windows.Data.BindingListCollectionView.PassesFilter(System.Object)">
			<summary>Returns a value that indicates whether the specified item in the underlying collection belongs to this view.</summary>
			<returns>true if the specified item belongs to this view or if there is not filter set on this collection view; otherwise, false.</returns>
			<param name="item">The item to check.</param>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.CanCustomFilter">
			<summary>Gets a value that indicates whether this view supports custom filtering.</summary>
			<returns>true if this view supports custom filtering; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.CanFilter">
			<summary>Gets a value that indicates whether this view supports callback-based filtering.</summary>
			<returns>This property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.CanGroup">
			<summary>Gets a value that indicates whether this view supports grouping.</summary>
			<returns>For a default instance of <see cref="T:System.Windows.Data.BindingListCollectionView"></see> this property always returns true.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.CanSort">
			<summary>Gets a value that indicates whether the collection supports sorting.</summary>
			<returns>For a default instance of <see cref="T:System.Windows.Data.BindingListCollectionView"></see> this property always returns true.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.Count">
			<summary>Gets the estimated number of records in the collection. </summary>
			<returns>One of the following:NameValueMeaning-1Could not determine the count of the collection. This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is attempting to increase efficiency and minimize dependence on always having the entire collection available.any other integerThe count of the collection.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.CustomFilter">
			<summary>Gets or sets a custom filter.</summary>
			<returns>A string that specifies how the items are filtered.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.GroupBySelector">
			<summary>Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription"></see> as a function of the parent group and its level. </summary>
			<returns>A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription"></see> as a function of the parent group and its level. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.GroupDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that describe how the items in the collection are grouped in the view.</summary>
			<returns>A collection of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that describe how the items in the collection are grouped in the view.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.Groups">
			<summary>Gets the top-level groups.</summary>
			<returns>A read-only collection of the top-level groups or null if there are no groups.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.IsDataInGroupOrder">
			<summary>Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</summary>
			<returns>true if the list of items is already in the correct order for grouping; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.IsEmpty">
			<summary>Returns a value that indicates whether the resulting (filtered) view is empty.</summary>
			<returns>true if the resulting view is empty; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.BindingListCollectionView.SortDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describe how the items in the collection are sorted in the view.</summary>
			<returns>A collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describe how the items in the collection are sorted in the view.</returns>
		</member>
		<member name="T:System.Windows.Data.BindingMode">
			<summary>Describes the direction of the data flow in a binding.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingMode.Default">
			<summary>Uses the default <see cref="P:System.Windows.Data.Binding.Mode"></see> value of the binding target. The default value varies for each dependency property. In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings. A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)"></see> and then check the boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault"></see> property.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingMode.OneTime">
			<summary>Updates the binding target when the application starts or when the data context changes. This type of binding is appropriate if you are using data where either a snapshot of the current state is appropriate to use or the data is truly static. This type of binding is also useful if you want to initialize your target property with some value from a source property and the data context is not known in advance. This is essentially a simpler form of <see cref="F:System.Windows.Data.BindingMode.OneWay"></see> binding that provides better performance in cases where the source value does not change.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingMode.OneWay">
			<summary>Updates the binding target (target) property when the binding source (source) changes. This type of binding is appropriate if the control being bound is implicitly read-only. For instance, you may bind to a source such as a stock ticker. Or perhaps your target property has no control interface provided for making changes, such as a data-bound background color of a table. If there is no need to monitor the changes of the target property, using the <see cref="F:System.Windows.Data.BindingMode.OneWay"></see> binding mode avoids the overhead of the <see cref="F:System.Windows.Data.BindingMode.TwoWay"></see> binding mode.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingMode.OneWayToSource">
			<summary>Updates the source property when the target property changes.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingMode.TwoWay">
			<summary>Causes changes to either the source property or the target property to automatically update the other. This type of binding is appropriate for editable forms or other fully-interactive UI scenarios.</summary>
		</member>
		<member name="T:System.Windows.Data.BindingOperations">
			<summary>Provides static methods to manipulate bindings, including <see cref="T:System.Windows.Data.Binding"></see>, <see cref="T:System.Windows.Data.MultiBinding"></see>, and <see cref="T:System.Windows.Data.PriorityBinding"></see> objects. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.ClearAllBindings(System.Windows.DependencyObject)">
			<summary>Removes all bindings, including bindings of type <see cref="T:System.Windows.Data.Binding"></see>, <see cref="T:System.Windows.Data.MultiBinding"></see>, and <see cref="T:System.Windows.Data.PriorityBinding"></see>, from the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<param name="target">The object from which to remove bindings.</param>
			<exception cref="T:System.ArgumentNullException">If target is null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.ClearBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Removes the binding from a property if there is one.</summary>
			<param name="target">The object from which to remove the binding.</param>
			<param name="dp">The dependency property from which to remove the binding.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Retrieves the <see cref="T:System.Windows.Data.Binding"></see> object that is set on the specified property.</summary>
			<returns>The <see cref="T:System.Windows.Data.Binding"></see> object set on the given property or null if no <see cref="T:System.Windows.Data.Binding"></see> object has been set.</returns>
			<param name="target">The object where dp is.</param>
			<param name="dp">The binding target property from which to retrieve the binding.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetBindingBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Retrieves the <see cref="T:System.Windows.Data.BindingBase"></see> object that is set on the specified property.</summary>
			<returns>The <see cref="T:System.Windows.Data.BindingBase"></see> object that is set on the given property or null if no binding object has been set.</returns>
			<param name="target">The object where dp is.</param>
			<param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingBase"></see> object.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Returns the <see cref="T:System.Windows.Data.BindingExpression"></see> object associated with the specified binding target property on the specified object.</summary>
			<returns>The <see cref="T:System.Windows.Data.BindingExpression"></see> object associated with the given property or null if none exists. If a <see cref="T:System.Windows.Data.PriorityBindingExpression"></see> object is set on the property, the <see cref="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression"></see> is returned.</returns>
			<param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpression"></see> object.</param>
			<param name="t arget">The binding target object where dp is.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetBindingExpressionBase(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Retrieves the <see cref="T:System.Windows.Data.BindingExpressionBase"></see> object that is set on the specified property.</summary>
			<returns>The <see cref="T:System.Windows.Data.BindingExpressionBase"></see> object that is set on the given property or null if no binding object has been set.</returns>
			<param name="target">The object where dp is.</param>
			<param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.BindingExpressionBase"></see> object.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetMultiBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Retrieves the <see cref="T:System.Windows.Data.MultiBinding"></see> object that is set on the specified property.</summary>
			<returns>The <see cref="T:System.Windows.Data.MultiBinding"></see> object set on the given property or null if no <see cref="T:System.Windows.Data.MultiBinding"></see> object has been set.</returns>
			<param name="target">The object where dp is.</param>
			<param name="dp">The binding target property from which to retrieve the binding.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetMultiBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Returns the <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object associated with the specified binding target property on the specified object.</summary>
			<returns>The <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object associated with the given property or null if none exists.</returns>
			<param name="target">The binding target object where dp is.</param>
			<param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetPriorityBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Retrieves the <see cref="T:System.Windows.Data.PriorityBinding"></see> object that is set on the specified property.</summary>
			<returns>The <see cref="T:System.Windows.Data.PriorityBinding"></see> object set on the given property or null if no <see cref="T:System.Windows.Data.PriorityBinding"></see> object has been set.</returns>
			<param name="target">The object where dp is.</param>
			<param name="dp">The binding target property from which to retrieve the binding.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.GetPriorityBindingExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Returns the <see cref="T:System.Windows.Data.PriorityBindingExpression"></see> object associated with the specified binding target property on the specified object.</summary>
			<returns>The <see cref="T:System.Windows.Data.PriorityBindingExpression"></see> object associated with the given property or null if none exists.</returns>
			<param name="target">The binding target object where dp is.</param>
			<param name="dp">The binding target property from which to retrieve the <see cref="T:System.Windows.Data.PriorityBindingExpression"></see> object.</param>
			<exception cref="T:System.ArgumentNullException">The target and dp parameters cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.IsDataBound(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
			<summary>Returns a value that indicates whether the specified property is currently data-bound.</summary>
			<returns>true if the specified property is data-bound; otherwise, false.</returns>
			<param name="target">The object where dp is.</param>
			<param name="dp">The dependency property to check.</param>
			<exception cref="T:System.ArgumentNullException">If target is null.</exception>
		</member>
		<member name="M:System.Windows.Data.BindingOperations.SetBinding(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.Data.BindingBase)">
			<summary>Creates and associates a new instance of <see cref="T:System.Windows.Data.BindingExpressionBase"></see> with the specified binding target property.</summary>
			<returns>The instance of <see cref="T:System.Windows.Data.BindingExpressionBase"></see> created for and associated with the specified property. The <see cref="T:System.Windows.Data.BindingExpressionBase"></see> class is the base class of <see cref="T:System.Windows.Data.BindingExpression"></see>, <see cref="T:System.Windows.Data.MultiBindingExpression"></see>, and <see cref="T:System.Windows.Data.PriorityBindingExpression"></see>.</returns>
			<param name="target">The binding target of the binding.</param>
			<param name="binding">The <see cref="T:System.Windows.Data.BindingBase"></see> object that describes the binding.</param>
			<param name="dp">The target property of the binding.</param>
			<exception cref="T:System.ArgumentNullException">The target parameter cannot be null.</exception>
			<exception cref="T:System.ArgumentNullException">The dp parameter cannot be null.</exception>
			<exception cref="T:System.ArgumentNullException">The binding parameter cannot be null.</exception>
		</member>
		<member name="T:System.Windows.Data.BindingStatus">
			<summary>Describes the status of a binding.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.Active">
			<summary>The binding has been successfully activated. This means that the binding has been attached to its binding target (target) property and has located the binding source (source), resolved the Path and/or XPath, and begun transferring values.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.AsyncRequestPending">
			<summary>The binding is waiting for an asynchronous operation to complete.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.Detached">
			<summary>The binding has been detached from its target property.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.Inactive">
			<summary>The binding has not been activated.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.PathError">
			<summary>The binding was unable to resolve the source path.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.Unattached">
			<summary>The binding has not yet been attached to its target property.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.UpdateSourceError">
			<summary>The binding was unable to send the value to the source property.</summary>
		</member>
		<member name="F:System.Windows.Data.BindingStatus.UpdateTargetError">
			<summary>The binding could not successfully return a source value to update the target value. For more information, see the remarks on <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see>.</summary>
		</member>
		<member name="T:System.Windows.Data.CollectionContainer">
			<summary>Holds an existing collection structure, such as an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"></see> or a <see cref="T:System.Data.DataSet"></see>, to be used inside a <see cref="T:System.Windows.Data.CompositeCollection"></see>.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionContainer.#ctor">
			<summary>Initializes a new instance of a <see cref="T:System.Windows.Data.CollectionContainer"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionContainer.CollectionChanged">
			<summary>Occurs when the contained collection changes.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionContainer.System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
			<summary>Occurs when the continaed collection has changed.</summary>
		</member>
		<member name="F:System.Windows.Data.CollectionContainer.CollectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Data.CollectionContainer.Collection"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Data.CollectionContainer.Collection"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionContainer.OnContainedCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Data.CollectionContainer.CollectionChanged"></see> event.</summary>
			<param name="args">The event data.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionContainer.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
			<summary>Handles events from the centralized event table.</summary>
			<returns>true if the listener handled the event; otherwise, false.</returns>
			<param name="e">The event data.</param>
			<param name="sender">The object that originated the event.</param>
			<param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager"></see> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager"></see>.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionContainer.ShouldSerializeCollection">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.CollectionContainer.Collection"></see> property should be persisted. </summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionContainer.Collection">
			<summary>Gets or sets the collection to add. This is a dependency property.</summary>
			<returns>The collection to add. The default is an empty collection.</returns>
		</member>
		<member name="T:System.Windows.Data.CollectionView">
			<summary>Represents a view of a data collection. Views allow for the functionalities of grouping, sorting, filtering, and the concept of a current record pointer.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionView.#ctor(System.Collections.IEnumerable)">
			<summary>Creates a view over the given collection.</summary>
			<param name="collection">The underlying collection.</param>
		</member>
		<member name="E:System.Windows.Data.CollectionView.CollectionChanged">
			<summary>Occurs when the view has changed.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionView.CurrentChanged">
			<summary>Occurs after the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> has been changed.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionView.CurrentChanging">
			<summary>Occurs when the currency is changing.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionView.PropertyChanged">
			<summary>Occurs when a property value has changed.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionView.System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
			<summary>Occurs when the view has changed.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionView.System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
			<summary>Occurs when a property value changes.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionView.Contains(System.Object)">
			<summary>Returns a value that indicates whether a given item belongs to this collection view.</summary>
			<returns>true if the item belongs to this collection view; otherwise, false.</returns>
			<param name="item">The object to check.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.DeferRefresh">
			<summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
			<returns>An <see cref="T:System.IDisposable"></see> object that you can use to dispose of the calling object.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionView.GetEnumerator">
			<summary>Returns an object that you can use to enumerate the items in this view.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> object that you can use to enumerate the items in this view.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionView.GetItemAt(System.Int32)">
			<summary>Retrieves the item at the specified zero-based index in this view.</summary>
			<returns>The item at the specified zero-based index in this view.</returns>
			<param name="index">The zero-based index at which the item is located.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">If index is less than 0. </exception>
		</member>
		<member name="M:System.Windows.Data.CollectionView.IndexOf(System.Object)">
			<summary>Returns the index at which the specified item is located.</summary>
			<returns>The index at which the specified item is located, or -1 if the item is unknown.</returns>
			<param name="I tem">The item to locate.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.MoveCurrentTo(System.Object)">
			<summary>Set the specified item to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> in the view.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is within the view; otherwise, false.</returns>
			<param name="I tem">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see>.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.MoveCurrentToFirst">
			<summary>Sets the first item in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see>.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionView.MoveCurrentToLast">
			<summary>Sets the last item in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see>.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionView.MoveCurrentToNext">
			<summary>Sets the item after the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see>.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionView.MoveCurrentToPosition(System.Int32)">
			<summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> in the view.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
			<param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> to.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.MoveCurrentToPrevious">
			<summary>Sets the item before the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> in the view as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see>.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionView.OKToChangeCurrent">
			<summary>Returns a value that indicates whether the view can make changes to the currency.</summary>
			<returns>false if a listener cancels the change; otherwise, true.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"></see> has been posted to the message queue.</summary>
			<returns>The purpose of this notification is to allow collection views to take a snapshot of the information, which is often the state of the data collection, that is needed at the time of the post.</returns>
			<param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"></see> object that is added to the change log.</param>
			<exception cref="T:System.ArgumentNullException">If args is null. </exception>
		</member>
		<member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Notifies listeners that the view has changed using the provided arguments.</summary>
			<param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"></see> object to pass to the event handler.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Handles <see cref="E:System.Windows.Data.CollectionView.CollectionChanged"></see> events.</summary>
			<param name="sender">The sender of the event.</param>
			<param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"></see> object to pass to the event handler.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.OnCurrentChanging">
			<summary>Raises a <see cref="E:System.Windows.Data.CollectionView.CurrentChanging"></see> event that is not cancelable.</summary>
			<exception cref="T:System.InvalidOperationException">This <see cref="E:System.Windows.Data.CollectionView.CurrentChanging"></see> event cannot be canceled.</exception>
		</member>
		<member name="M:System.Windows.Data.CollectionView.OnCurrentChanging(System.ComponentModel.CurrentChangingEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Data.CollectionView.CurrentChanging"></see> event with the provided arguments.</summary>
			<param name="args">Information about the event.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
			<summary>Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged"></see> event using the provided arguments.</summary>
			<param name="e">Arguments of the event being raised.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.PassesFilter(System.Object)">
			<summary>Returns a value that indicates whether the specified item in the underlying collection belongs to this view.</summary>
			<returns>true if the specified item belongs to this view or if there is not filter set on this collection view; otherwise, false.</returns>
			<param name="I tem">The item to check.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Must be implemented by the derived classes to process a single change on the UI thread.</summary>
			<param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"></see> object to process.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.RefreshOrDefer">
			<summary>Refreshes the view or marks that the view needs to be refreshed when the defer cycle completes.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionView.RefreshOverride">
			<summary>Recreates the view.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionView.SetCurrent(System.Object,System.Int32)">
			<summary>Sets the specified item and index as the values of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> and the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition"></see> respectively.</summary>
			<param name="newPosition">The int value to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition"></see> property value.</param>
			<param name="newItem">The item to set as the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see>.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionView.System.Collections.IEnumerable.GetEnumerator">
			<summary>An IEnumerator object that you can use to enumerate the items in this view.</summary>
			<returns>An IEnumerator object that you can use to enumerate the items in this view.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.CanFilter">
			<summary>Gets a value that indicates whether this view supports filtering.</summary>
			<returns>true if this view support filtering; otherwise, false. This property always returns true for a default instance of this class.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.CanGroup">
			<summary>Gets a value that indicates whether this view supports grouping.</summary>
			<returns>Always false for a default instance of this class.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.CanSort">
			<summary>Gets a value that indicates whether this view supports sorting.</summary>
			<returns>Always false for a default instance of this class.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.Comparer">
			<summary>Returns an object that you can use to compare items in this view.</summary>
			<returns>An <see cref="T:System.Collections.IComparer"></see> object that you can use to compare items in this view.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.Count">
			<summary>Gets the number of records in this view.</summary>
			<returns>The number of records in the view or -1 if the number of records is unknown.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.Culture">
			<summary>Gets or sets the culture to use during sorting.</summary>
			<returns>The culture to use during sorting.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.CurrentItem">
			<summary>Gets the current item in the view.</summary>
			<returns>The current item of the view. By default, the first item of the collection starts as the current item.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.CurrentPosition">
			<summary>Gets the ordinal position of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> within the (optionally sorted and filtered) view.</summary>
			<returns>The ordinal position of the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> within the (optionally sorted and filtered) view.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.Filter">
			<summary>Gets or sets a callback used to determine if an item is suitable for inclusion in the view.</summary>
			<returns>A method used to determine if an item is suitable for inclusion in the view.</returns>
			<exception cref="T:System.NotSupportedException">If the current implementation does not support filtering. </exception>
		</member>
		<member name="P:System.Windows.Data.CollectionView.GroupDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that describe how the items in the collection are grouped in the view.</summary>
			<returns>Always null for a default instance of this class because the base class <see cref="T:System.Windows.Data.CollectionView"></see> does not support grouping over its underlying collection.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.Groups">
			<summary>Gets the top-level groups that are constructed based in the <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions"></see>.</summary>
			<returns>Always null for a default instance of this class because the base class <see cref="T:System.Windows.Data.CollectionView"></see> does not support grouping over its underlying collection.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.IsCurrentAfterLast">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> of the view is beyond the end of the collection.</summary>
			<returns>Returns true if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> of the view is beyond the end of the collection; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.IsCurrentBeforeFirst">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> of the view is beyond the beginning of the collection.</summary>
			<returns>Returns true if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> of the view is beyond the beginning of the collection; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.IsCurrentInSync">
			<summary>Gets a value that indicates whether the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is at the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition"></see>.</summary>
			<returns>true if the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is in the view and at the <see cref="P:System.Windows.Data.CollectionView.CurrentPosition"></see>; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.IsDynamic">
			<summary>Gets a value that indicates whether the underlying collection provides change notifications.</summary>
			<returns>true if the underlying collection provides change notifications; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.IsEmpty">
			<summary>Returns a value that indicates whether the resulting (filtered) view is empty.</summary>
			<returns>true if the resulting view is empty; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.IsRefreshDeferred">
			<summary>Returns a value that indicates whether there is an outstanding <see cref="M:System.Windows.Data.CollectionView.DeferRefresh"></see> in use.</summary>
			<returns>true if there is an outstanding <see cref="M:System.Windows.Data.CollectionView.DeferRefresh"></see> in use; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.NeedsRefresh">
			<summary>Gets a value that indicates whether this view needs to be refreshed.</summary>
			<returns>true if this view needs to be refreshed; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.SortDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describe how the items in the collection are sorted in the view.</summary>
			<returns>Always returns an empty collection for a default instance of this class.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.SourceCollection">
			<summary>Returns the underlying un-filtered collection.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerable"></see> object that is the underlying collection.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionView.UpdatedOutsideDispatcher">
			<summary>Returns true if it has been necessary to update the change log because a <see cref="E:System.Windows.Data.CollectionView.CollectionChanged"></see> notification has been received on a different thread without first entering the user interface (UI) thread dispatcher.</summary>
			<returns>true if it has been necessary to update the change log because a <see cref="E:System.Windows.Data.CollectionView.CollectionChanged"></see> notification has been received on a different thread without first entering the user interface (UI) thread dispatcher; otherwise false.</returns>
		</member>
		<member name="T:System.Windows.Data.CollectionViewGroup">
			<summary>Represents a group created by a <see cref="T:System.Windows.Data.CollectionView"></see> object based on the <see cref="P:System.Windows.Data.CollectionView.GroupDescriptions"></see>.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionViewGroup.#ctor(System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewGroup"></see> class with the name of the group.</summary>
			<param name="name">The name of this group.</param>
		</member>
		<member name="E:System.Windows.Data.CollectionViewGroup.PropertyChanged">
			<summary>Occurs when a property value changes.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionViewGroup.System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
			<summary>Occurs when a property value changes.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionViewGroup.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Data.CollectionViewGroup.PropertyChanged"></see> event using the provided arguments.</summary>
			<param name="e">Arguments of the event being raised.</param>
		</member>
		<member name="P:System.Windows.Data.CollectionViewGroup.IsBottomLevel">
			<summary>Gets a value that indicates whether this group has any subgroups.</summary>
			<returns>true if this group is at the bottom level and does not have any subgroups; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewGroup.ItemCount">
			<summary>Gets the number of items in the subtree under this group.</summary>
			<returns>The number of items (leaves) in the subtree under this group.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewGroup.Items">
			<summary>Gets the immediate items contained in this group.</summary>
			<returns>A read-only collection of the immediate items in this group. This is either a collection of subgroups or a collection of items if this group does not have any subgroups.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewGroup.Name">
			<summary>Gets the name of this group.</summary>
			<returns>The name of this group which is the common value of the property used to divide items into groups.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItemCount">
			<summary>Gets and sets the number of items in the subtree under this group.</summary>
			<returns>The number of items (leaves) in the subtree under this group</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewGroup.ProtectedItems">
			<summary>Gets the immediate items contained in this group.</summary>
			<returns>A collection of immediate items in this group. This is either a collection of subgroups or a collection of items if this group does not have any subgroups.</returns>
		</member>
		<member name="T:System.Windows.Data.CollectionViewSource">
			<summary>Represents the Extensible Application Markup Language (XAML) proxy of the <see cref="T:System.Windows.Data.CollectionView"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.CollectionViewSource"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Data.CollectionViewSource.Filter">
			<summary>Provides filtering logic.</summary>
		</member>
		<member name="F:System.Windows.Data.CollectionViewSource.CollectionViewTypeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Data.CollectionViewSource.SourceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.Source"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Data.CollectionViewSource.Source"></see> dependency property. </returns>
		</member>
		<member name="F:System.Windows.Data.CollectionViewSource.ViewProperty">
			<summary>Identifies the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Data.CollectionViewSource.View"></see> dependency property. </returns>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.DeferRefresh">
			<summary>Enters a defer cycle that you can use to merge changes to the view and delay automatic refresh.</summary>
			<returns>An <see cref="T:System.IDisposable"></see> object that you can use to dispose of the calling object.</returns>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.GetDefaultView(System.Object)">
			<summary>Returns the default view for the given source.</summary>
			<returns>Returns an <see cref="T:System.ComponentModel.ICollectionView"></see> object that is the default view for the given source.</returns>
			<param name="source">An object reference to the binding source.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.IsDefaultView(System.ComponentModel.ICollectionView)">
			<summary>Returns a value that indicates whether the given view is the default view for the <see cref="P:System.Windows.Data.CollectionViewSource.Source"></see> collection.</summary>
			<returns>true if the given view is the default view for the <see cref="P:System.Windows.Data.CollectionViewSource.Source"></see> collection or if the given view is nulll; otherwise, false.</returns>
			<param name="view">The view object to check.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.OnCollectionViewTypeChanged(System.Type,System.Type)">
			<summary>Invoked when the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType"></see> property changes.</summary>
			<param name="oldCollectionViewType">The old value of the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType"></see> property.</param>
			<param name="newCollectionViewType">The new value of the <see cref="P:System.Windows.Data.CollectionViewSource.CollectionViewType"></see> property.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.OnSourceChanged(System.Object,System.Object)">
			<summary>Invoked when the <see cref="P:System.Windows.Data.CollectionViewSource.Source"></see> property changes.</summary>
			<param name="newSource">The new value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source"></see> property.</param>
			<param name="oldSource">The old value of the <see cref="P:System.Windows.Data.CollectionViewSource.Source"></see> property.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
			<summary>Handles events from the centralized event table.</summary>
			<returns>true if the listener handled the event; otherwise, false.</returns>
			<param name="e">Event data.</param>
			<param name="sender">Object that originated the event.</param>
			<param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager"></see> calling this method. This only recognizes manager objects of type <see cref="T:System.Windows.Data.DataChangedEventManager"></see>.</param>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.System.ComponentModel.ISupportInitialize.BeginInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Data.CollectionViewSource.System.ComponentModel.ISupportInitialize.EndInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Data.CollectionViewSource.CollectionViewType">
			<summary>Gets or sets the desired view type.</summary>
			<returns>The desired view type.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewSource.Culture">
			<summary>Gets or sets the culture that is used for operations such as sorting and comparisons.</summary>
			<returns>The culture that is used for operations such as sorting and comparisons.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewSource.GroupDescriptions">
			<summary>Gets or sets a collection of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that describes how the items in the collection are grouped in the view.</summary>
			<returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"></see> of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that describes how the items in the collection are grouped in the view.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewSource.SortDescriptions">
			<summary>Gets or sets a collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describes how the items in the collection are sorted in the view.</summary>
			<returns>A collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describes how the items in the collection are sorted in the view.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewSource.Source">
			<summary>Gets or sets the collection object from which to create this view. </summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.CollectionViewSource.View">
			<summary>Gets the view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource"></see>.</summary>
			<returns>The view object that is currently associated with this instance of <see cref="T:System.Windows.Data.CollectionViewSource"></see>.</returns>
		</member>
		<member name="T:System.Windows.Data.CompositeCollection">
			<summary>Enables multiple collections and items to be displayed as a single list.</summary>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection"></see> class that is empty and has default initial capacity. </summary>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.#ctor(System.Int32)">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Data.CompositeCollection"></see> class that is empty and has a specified initial capacity. </summary>
			<param name="capacity">The number of items that the new list is initially capable of storing.</param>
		</member>
		<member name="E:System.Windows.Data.CompositeCollection.CollectionChanged">
			<summary>Occurs when the collection changes, either by adding or removing an item. </summary>
		</member>
		<member name="E:System.Windows.Data.CompositeCollection.System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
			<summary>Occurs when the collection has changed.</summary>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.Add(System.Object)">
			<summary>Adds the specified item to this collection.</summary>
			<returns>Zero-based index where the new item is added.</returns>
			<param name="newItem">New item to add to the collection.</param>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.Contains(System.Object)">
			<summary>Checks to see if a given item is in this collection.</summary>
			<returns>true if the collection contains the given item; otherwise, false.</returns>
			<param name="containItem">The item to check.</param>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.CopyTo(System.Array,System.Int32)">
			<summary>Makes a shallow copy of object references from this collection to the given array.</summary>
			<param name="array">The array that is the destination of the copy operation.</param>
			<param name="index">Zero-based index in the target array at which the copying starts.</param>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.IndexOf(System.Object)">
			<summary>Returns the index in this collection where the given item is found. </summary>
			<returns>If the item appears in the collection, then the zero-based index in the collection where the given item is found; otherwise, -1.</returns>
			<param name="indexItem">The item to retrieve the index for.</param>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.Insert(System.Int32,System.Object)">
			<summary>Inserts an item in the collection at a given index. All items after the given position are moved down by one. </summary>
			<param name="insertItem">The item reference to add to the collection.</param>
			<param name="insertIndex">The index to insert the item at.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)">
			<summary>Handles events from the centralized event table.</summary>
			<returns>true if the listener handled the event; otherwise, false.</returns>
			<param name="e">Event data.</param>
			<param name="sender">Object that originated the event.</param>
			<param name="managerType">The type of the <see cref="T:System.Windows.WeakEventManager"></see> calling this method. This only recognizes manager objects of type <see cref="T:System.Collections.Specialized.CollectionChangedEventManager"></see>.</param>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.Remove(System.Object)">
			<summary>Removes the given item reference from the collection. All remaining items move up by one. </summary>
			<param name="removeItem">The item to remove.</param>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.RemoveAt(System.Int32)">
			<summary>Removes an item from the collection at the given index. All remaining items move up by one. </summary>
			<param name="removeIndex">The index at which to remove an item.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
		</member>
		<member name="M:System.Windows.Data.CompositeCollection.System.Collections.IEnumerable.GetEnumerator">
			<summary>Returns an enumerator.</summary>
			<returns>An IEnumerator object.</returns>
		</member>
		<member name="P:System.Windows.Data.CompositeCollection.Count">
			<summary>Gets the number of items stored in this collection.</summary>
			<returns>The number of items stored in this collection.</returns>
		</member>
		<member name="P:System.Windows.Data.CompositeCollection.Item(System.Int32)">
			<summary>Indexer property that retrieves or replaces the item at the given zero-based offset in the collection. </summary>
			<returns>The item at the specified zero-based offset.</returns>
			<param name="itemIndex">The zero-based offset of the item to retrieve or replace.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">If the index is out of range.</exception>
		</member>
		<member name="T:System.Windows.Data.DataChangedEventManager">
			<summary>Provides a <see cref="T:System.Windows.WeakEventManager"></see> implementation so that you can use the "weak event listener" pattern to attach listeners for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Data.DataChangedEventManager.AddListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
			<summary>Adds the specified listener to the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged"></see> event of the specified source.</summary>
			<param name="source">The object with the event.</param>
			<param name="listener">The object to add as a listener.</param>
		</member>
		<member name="M:System.Windows.Data.DataChangedEventManager.RemoveListener(System.Windows.Data.DataSourceProvider,System.Windows.IWeakEventListener)">
			<summary>Removes the specified listener from the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged"></see> event of the specified source.</summary>
			<param name="source">The object with the event.</param>
			<param name="listener">The listener to remove.</param>
		</member>
		<member name="M:System.Windows.Data.DataChangedEventManager.StartListening(System.Object)">
			<summary>Begins listening for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged"></see> event on the specified source.</summary>
			<param name="source">The object with the event.</param>
		</member>
		<member name="M:System.Windows.Data.DataChangedEventManager.StopListening(System.Object)">
			<summary>Stops listening for the <see cref="E:System.Windows.Data.DataSourceProvider.DataChanged"></see> event on the specified source.</summary>
		</member>
		<member name="T:System.Windows.Data.DataTransferEventArgs">
			<summary>Encapsulates arguments for data transfer events.</summary>
		</member>
		<member name="M:System.Windows.Data.DataTransferEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Invokes the specified handler in a type-specific way on the specified object.</summary>
			<param name="genericTarget">The object to invoke the handler on.</param>
			<param name="genericHandler">The generic handler to call in a type-specific way.</param>
		</member>
		<member name="P:System.Windows.Data.DataTransferEventArgs.Property">
			<summary>Gets the specific binding target property that is involved in the data transfer event.</summary>
			<returns>The property that changed.</returns>
		</member>
		<member name="P:System.Windows.Data.DataTransferEventArgs.TargetObject">
			<summary>Gets the binding target object of the binding that raised the event.</summary>
			<returns>The target object of the binding that raised the event.</returns>
		</member>
		<member name="T:System.Windows.Data.FilterEventArgs">
			<summary>Provides information and event data that is associated with the <see cref="E:System.Windows.Data.CollectionViewSource.Filter"></see> event.</summary>
		</member>
		<member name="P:System.Windows.Data.FilterEventArgs.Accepted">
			<summary>Gets or sets a value that indicates whether the item passes the filter.</summary>
			<returns>true if the item passes the filter; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.FilterEventArgs.Item">
			<summary>Gets the object that the filter should test.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Data.FilterEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Data.CollectionViewSource.Filter"></see> event.</summary>
		</member>
		<member name="T:System.Windows.Data.GroupDescriptionSelectorCallback">
			<summary>Represents a method that is used to provide custom logic to select the <see cref="T:System.ComponentModel.GroupDescription"></see> based on the parent group and its level.</summary>
			<returns>The <see cref="T:System.ComponentModel.GroupDescription"></see> chosen based on the parent group and its level. </returns>
		</member>
		<member name="T:System.Windows.Data.IMultiValueConverter">
			<summary>Provides a way to apply custom logic in a <see cref="T:System.Windows.Data.MultiBinding"></see>.</summary>
		</member>
		<member name="M:System.Windows.Data.IMultiValueConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts source values to a value for the binding target. The data binding engine calls this method when it propagates the values from source bindings to the binding target.</summary>
			<returns>A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"></see>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the converter did not produce a value, and that the binding will use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> if it is available, or else will use the default value.A return value of <see cref="T:System.Windows.Data.Binding"></see>.<see cref="F:System.Windows.Data.Binding.DoNothing"></see> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> or the default value.</returns>
			<param name="culture">The culture to use in the converter.</param>
			<param name="targetType">The type of the binding target property.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="values">The array of values that the source bindings in the <see cref="T:System.Windows.Data.MultiBinding"></see> produces. The value <see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the source binding has no value to provide for conversion.</param>
		</member>
		<member name="M:System.Windows.Data.IMultiValueConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a binding target value to the source binding values.</summary>
			<returns>An array of values that have been converted from the target value back to the source values.</returns>
			<param name="culture">The culture to use in the converter.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="targetTypes">The array of types to convert to. The array length indicates the number and types of values that are suggested for the method to return.</param>
			<param name="value">The value that the binding target produces.</param>
		</member>
		<member name="T:System.Windows.Data.IValueConverter">
			<summary>Provides a way to apply custom logic to a binding.</summary>
		</member>
		<member name="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a value. The data binding engine calls this method when it propagates a value from the binding source to the binding target.</summary>
			<returns>A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"></see>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the converter produced no value and that the binding uses the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see>, if available, or the default value instead.A return value of <see cref="T:System.Windows.Data.Binding"></see>.<see cref="F:System.Windows.Data.Binding.DoNothing"></see> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> or default value.</returns>
			<param name="culture">The culture to use in the converter.</param>
			<param name="targetType">The type of the binding target property.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="value">The value produced by the binding source.</param>
		</member>
		<member name="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts a value. The data binding engine calls this method when it propagates a value from the binding target to the binding source.</summary>
			<returns>A converted value.If the method returns null, the valid null value is used.A return value of <see cref="T:System.Windows.DependencyProperty"></see>.<see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> indicates that the converter produced no value and that to the binding uses the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see>, if available, or the default value instead.A return value of <see cref="T:System.Windows.Data.Binding"></see>.<see cref="F:System.Windows.Data.Binding.DoNothing"></see> indicates that the binding does not transfer the value or use the <see cref="P:System.Windows.Data.BindingBase.FallbackValue"></see> or default value.</returns>
			<param name="culture">The culture to use in the converter.</param>
			<param name="targetType">The type to convert to.</param>
			<param name="parameter">The converter parameter to use.</param>
			<param name="value">The value that is produced by the binding target.</param>
		</member>
		<member name="T:System.Windows.Data.ListCollectionView">
			<summary>Represents the collection view for collections that implement <see cref="T:System.Collections.IList"></see>. </summary>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.#ctor(System.Collections.IList)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ListCollectionView"></see> class, using a supplied collection that implements <see cref="T:System.Collections.IList"></see>.</summary>
			<param name="list">The underlying collection, which must implement <see cref="T:System.Collections.IList"></see>.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.Compare(System.Object,System.Object)">
			<summary>Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</summary>
			<returns>Less than zero if o1 is less than o2, zero if o1 and o2 are equal, or greater than zero if o1 is greater than o2.</returns>
			<param name="o1">The first object to compare.</param>
			<param name="o2">The second object to compare.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.Contains(System.Object)">
			<summary>Returns a value that indicates whether a given item belongs to this collection view.</summary>
			<returns>true if the item belongs to this collection view; otherwise, false.</returns>
			<param name="item">The object to check.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.GetEnumerator">
			<summary>Returns an object that you can use to enumerate the items in this view.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> object that you can use to enumerate the items in this view.</returns>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.GetItemAt(System.Int32)">
			<summary>Retrieves the item at the specified zero-based index in this view.</summary>
			<returns>The item at the specified zero-based index in this view.</returns>
			<param name="index">The zero-based index at which the item is located.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">If index is out of range.</exception>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.IndexOf(System.Object)">
			<summary>Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown. </summary>
			<returns>The index of the item in the collection, or -1 if the item does not exist in the collection.</returns>
			<param name="item">The object to check for in the collection.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.InternalContains(System.Object)">
			<summary>Return a value that indicates whether the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see> contains the item.</summary>
			<returns>true if the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see> contains the item; otherwise, false.</returns>
			<param name="item">The item to locate.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.InternalGetEnumerator">
			<summary>Returns an enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see>. </summary>
			<returns>An enumerator for the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see>.</returns>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.InternalIndexOf(System.Object)">
			<summary>Returns the index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see>.</summary>
			<returns>The index of the specified item in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see>.</returns>
			<param name="item">The item to return an index for.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.InternalItemAt(System.Int32)">
			<summary>Returns the item at the given index in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see>.</summary>
			<returns>The item at the specified zero-based index in this view.</returns>
			<param name="index">The index at which the item is located.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.MoveCurrentToPosition(System.Int32)">
			<summary>Sets the item at the specified index to be the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> in the view.</summary>
			<returns>true if the resulting <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> is an item within the view; otherwise, false.</returns>
			<param name="position">The index to set the <see cref="P:System.Windows.Data.CollectionView.CurrentItem"></see> to.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Thrown if the index is out of range. </exception>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.OnBeginChangeLogging(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Called by the base class to notify the derived class that a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"></see> has been posted to the message queue.</summary>
			<param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"></see> object that is added to the change log.</param>
			<exception cref="T:System.ArgumentNullException">If args is null. </exception>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.PassesFilter(System.Object)">
			<summary>Returns a value that indicates whether the specified item in the underlying collection belongs to this view.</summary>
			<returns>true if the specified item belongs to this view or if there is not filter set on this collection view; otherwise, false.</returns>
			<param name="item">The item to check.</param>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.ProcessCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
			<summary>Handles <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"></see> events.</summary>
			<param name="args">The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"></see> object to process.</param>
			<exception cref="T:System.ArgumentNullException">If args is null. </exception>
		</member>
		<member name="M:System.Windows.Data.ListCollectionView.RefreshOverride">
			<summary>Recreates the view.</summary>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.ActiveComparer">
			<summary>Gets and sets the current active comparer that is used in sorting.</summary>
			<returns>An <see cref="T:System.Collections.IComparer"></see> object that is the active comparer.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.ActiveFilter">
			<summary>Gets or set the current active <see cref="P:System.Windows.Data.CollectionView.Filter"></see> callback.</summary>
			<returns>The active <see cref="P:System.Windows.Data.CollectionView.Filter"></see> callback.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.CanFilter">
			<summary>Gets a value that indicates whether this view supports callback-based filtering.</summary>
			<returns>For a default instance of <see cref="T:System.Windows.Data.ListCollectionView"></see>, this property always returns true.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.CanGroup">
			<summary>Gets a value that indicates whether this collection view supports grouping.</summary>
			<returns>true if this collection view supports grouping; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.CanSort">
			<summary>Gets a value that indicates whether this collection view supports sorting.</summary>
			<returns>For a default instance of <see cref="T:System.Windows.Data.ListCollectionView"></see>, this property always returns true.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.Count">
			<summary>Gets the estimated number of records.</summary>
			<returns>One of the following:ValueMeaning-1Could not determine the count of the collection. This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is attempting to increase efficiency and minimize dependence on always having the entire collection available.any other integerThe count of the collection.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.CustomSort">
			<summary>Gets or sets a custom object that implements <see cref="T:System.Collections.IComparer"></see> to sort items in the view.</summary>
			<returns>The sort criteria as an implementation of <see cref="T:System.Collections.IComparer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.GroupBySelector">
			<summary>Gets or sets a delegate to select the <see cref="T:System.ComponentModel.GroupDescription"></see> as a function of the parent group and its level. </summary>
			<returns>A method that provides the logic for the selection of the <see cref="T:System.ComponentModel.GroupDescription"></see> as a function of the parent group and its level. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.GroupDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that describe how the items in the collection are grouped in the view.</summary>
			<returns>A collection of <see cref="T:System.ComponentModel.GroupDescription"></see> objects that describe how the items in the collection are grouped in the view.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.Groups">
			<summary>Gets the top-level groups.</summary>
			<returns>A read-only collection of the top-level groups or null if there are no groups.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.InternalCount">
			<summary>Gets the number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see>.</summary>
			<returns>The number of records in the <see cref="P:System.Windows.Data.ListCollectionView.InternalList"></see>.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.InternalList">
			<summary>Gets the complete and unfiltered underlying collection.</summary>
			<returns>The underlying collection, which must implement <see cref="T:System.Collections.IList"></see>.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.IsDataInGroupOrder">
			<summary>Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</summary>
			<returns>true if the list of items is already in the correct order for grouping; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.IsEmpty">
			<summary>Returns a value that indicates whether the resulting (filtered) view is empty.</summary>
			<returns>true if the resulting view is empty; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.IsGrouping">
			<summary>Gets a value that indicates whether there are groups in the view.</summary>
			<returns>true if there are groups in the view; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.SortDescriptions">
			<summary>Gets a collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describe how the items in the collection are sorted in the view.</summary>
			<returns>A collection of <see cref="T:System.ComponentModel.SortDescription"></see> objects that describe how the items in the collection are sorted in the view.</returns>
		</member>
		<member name="P:System.Windows.Data.ListCollectionView.UsesLocalArray">
			<summary>Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</summary>
			<returns>true if a private copy of the data is needed for sorting and filtering; otherwise, false. The default implementation returns true if there is an <see cref="P:System.Windows.Data.ListCollectionView.ActiveFilter"></see> or <see cref="P:System.Windows.Data.ListCollectionView.ActiveComparer"></see>, or both.</returns>
		</member>
		<member name="T:System.Windows.Data.MultiBinding">
			<summary>Describes a collection of <see cref="T:System.Windows.Data.Binding"></see> objects attached to a single binding target property.</summary>
		</member>
		<member name="M:System.Windows.Data.MultiBinding.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.MultiBinding"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.MultiBinding.ShouldSerializeBindings">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.MultiBinding.Bindings"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.MultiBinding.ShouldSerializeValidationRules">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.MultiBinding.ValidationRules"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.Bindings">
			<summary>Gets the collection of <see cref="T:System.Windows.Data.Binding"></see> objects within this <see cref="T:System.Windows.Data.MultiBinding"></see> instance.</summary>
			<returns>A collection of <see cref="T:System.Windows.Data.Binding"></see> objects. <see cref="T:System.Windows.Data.MultiBinding"></see> currently supports only objects of type <see cref="T:System.Windows.Data.Binding"></see> and not <see cref="T:System.Windows.Data.MultiBinding"></see> or <see cref="T:System.Windows.Data.PriorityBinding"></see>. Adding a <see cref="T:System.Windows.Data.Binding"></see> child to a <see cref="T:System.Windows.Data.MultiBinding"></see> object implicitly adds the child to the <see cref="T:System.Windows.Data.BindingBase"></see> collection for the <see cref="T:System.Windows.Data.MultiBinding"></see> object.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.Converter">
			<summary>Gets or sets the converter to use to convert the source values to or from the target value.</summary>
			<returns>A value of type <see cref="T:System.Windows.Data.IMultiValueConverter"></see> that indicates the converter to use. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.ConverterCulture">
			<summary>Gets or sets the <see cref="T:System.Globalization.CultureInfo"></see> object that applies to any converter assigned to bindings wrapped by the <see cref="T:System.Windows.Data.MultiBinding"></see> or on the <see cref="T:System.Windows.Data.MultiBinding"></see> itself.</summary>
			<returns>A valid <see cref="T:System.Globalization.CultureInfo"></see>.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.ConverterParameter">
			<summary>Gets or sets an optional parameter to pass to a converter as additional information.</summary>
			<returns>A parameter to pass to a converter. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.Mode">
			<summary>Gets or sets a value that indicates the direction of the data flow of this binding.</summary>
			<returns>One of the <see cref="T:System.Windows.Data.BindingMode"></see> values. The default value is <see cref="F:System.Windows.Data.BindingMode.Default"></see>, which returns the default binding mode value of the target dependency property. However, the default value varies for each dependency property. In general, user-editable control properties, such as <see cref="P:System.Windows.Controls.TextBox.Text"></see>, default to two-way bindings, whereas most other properties default to one-way bindings.A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)"></see> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault"></see> property.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.NotifyOnSourceUpdated">
			<summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.FrameworkElement.SourceUpdated"></see> event when a value is transferred from the binding target to the binding source.</summary>
			<returns>true if the <see cref="E:System.Windows.FrameworkElement.SourceUpdated"></see> event will be raised when the binding source value is updated; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.NotifyOnTargetUpdated">
			<summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.FrameworkElement.TargetUpdated"></see> event when a value is transferred from the binding source to the binding target.</summary>
			<returns>true if the <see cref="E:System.Windows.FrameworkElement.TargetUpdated"></see> event will be raised when the binding target value is updated; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.NotifyOnValidationError">
			<summary>Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error"></see> attached event on the bound element.</summary>
			<returns>true if the <see cref="E:System.Windows.Controls.Validation.Error"></see> attached event will be raised on the bound element when there is a validation error during source updates; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter">
			<summary>Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value. This is only applicable if you have associated the <see cref="T:System.Windows.Controls.ExceptionValidationRule"></see> with your <see cref="T:System.Windows.Data.MultiBinding"></see> object.</summary>
			<returns>A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.UpdateSourceTrigger">
			<summary>Gets or sets a value that determines the timing of binding source updates.</summary>
			<returns>One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> values. The default value is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default"></see>, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> value of the target dependency property. However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged"></see>, while the <see cref="P:System.Windows.Controls.TextBox.Text"></see> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus"></see>.A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger"></see> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)"></see> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger"></see> property.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBinding.ValidationRules">
			<summary>Gets the collection of <see cref="T:System.Windows.Controls.ValidationRule"></see> objects for this instance of <see cref="T:System.Windows.Data.MultiBinding"></see>.</summary>
			<returns>The collection of <see cref="T:System.Windows.Controls.ValidationRule"></see> objects for this instance of <see cref="T:System.Windows.Data.MultiBinding"></see>.</returns>
		</member>
		<member name="T:System.Windows.Data.MultiBindingExpression">
			<summary>Contains instance information about a single instance of a <see cref="T:System.Windows.Data.MultiBinding"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="P:System.Windows.Data.MultiBindingExpression.BindingExpressions">
			<summary>Gets the collection of <see cref="T:System.Windows.Data.BindingExpression"></see> objects in this instance of <see cref="T:System.Windows.Data.MultiBindingExpression"></see>.</summary>
			<returns>A read-only collection of the <see cref="T:System.Windows.Data.BindingExpression"></see> objects. Even though the return type is a collection of <see cref="T:System.Windows.Data.BindingExpressionBase"></see> objects the returned collection would only contain <see cref="T:System.Windows.Data.BindingExpression"></see> objects because the <see cref="T:System.Windows.Data.MultiBinding"></see> class currently only supports <see cref="T:System.Windows.Data.Binding"></see> objects.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBindingExpression.HasError">
			<summary>Returns a value that indicates whether any of the inner <see cref="T:System.Windows.Data.Binding"></see> objects or the <see cref="T:System.Windows.Data.MultiBinding"></see> itself has a failing validation rule.</summary>
			<returns>true if at least one of the inner <see cref="T:System.Windows.Data.Binding"></see> objects or the <see cref="T:System.Windows.Data.MultiBinding"></see> itself has a failing validation rule; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBindingExpression.ParentMultiBinding">
			<summary>Gets the <see cref="T:System.Windows.Data.MultiBinding"></see> object from which this <see cref="T:System.Windows.Data.MultiBindingExpression"></see> is created.</summary>
			<returns>The <see cref="T:System.Windows.Data.MultiBinding"></see> object from which this <see cref="T:System.Windows.Data.MultiBindingExpression"></see> is created.</returns>
		</member>
		<member name="P:System.Windows.Data.MultiBindingExpression.ValidationError">
			<summary>Gets the <see cref="T:System.Windows.Controls.ValidationError"></see> object that caused this instance of <see cref="T:System.Windows.Data.MultiBindingExpression"></see> to be invalid.</summary>
			<returns>The <see cref="T:System.Windows.Controls.ValidationError"></see> object that caused this instance of <see cref="T:System.Windows.Data.MultiBindingExpression"></see> to be invalid.</returns>
		</member>
		<member name="T:System.Windows.Data.ObjectDataProvider">
			<summary>Wraps and creates an object that you can use as a binding source.</summary>
		</member>
		<member name="M:System.Windows.Data.ObjectDataProvider.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ObjectDataProvider"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.ObjectDataProvider.BeginQuery">
			<summary>Starts to create the requested object, either immediately or on a background thread, based on the value of the <see cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous"></see> property.</summary>
		</member>
		<member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeConstructorParameters">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeMethodParameters">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.MethodParameters"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectInstance">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.ObjectDataProvider.ShouldSerializeObjectType">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters">
			<summary>Gets the list of parameters to pass to the constructor.</summary>
			<returns>The list of parameters to pass to the constructor. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous">
			<summary>Gets or sets a value that indicates whether to perform object creation in a worker thread or in the active context.</summary>
			<returns>true to perform object creation in a worker thread; otherwise, false. The default is false.</returns>
		</member>
		<member name="P:System.Windows.Data.ObjectDataProvider.MethodName">
			<summary>Gets or sets the name of the method to call.</summary>
			<returns>The name of the method to call. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.ObjectDataProvider.MethodParameters">
			<summary>Gets the list of parameters to pass to the method.</summary>
			<returns>The list of parameters to pass to the method. The default is an empty list.</returns>
		</member>
		<member name="P:System.Windows.Data.ObjectDataProvider.ObjectInstance">
			<summary>Gets or sets the object instance used as the binding source.</summary>
			<returns>The instance of the object constructed from <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType"></see> and <see cref="P:System.Windows.Data.ObjectDataProvider.ConstructorParameters"></see>, or the <see cref="T:System.Windows.Data.DataSourceProvider"></see> of which the <see cref="P:System.Windows.Data.DataSourceProvider.Data"></see> is used as the <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance"></see>.</returns>
			<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.ObjectDataProvider"></see> is assigned both an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType"></see> and an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance"></see>; only one is allowed.</exception>
		</member>
		<member name="P:System.Windows.Data.ObjectDataProvider.ObjectType">
			<summary>Gets or sets the type of object to create an instance of.</summary>
			<returns>This property is null when the <see cref="T:System.Windows.Data.ObjectDataProvider"></see> is uninitialized or explicitly set to null. If <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance"></see> is assigned, <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType"></see> returns the type of the object or null if the object is null. The default value is null.</returns>
			<exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Data.ObjectDataProvider"></see> is assigned both an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectType"></see> and an <see cref="P:System.Windows.Data.ObjectDataProvider.ObjectInstance"></see>; only one is allowed.</exception>
		</member>
		<member name="T:System.Windows.Data.PriorityBinding">
			<summary>Describes a collection of <see cref="T:System.Windows.Data.Binding"></see> objects that is attached to a single binding target property, which receives its value from the first binding in the collection that produces a value successfully.</summary>
		</member>
		<member name="M:System.Windows.Data.PriorityBinding.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PriorityBinding"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.PriorityBinding.ShouldSerializeBindings">
			<summary>Returns a value that indicates whether serialization processes should serialize the effective value of the <see cref="P:System.Windows.Data.PriorityBinding.Bindings"></see> property on instances of this class.</summary>
			<returns>true if the <see cref="P:System.Windows.Data.PriorityBinding.Bindings"></see> property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.PriorityBinding.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Data.PriorityBinding.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Data.PriorityBinding.Bindings">
			<summary>Gets the collection of <see cref="T:System.Windows.Data.Binding"></see> objects that is established for this instance of <see cref="T:System.Windows.Data.PriorityBinding"></see>.</summary>
			<returns>A collection of <see cref="T:System.Windows.Data.Binding"></see> objects. <see cref="T:System.Windows.Data.PriorityBinding"></see> currently only supports objects of type <see cref="T:System.Windows.Data.Binding"></see> and not <see cref="T:System.Windows.Data.MultiBinding"></see> or <see cref="T:System.Windows.Data.PriorityBinding"></see>. Adding a <see cref="T:System.Windows.Data.Binding"></see> child to a <see cref="T:System.Windows.Data.PriorityBinding"></see> object implicitly adds the child to the <see cref="T:System.Windows.Data.BindingBase"></see> collection for the <see cref="T:System.Windows.Data.MultiBinding"></see> object. The default is an empty collection.</returns>
		</member>
		<member name="T:System.Windows.Data.PriorityBindingExpression">
			<summary>Contains instance information about a single instance of a <see cref="T:System.Windows.Data.PriorityBinding"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="P:System.Windows.Data.PriorityBindingExpression.ActiveBindingExpression">
			<summary>Gets the active <see cref="T:System.Windows.Data.BindingExpression"></see> object.</summary>
			<returns>The active <see cref="T:System.Windows.Data.BindingExpression"></see> object or null if none is active. Even though the return type is <see cref="T:System.Windows.Data.BindingExpressionBase"></see> the returned object would only be a <see cref="T:System.Windows.Data.BindingExpression"></see> object because the <see cref="T:System.Windows.Data.PriorityBinding"></see> class currently only supports <see cref="T:System.Windows.Data.Binding"></see> objects.</returns>
		</member>
		<member name="P:System.Windows.Data.PriorityBindingExpression.BindingExpressions">
			<summary>Gets the collection of <see cref="T:System.Windows.Data.BindingExpression"></see> objects inside this instance of <see cref="T:System.Windows.Data.PriorityBindingExpression"></see>.</summary>
			<returns>A read-only collection of the <see cref="T:System.Windows.Data.BindingExpression"></see> objects. Even though the return type is a collection of <see cref="T:System.Windows.Data.BindingExpressionBase"></see> objects the returned collection would only contain <see cref="T:System.Windows.Data.BindingExpression"></see> objects because the <see cref="T:System.Windows.Data.PriorityBinding"></see> class currently only supports <see cref="T:System.Windows.Data.Binding"></see> objects.</returns>
		</member>
		<member name="P:System.Windows.Data.PriorityBindingExpression.ParentPriorityBinding">
			<summary>Gets the <see cref="T:System.Windows.Data.PriorityBinding"></see> object from which this <see cref="T:System.Windows.Data.PriorityBindingExpression"></see> is created.</summary>
			<returns>The <see cref="T:System.Windows.Data.PriorityBinding"></see> object from which this <see cref="T:System.Windows.Data.PriorityBindingExpression"></see> is created.</returns>
		</member>
		<member name="T:System.Windows.Data.PropertyGroupDescription">
			<summary>Describes the grouping of items using a property name as the criteria.</summary>
		</member>
		<member name="M:System.Windows.Data.PropertyGroupDescription.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription"></see> class with the specified property name.</summary>
			<param name="propertyName">The name of the property that specifies which group an item belongs to.</param>
		</member>
		<member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription"></see> class with the specified property name and converter.</summary>
			<param name="converter">An <see cref="T:System.Windows.Data.IValueConverter"></see> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates the items can appear in more than one group.</param>
			<param name="propertyName">The name of the property that specifies which group an item belongs to. If this is null, the item itself is passed to the value converter.</param>
		</member>
		<member name="M:System.Windows.Data.PropertyGroupDescription.#ctor(System.String,System.Windows.Data.IValueConverter,System.StringComparison)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.PropertyGroupDescription"></see> class with the specified parameters.</summary>
			<param name="stringComparison">A <see cref="T:System.StringComparison"></see> value that specifies the comparison between the value of an item and the name of a group.</param>
			<param name="converter">An <see cref="T:System.Windows.Data.IValueConverter"></see> object to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to. The converter may return a collection, which indicates the items can appear in more than one group.</param>
			<param name="propertyName">The name of the property that specifies which group an item belongs to. If this is null, the item itself is passed to the value converter.</param>
		</member>
		<member name="M:System.Windows.Data.PropertyGroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
			<summary>Returns the group name(s) for the given item. </summary>
			<returns>The group name(s) for the given item.</returns>
			<param name="culture">The <see cref="T:System.Globalization.CultureInfo"></see> to supply to the converter.</param>
			<param name="item">The item to return group names for.</param>
			<param name="level">The level of grouping.</param>
		</member>
		<member name="M:System.Windows.Data.PropertyGroupDescription.NamesMatch(System.Object,System.Object)">
			<summary>Returns a value that indicates whether the group name and the item name match so that the item belongs to the group.</summary>
			<returns>true if the names match and the item belongs to the group; otherwise, false.</returns>
			<param name="itemName">The name of the item to check.</param>
			<param name="groupName">The name of the group to check.</param>
		</member>
		<member name="P:System.Windows.Data.PropertyGroupDescription.Converter">
			<summary>Gets or sets a converter to apply to the property value or the item to produce the final value that is used to determine which group(s) an item belongs to.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.PropertyGroupDescription.PropertyName">
			<summary>Gets or sets the name of the property that is used to determine which group(s) an item belongs to.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.PropertyGroupDescription.StringComparison">
			<summary>Gets or sets a <see cref="T:System.StringComparison"></see> value that specifies the comparison between the value of an item (as determined by <see cref="P:System.Windows.Data.PropertyGroupDescription.PropertyName"></see> and <see cref="P:System.Windows.Data.PropertyGroupDescription.Converter"></see>) and the name of a group.</summary>
			<returns>The default value is <see cref="T:System.StringComparison"></see>.Ordinal.</returns>
		</member>
		<member name="T:System.Windows.Data.RelativeSource">
			<summary>Implements a markup extension that describes the location of the binding source relative to the position of the binding target.</summary>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource"></see> class with an initial mode.</summary>
			<param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode"></see> values.</param>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.#ctor(System.Windows.Data.RelativeSourceMode,System.Type,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.RelativeSource"></see> class with an initial mode and additional tree-walking qualifiers for finding the desired relative source.</summary>
			<param name="ancestorType">The <see cref="T:System.Type"></see> of ancestor to look for.</param>
			<param name="mode">One of the <see cref="T:System.Windows.Data.RelativeSourceMode"></see> values. For this signature to be relevant, this should be <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor"></see>.</param>
			<param name="ancestorLevel">The ordinal position of the desired ancestor among all ancestors of the given type. </param>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set as the value on the target object's property for this markup extension. For <see cref="T:System.Windows.Data.RelativeSource"></see>, this is another <see cref="T:System.Windows.Data.RelativeSource"></see>, using the appropriate source for the specified mode. </summary>
			<returns>Another <see cref="T:System.Windows.Data.RelativeSource"></see>.</returns>
			<param name="serviceProvider">An object that can provide services for the markup extension. In this implementation, this parameter can be null.</param>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorLevel">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.ShouldSerializeAncestorType">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.RelativeSource.AncestorType"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.System.ComponentModel.ISupportInitialize.BeginInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Data.RelativeSource.System.ComponentModel.ISupportInitialize.EndInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Data.RelativeSource.AncestorLevel">
			<summary>Gets or sets the level of ancestor to look for, in <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor"></see> mode. Use 1 to indicate the one nearest to the binding target element.</summary>
			<returns>The ancestor level.</returns>
		</member>
		<member name="P:System.Windows.Data.RelativeSource.AncestorType">
			<summary>Gets or sets the type of ancestor to look for.</summary>
			<returns>The type of ancestor. The default value is null.</returns>
			<exception cref="T:System.InvalidOperationException">The <see cref="T:System.Windows.Data.RelativeSource"></see> is not in the <see cref="F:System.Windows.Data.RelativeSourceMode.FindAncestor"></see> mode.</exception>
		</member>
		<member name="P:System.Windows.Data.RelativeSource.Mode">
			<summary>Gets or sets a <see cref="T:System.Windows.Data.RelativeSourceMode"></see> value that describes the location of the binding source relative to the position of the binding target.</summary>
			<returns>One of the <see cref="T:System.Windows.Data.RelativeSourceMode"></see> values. The default value is null.</returns>
			<exception cref="T:System.InvalidOperationException">This property is immutable after initialization. Instead of changing the <see cref="P:System.Windows.Data.RelativeSource.Mode"></see> on this instance, create a new <see cref="T:System.Windows.Data.RelativeSource"></see> or use a different static instance.</exception>
		</member>
		<member name="P:System.Windows.Data.RelativeSource.PreviousData">
			<summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource"></see> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.PreviousData"></see> mode.</summary>
			<returns>A static <see cref="T:System.Windows.Data.RelativeSource"></see>.</returns>
		</member>
		<member name="P:System.Windows.Data.RelativeSource.Self">
			<summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource"></see> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.Self"></see> mode.</summary>
			<returns>A static <see cref="T:System.Windows.Data.RelativeSource"></see>.</returns>
		</member>
		<member name="P:System.Windows.Data.RelativeSource.TemplatedParent">
			<summary>Gets a static value that is used to return a <see cref="T:System.Windows.Data.RelativeSource"></see> constructed for the <see cref="F:System.Windows.Data.RelativeSourceMode.TemplatedParent"></see> mode.</summary>
			<returns>A static <see cref="T:System.Windows.Data.RelativeSource"></see>.</returns>
		</member>
		<member name="T:System.Windows.Data.RelativeSourceMode">
			<summary>Describes the location of the binding source relative to the position of the binding target.</summary>
		</member>
		<member name="F:System.Windows.Data.RelativeSourceMode.FindAncestor">
			<summary>Refers to the ancestor in the parent chain of the data-bound element. You can use this to bind to an ancestor of a specific type or its subclasses. This is the mode you use if you want to specify <see cref="P:System.Windows.Data.RelativeSource.AncestorType"></see> and/or <see cref="P:System.Windows.Data.RelativeSource.AncestorLevel"></see>.</summary>
		</member>
		<member name="F:System.Windows.Data.RelativeSourceMode.PreviousData">
			<summary>Allows you to bind the previous data item (not that control that contains the data item) in the list of data items being displayed.</summary>
		</member>
		<member name="F:System.Windows.Data.RelativeSourceMode.Self">
			<summary>Refers to the element on which you are setting the binding and allows you to bind one property of that element to another property on the same element.</summary>
		</member>
		<member name="F:System.Windows.Data.RelativeSourceMode.TemplatedParent">
			<summary>Refers to the element to which the template (in which the data-bound element exists) is applied. This is similar to setting a <see cref="T:System.Windows.TemplateBindingExtension"></see> and is only applicable if the <see cref="T:System.Windows.Data.Binding"></see> is within a template.</summary>
		</member>
		<member name="T:System.Windows.Data.UpdateSourceExceptionFilterCallback">
			<summary>Represents the method that handles exceptions that are thrown during the update of the binding source value. This must be used with the <see cref="T:System.Windows.Controls.ExceptionValidationRule"></see>.</summary>
			<returns>An object that is typically one of the following:ValueDescriptionnullTo ignore any exceptions. The default behavior (if there is no <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback"></see>) is to create a <see cref="T:System.Windows.Controls.ValidationError"></see> with the exception and adds it to the <see cref="P:System.Windows.Controls.Validation.Errors"></see> collection of the bound element.Any objectTo create a <see cref="T:System.Windows.Controls.ValidationError"></see> object with the <see cref="P:System.Windows.Controls.ValidationError.ErrorContent"></see> set to that object.The <see cref="T:System.Windows.Controls.ValidationError"></see> object is added to <see cref="P:System.Windows.Controls.Validation.Errors"></see> collection of the bound element.A <see cref="T:System.Windows.Controls.ValidationError"></see> objectTo set the <see cref="T:System.Windows.Data.BindingExpression"></see> or <see cref="T:System.Windows.Data.MultiBindingExpression"></see> object as the <see cref="P:System.Windows.Controls.ValidationError.BindingInError"></see>. The <see cref="T:System.Windows.Controls.ValidationError"></see> object is added to <see cref="P:System.Windows.Controls.Validation.Errors"></see> collection of the bound element.</returns>
		</member>
		<member name="T:System.Windows.Data.UpdateSourceTrigger">
			<summary>Describes the timing of binding source updates.</summary>
		</member>
		<member name="F:System.Windows.Data.UpdateSourceTrigger.Default">
			<summary>The default <see cref="T:System.Windows.Data.UpdateSourceTrigger"></see> value of the binding target property. The default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged"></see>, while the <see cref="P:System.Windows.Controls.TextBox.Text"></see> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus"></see>.</summary>
		</member>
		<member name="F:System.Windows.Data.UpdateSourceTrigger.Explicit">
			<summary>Updates the binding source only when you call the <see cref="M:System.Windows.Data.BindingExpression.UpdateSource"></see> method.</summary>
		</member>
		<member name="F:System.Windows.Data.UpdateSourceTrigger.LostFocus">
			<summary>Updates the binding source whenever the binding target element loses focus.</summary>
		</member>
		<member name="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged">
			<summary>Updates the binding source immediately whenever the binding target property changes.</summary>
		</member>
		<member name="T:System.Windows.Data.ValueConversionAttribute">
			<summary>Represents an attribute that allows the author of a value converter to specify the data types involved in the implementation of the converter. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Data.ValueConversionAttribute.#ctor(System.Type,System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.ValueConversionAttribute"></see> class with the specified source type and target type.</summary>
			<param name="targetType">The type this converter converts to.</param>
			<param name="sourceType">The type this converter converts.</param>
			<exception cref="T:System.ArgumentNullException">The sourceType parameter cannot be null.</exception>
			<exception cref="T:System.ArgumentNullException">The targetType parameter cannot be null.</exception>
		</member>
		<member name="M:System.Windows.Data.ValueConversionAttribute.GetHashCode">
			<summary>Returns the hash code for this instance of <see cref="T:System.Windows.Data.ValueConversionAttribute"></see>.</summary>
			<returns>The hash code for this instance of <see cref="T:System.Windows.Data.ValueConversionAttribute"></see>.</returns>
		</member>
		<member name="P:System.Windows.Data.ValueConversionAttribute.ParameterType">
			<summary>Gets and sets the type of the optional value converter parameter object.</summary>
			<returns>The type of the optional value converter parameter object.</returns>
		</member>
		<member name="P:System.Windows.Data.ValueConversionAttribute.SourceType">
			<summary>Gets the type this converter converts.</summary>
			<returns>The type this converter converts.</returns>
		</member>
		<member name="P:System.Windows.Data.ValueConversionAttribute.TargetType">
			<summary>Gets the type this converter converts to.</summary>
			<returns>The type this converter converts to.</returns>
		</member>
		<member name="T:System.Windows.Data.XmlDataProvider">
			<summary>Enables declarative access to XML data for data binding.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlDataProvider.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlDataProvider"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlDataProvider.BeginQuery">
			<summary>Prepares the loading of either the inline XML or the external XML file to produce a collection of XML nodes.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlDataProvider.EndInit">
			<summary>Indicates that the initialization of this element has completed; this causes a <see cref="M:System.Windows.Data.DataSourceProvider.Refresh"></see> if no other <see cref="M:System.Windows.Data.DataSourceProvider.DeferRefresh"></see> is outstanding.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeSource">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.Source"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXmlSerializer">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.XmlSerializer"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Data.XmlDataProvider.ShouldSerializeXPath">
			<summary>Indicates whether the <see cref="P:System.Windows.Data.XmlDataProvider.XPath"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlDataProvider.Document">
			<summary>Gets or sets the <see cref="T:System.Xml.XmlDocument"></see> to use as the binding source.</summary>
			<returns>The <see cref="T:System.Xml.XmlDocument"></see> to use as the binding source. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlDataProvider.IsAsynchronous">
			<summary>Gets or sets a value that indicates whether node collection creation will be performed in a worker thread or in active context.</summary>
			<returns>true to perform node collection creation in a worker thread; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlDataProvider.Source">
			<summary>Gets or sets the <see cref="T:System.Uri"></see> of the XML data file to use as the binding source.</summary>
			<returns>The <see cref="T:System.Uri"></see> of the XML data file to use as the binding source. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlDataProvider.XmlNamespaceManager">
			<summary>Gets or sets the <see cref="T:System.Xml.XmlNamespaceManager"></see> used to run <see cref="P:System.Windows.Data.XmlDataProvider.XPath"></see> queries.</summary>
			<returns>The <see cref="T:System.Xml.XmlNamespaceManager"></see> used to run <see cref="P:System.Windows.Data.XmlDataProvider.XPath"></see> queries. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlDataProvider.XmlSerializer">
			<summary>Gets the inline XML content.</summary>
			<returns>The inline XML content.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlDataProvider.XPath">
			<summary>Gets or sets the XPath query used to generate the data collection.</summary>
			<returns>The XPath query used to generate the data collection. The default is an empty string.</returns>
		</member>
		<member name="T:System.Windows.Data.XmlNamespaceMapping">
			<summary>Declares a mapping between a uniform resource identifier (URI) and a prefix.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.#ctor(System.String,System.Uri)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> class with the specified prefix and uniform resource identifier (URI).</summary>
			<param name="uri">The <see cref="T:System.Uri"></see> of the namespace to create the mapping for.</param>
			<param name="prefix">The prefix to use in Extensible Application Markup Language (XAML).</param>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.Equals(System.Object)">
			<summary>Returns a value that indicates whether this <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> is equivalent to the specified instance.</summary>
			<returns>true if the two instances are the same; otherwise, false.</returns>
			<param name="obj">The instance to compare for equality.</param>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.GetHashCode">
			<summary>Returns the hash code for this <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see>.</summary>
			<returns>The hash code for this <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see>.</returns>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.op_Equality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
			<summary>Performs equality comparison by value.</summary>
			<returns>true if the two <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> objects are the same; false otherwise.</returns>
			<param name="mappingB">The second <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see>.object to compare.</param>
			<param name="mappingA">The first <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see>.object to compare.</param>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.op_Inequality(System.Windows.Data.XmlNamespaceMapping,System.Windows.Data.XmlNamespaceMapping)">
			<summary>Performs inequality comparison by value.</summary>
			<returns>true if the two <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> objects are not the same; false otherwise.</returns>
			<param name="mappingB">The second <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see>.object to compare.</param>
			<param name="mappingA">The first <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see>.object to compare.</param>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.System.ComponentModel.ISupportInitialize.BeginInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMapping.System.ComponentModel.ISupportInitialize.EndInit">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Data.XmlNamespaceMapping.Prefix">
			<summary>Gets or sets the prefix to use in Extensible Application Markup Language (XAML).</summary>
			<returns>The default value is an empty string.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlNamespaceMapping.Uri">
			<summary>Gets or sets the <see cref="T:System.Uri"></see> of the namespace for which to create a mapping.</summary>
			<returns>The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Data.XmlNamespaceMappingCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Add(System.Windows.Data.XmlNamespaceMapping)">
			<summary>Adds a <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object to this collection.</summary>
			<param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object to add. This cannot be null.</param>
			<exception cref="T:System.ArgumentNullException">If mapping is null.</exception>
			<exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri"></see> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object is null. </exception>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddChild(System.Object)">
			<summary>Adds a <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object to this collection.</summary>
			<param name="value">The <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object to add. This cannot be null.</param>
			<exception cref="T:System.ArgumentException">If mapping is null.</exception>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.AddText(System.String)">
			<summary>Adds a text string as a child of this <see cref="T:System.Windows.Data.XmlNamespaceMappingCollection"></see> object.</summary>
			<param name="text">The text string to add as a child.</param>
			<exception cref="T:System.ArgumentNullException">If text is null.</exception>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Clear">
			<summary>Removes all <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> objects in this collection.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Contains(System.Windows.Data.XmlNamespaceMapping)">
			<summary>Returns a value that indicates whether this collection contains the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object.</summary>
			<returns>true if this collection contains the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object; otherwise, false.</returns>
			<param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object of interest. This cannot be null.</param>
			<exception cref="T:System.ArgumentNullException">If mapping is null.</exception>
			<exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri"></see> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object is null. </exception>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.CopyTo(System.Windows.Data.XmlNamespaceMapping[],System.Int32)">
			<summary>Copies the items of the collection to the specified array, starting at the specified index.</summary>
			<param name="array">The array that is the destination of the items copied from the collection.</param>
			<param name="arrayIndex">The zero-based index in array at which copying starts.</param>
			<exception cref="T:System.ArgumentNullException">If array is null.</exception>
			<exception cref="T:System.ArgumentException">If the number of items exceed the length of the array. </exception>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.GetEnumerator">
			<summary>Returns an <see cref="T:System.Collections.IEnumerator"></see> object that you can use to enumerate the items in this collection.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see> object that you can use to enumerate the items in this collection.</returns>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.ProtectedGetEnumerator">
			<summary>Returns a generic <see cref="T:System.Collections.Generic.IEnumerator`1"></see> object.</summary>
			<returns>A generic <see cref="T:System.Collections.Generic.IEnumerator`1"></see> object.</returns>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.Remove(System.Windows.Data.XmlNamespaceMapping)">
			<summary>Removes the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object from this collection.</summary>
			<returns>true if the specified <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object has been successfully removed; otherwise, false.</returns>
			<param name="mapping">The <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object to remove. This cannot be null.</param>
			<exception cref="T:System.ArgumentNullException">If mapping is null.</exception>
			<exception cref="T:System.ArgumentException">If the <see cref="P:System.Windows.Data.XmlNamespaceMapping.Uri"></see> of the <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> object is null. </exception>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Data.XmlNamespaceMappingCollection.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Data.XmlNamespaceMappingCollection.Count">
			<summary>Gets the number of <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> objects in the collection.</summary>
			<returns>The number of <see cref="T:System.Windows.Data.XmlNamespaceMapping"></see> objects in the collection.</returns>
		</member>
		<member name="P:System.Windows.Data.XmlNamespaceMappingCollection.IsReadOnly">
			<summary>Gets a value that indicates whether this collection is read-only.</summary>
			<returns>This always returns false.</returns>
		</member>
		<member name="N:System.Windows.Documents">
			<summary>Defines objects that support <see cref="T:System.Windows.Documents.FixedDocument"></see>, <see cref="T:System.Windows.Documents.FlowDocument"></see>, and XML Paper Specification (XPS) document creation. </summary>
		</member>
		<member name="T:System.Windows.Documents.Adorner">
			<summary>Abstract class that represents a <see cref="T:System.Windows.FrameworkElement"></see> that decorates a <see cref="T:System.Windows.UIElement"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.Adorner.#ctor(System.Windows.UIElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Adorner"></see> class.</summary>
			<param name="adornedElement">The element to bind the adorner to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when adornedElement is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Adorner.GetDesiredTransform(System.Windows.Media.GeneralTransform)">
			<summary>Returns a <see cref="T:System.Windows.Media.Transform"></see> for the adorner, based on the transform that is currently applied to the adorned element.</summary>
			<returns>A transform to apply to the adorner.</returns>
			<param name="transform">The transform that is currently applied to the adorned element.</param>
		</member>
		<member name="M:System.Windows.Documents.Adorner.GetLayoutClip(System.Windows.Size)">
			<summary>Unsupported; do not use.</summary>
			<returns>This method always returns null.</returns>
		</member>
		<member name="M:System.Windows.Documents.Adorner.MeasureOverride(System.Windows.Size)">
			<summary>Implements any custom measuring behavior for the adorner.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> object representing the amount of layout space needed by the adorner.</returns>
			<param name="constraint">A size to constrain the adorner to.</param>
		</member>
		<member name="P:System.Windows.Documents.Adorner.AdornedElement">
			<summary>Gets the <see cref="T:System.Windows.UIElement"></see> that this adorner is bound to.</summary>
			<returns>The element that this adorner is bound to.The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Documents.Adorner.IsClipEnabled">
			<summary>Gets or sets a value that indicates whether clipping of the adorner is enabled.</summary>
			<returns>A Boolean value indicating whether clipping of the adorner is enabled.If this property is false, the adorner is not clipped.If this property is true, the adorner is clipped using the same clipping geometry as the adorned element.The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Documents.AdornerDecorator">
			<summary>Provides an adorner layer for elements beneath it in the visual tree.</summary>
		</member>
		<member name="M:System.Windows.Documents.AdornerDecorator.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.AdornerDecorator"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.AdornerDecorator.ArrangeOverride(System.Windows.Size)">
			<summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerDecorator"></see>.</summary>
			<returns>The actual size needed by the element.  This return value is typically the same as the value passed to finalSize.</returns>
			<param name="finalSize">The size reserved for this element by its parent.</param>
		</member>
		<member name="M:System.Windows.Documents.AdornerDecorator.GetVisualChild(System.Int32)">
			<summary>Gets a <see cref="T:System.Windows.Media.Visual"></see> child at the specified index position.</summary>
			<returns>A <see cref="T:System.Windows.Media.Visual"></see> child of the parent <see cref="T:System.Windows.Controls.Viewbox"></see> element.</returns>
			<param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual"></see> child.</param>
		</member>
		<member name="M:System.Windows.Documents.AdornerDecorator.MeasureOverride(System.Windows.Size)">
			<summary>Measures the size required for child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerDecorator"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Size"></see> object representing the amount of layout space needed by the <see cref="T:System.Windows.Documents.AdornerDecorator"></see>.</returns>
			<param name="constraint">A size to constrain the <see cref="T:System.Windows.Documents.AdornerDecorator"></see> to.</param>
		</member>
		<member name="P:System.Windows.Documents.AdornerDecorator.AdornerLayer">
			<summary>Gets the <see cref="T:System.Windows.Documents.AdornerLayer"></see> associated with this <see cref="T:System.Windows.Documents.AdornerDecorator"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Documents.AdornerLayer"></see> associated with this adorner decorator. </returns>
		</member>
		<member name="P:System.Windows.Documents.AdornerDecorator.Child">
			<summary>Gets or sets the single child of an <see cref="T:System.Windows.Documents.AdornerDecorator"></see>.</summary>
			<returns>The single child of an <see cref="T:System.Windows.Documents.AdornerDecorator"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.AdornerDecorator.VisualChildrenCount">
			<summary>Gets the number of child <see cref="T:System.Windows.Media.Visual"></see> objects in this instance of <see cref="T:System.Windows.Documents.AdornerDecorator"></see>.</summary>
			<returns>Either returns 2 (one for the <see cref="T:System.Windows.Documents.AdornerLayer"></see> and one for the <see cref="P:System.Windows.Documents.AdornerDecorator.Child"></see>) or the property returns 0 if the <see cref="T:System.Windows.Documents.AdornerDecorator"></see> has no child.</returns>
		</member>
		<member name="T:System.Windows.Documents.AdornerLayer">
			<summary>Represents a surface for rendering adorners.</summary>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.Add(System.Windows.Documents.Adorner)">
			<summary>Adds an adorner to the adorner layer.</summary>
			<param name="adorner">The adorner to add.</param>
			<exception cref="T:System.ArgumentNullException">Raised when adorner is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)">
			<summary>Gets an <see cref="T:System.Windows.Media.AdornerHitTestResult"></see> for a specified point.</summary>
			<returns>An <see cref="T:System.Windows.Media.AdornerHitTestResult"></see> for the specified point.</returns>
			<param name="point">The point to hit test.</param>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.ArrangeOverride(System.Windows.Size)">
			<summary>Positions child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerLayer"></see>.</summary>
			<returns>The actual size needed by the element.  This return value is typically the same as the value passed to finalSize.</returns>
			<param name="finalSize">The size reserved for this element by its parent.</param>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.GetAdornerLayer(System.Windows.Media.Visual)">
			<summary>Returns the first adorner layer in the visual tree above a specified <see cref="T:System.Windows.Media.Visual"></see>.</summary>
			<returns>An adorner layer for the specified visual, or null if no adorner layer can be found.</returns>
			<param name="visual">The visual element for which to find an adorner layer.</param>
			<exception cref="T:System.ArgumentNullException">Raised when visual is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.GetAdorners(System.Windows.UIElement)">
			<summary>Returns an array of adorners that are bound to the specified <see cref="T:System.Windows.UIElement"></see>.</summary>
			<returns>An array of adorners that decorate the specified <see cref="T:System.Windows.UIElement"></see>, or null if there are no adorners bound to the specified element.</returns>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> to retrieve an array of adorners for.</param>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.GetVisualChild(System.Int32)">
			<summary>Gets a <see cref="T:System.Windows.Media.Visual"></see> child at the specified index position.</summary>
			<returns>A <see cref="T:System.Windows.Media.Visual"></see> child of the parent <see cref="T:System.Windows.Documents.AdornerLayer"></see> element.</returns>
			<param name="index">The index position of the wanted <see cref="T:System.Windows.Media.Visual"></see> child.</param>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.MeasureOverride(System.Windows.Size)">
			<summary>Measures the size required for child elements and determines a size for the <see cref="T:System.Windows.Documents.AdornerLayer"></see>.</summary>
			<returns>This method always returns a <see cref="T:System.Windows.Size"></see> of (0,0).</returns>
			<param name="constraint">Unused.</param>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.Remove(System.Windows.Documents.Adorner)">
			<summary>Removes the specified <see cref="T:System.Windows.Documents.Adorner"></see> from the adorner layer.</summary>
			<param name="adorner">The <see cref="T:System.Windows.Documents.Adorner"></see> to remove.</param>
			<exception cref="T:System.ArgumentNullException">Raised when adorner is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.Update">
			<summary>Updates the layout and redraws all of the adorners in the adorner layer.</summary>
		</member>
		<member name="M:System.Windows.Documents.AdornerLayer.Update(System.Windows.UIElement)">
			<summary>Updates the layout and redraws all of the adorners in the adorner layer that are bound to the specified <see cref="T:System.Windows.UIElement"></see>.</summary>
			<param name="element">The <see cref="T:System.Windows.UIElement"></see> associated with the adorners to update.</param>
			<exception cref="T:System.InvalidOperationException">Raised when the specified element cannot be found.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.AdornerLayer.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical child elements of this <see cref="T:System.Windows.Documents.AdornerLayer"></see> element. </summary>
			<returns>An <see cref="T:System.Collections.IEnumerator"></see>. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.AdornerLayer.VisualChildrenCount">
			<summary>Gets the number of child <see cref="T:System.Windows.Media.Visual"></see> objects in this instance of <see cref="T:System.Windows.Documents.AdornerLayer"></see>.</summary>
			<returns>The number of child <see cref="T:System.Windows.Media.Visual"></see> objects in this instance of <see cref="T:System.Windows.Documents.AdornerLayer"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.AnchoredBlock">
			<summary>An abstract class that provides a base for <see cref="T:System.Windows.Documents.Inline"></see> elements that are used to anchor <see cref="T:System.Windows.Documents.Block"></see> elements to flow content.</summary>
		</member>
		<member name="M:System.Windows.Documents.AnchoredBlock.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
			<summary>Initializes base class values when called by a derived class, taking a specified <see cref="T:System.Windows.Documents.Block"></see> object as the initial contents of the new descendant of <see cref="T:System.Windows.Documents.AnchoredBlock"></see>, and a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position for the new <see cref="T:System.Windows.Documents.AnchoredBlock"></see> descendant.</summary>
			<param name="block">A <see cref="T:System.Windows.Documents.Block"></see> object specifying the initial contents of the new element.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Block"></see> is inserted.</param>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the element after it is created, or null for no automatic insertion.</param>
		</member>
		<member name="F:System.Windows.Documents.AnchoredBlock.BorderBrushProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderBrush"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.AnchoredBlock.BorderThicknessProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.BorderThickness"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.AnchoredBlock.LineHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.AnchoredBlock.LineStackingStrategyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.AnchoredBlock.MarginProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Margin"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.Margin"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.AnchoredBlock.PaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.Padding"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.Padding"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.AnchoredBlock.TextAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.AnchoredBlock.TextAlignment"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.AnchoredBlock.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks"></see> property should be serialized during serialization of an object deriving from <see cref="T:System.Windows.Documents.AnchoredBlock"></see>.</summary>
			<returns>true if the <see cref="P:System.Windows.Documents.AnchoredBlock.Blocks"></see> property should be serialized; otherwise, false.</returns>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.NullReferenceException">Raised when manager is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.Blocks">
			<summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the top-level <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the element.</summary>
			<returns>A <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the element. This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.BorderBrush">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Brush"></see> to use when painting the element's border.</summary>
			<returns>The brush used to apply to the element's border.The default value is a null brush.</returns>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.BorderThickness">
			<summary>Gets or sets the border thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of border to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.LineHeight">
			<summary>Gets or sets the height of each line of content.</summary>
			<returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.AnchoredBlock.LineHeight"></see> must be equal to or greater than 0.0034 and equal to or less then 160000.A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the line height is determined automatically from the current font characteristics.  The default value is <see cref="F:System.Double.NaN"></see>.</returns>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> to a non-positive value.</exception>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.LineStackingStrategy">
			<summary>Gets or sets the mechanism by which a line box is determined for each line of text within the text element.</summary>
			<returns>The mechanism by which a line box is determined for each line of text within the text element. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.Margin">
			<summary>Gets or sets the margin thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of margin to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.Padding">
			<summary>Gets or sets the padding thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of padding to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.AnchoredBlock.TextAlignment">
			<summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextAlignment"></see> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Block">
			<summary>An abstract class that provides a base for all block-level flow content elements.</summary>
		</member>
		<member name="M:System.Windows.Documents.Block.#ctor">
			<summary>Initializes base class values when called by a derived class.</summary>
		</member>
		<member name="F:System.Windows.Documents.Block.BorderBrushProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.BorderBrush"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BorderBrush"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.BorderThicknessProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.BorderThickness"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BorderThickness"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.BreakColumnBeforeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.BreakColumnBefore"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BreakColumnBefore"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.BreakPageBeforeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.BreakPageBefore"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.BreakPageBefore"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.ClearFloatersProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.ClearFloaters"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.ClearFloaters"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.FlowDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.FlowDirection"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.FlowDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.LineHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.LineHeight"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.LineHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.LineStackingStrategyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.MarginProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.Margin"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.Margin"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.PaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.Padding"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.Padding"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Block.TextAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Block.TextAlignment"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Block.TextAlignment"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.LineHeight"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Block.LineHeight"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineHeight"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"></see>   attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"></see> attached property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Block.TextAlignment"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object from which to retrieve the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled"></see>  attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.LineHeight"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineHeight"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> to a non-positive value.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"></see>   attached property on a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.LineStackingStrategy"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object on which to set the value of the <see cref="P:System.Windows.Documents.Block.TextAlignment"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.Block.BorderBrush">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Brush"></see> to use when painting the element's border.</summary>
			<returns>The brush used to apply to the element's border.The default value is a null brush.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.BorderThickness">
			<summary>Gets or sets the border thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of border to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.BreakColumnBefore">
			<summary>Gets or sets a value that indicates whether or not to automatically insert a column-break before this element in cases where the element participates in a column-based presentation.</summary>
			<returns>A Boolean value indicating whether or not to automatically insert a column-break before this element.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.BreakPageBefore">
			<summary>Gets or sets a value that indicates whether or not to automatically insert a page-break before this element.</summary>
			<returns>A Boolean value indicating whether or not to automatically insert a page-break before this element.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.ClearFloaters">
			<summary>Gets or sets a direction in which any <see cref="T:System.Windows.Documents.Floater"></see> elements contained by a <see cref="T:System.Windows.Documents.Block"></see> element should be re-positioned.</summary>
			<returns>A member of the <see cref="T:System.Windows.WrapDirection"></see> enumeration specifying the flow direction in which to separate out any <see cref="T:System.Windows.Documents.Floater"></see> elements from other content contained in the <see cref="T:System.Windows.Documents.Block"></see> element.The default value is <see cref="F:System.Windows.WrapDirection.None"></see>, which indicates that floaters should be rendered in place.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.FlowDirection">
			<summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.Block"></see> element.</summary>
			<returns>A member of the <see cref="T:System.Windows.FlowDirection"></see> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.Block"></see> element to re-flow in the indicated direction.The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.IsHyphenationEnabled">
			<summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</summary>
			<returns>true to indicate that automatic breaking and hyphenation of words is enabled; false otherwise.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.LineHeight">
			<summary>Gets or sets the height of each line of content.</summary>
			<returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.Block.LineHeight"></see> must be equal to or greater than 0.0034 and equal to or less than 160001.A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of Auto) causes the line height is determined automatically from the current font characteristics.  The default value is <see cref="F:System.Double.NaN"></see>.</returns>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> to a non-positive value.</exception>
		</member>
		<member name="P:System.Windows.Documents.Block.LineStackingStrategy">
			<summary>Gets or sets the mechanism by which a line box is determined for each line of text within the block-level flow content element.</summary>
			<returns>The mechanism by which a line box is determined for each line of text within the block-level flow content element. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.Margin">
			<summary>Gets or sets the margin thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of margin to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.NextBlock">
			<summary>Gets the sibling <see cref="T:System.Windows.Documents.Block"></see> element directly following this <see cref="T:System.Windows.Documents.Block"></see> element.</summary>
			<returns>The sibling <see cref="T:System.Windows.Documents.Block"></see> element directly following this <see cref="T:System.Windows.Documents.Block"></see> element, or null if no such element exists.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.Padding">
			<summary>Gets or sets the padding thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of padding to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.PreviousBlock">
			<summary>Gets the sibling <see cref="T:System.Windows.Documents.Block"></see> element directly preceding this <see cref="T:System.Windows.Documents.Block"></see> element.</summary>
			<returns>The sibling <see cref="T:System.Windows.Documents.Block"></see> element directly preceding this <see cref="T:System.Windows.Documents.Block"></see> element, or null if no such element exists.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.SiblingBlocks">
			<summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection"></see> that contains <see cref="T:System.Windows.Documents.Block"></see> elements that are siblings to this <see cref="T:System.Windows.Documents.Block"></see> element.</summary>
			<returns>A <see cref="T:System.Windows.Documents.BlockCollection"></see> that contains all of the child <see cref="T:System.Windows.Documents.Block"></see> elements directly hosted by the parent of this Block element, or null if this <see cref="T:System.Windows.Documents.Block"></see> element has no parent.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Block.TextAlignment">
			<summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextAlignment"></see> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.BlockCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Documents.Block"></see> elements. <see cref="T:System.Windows.Documents.BlockCollection"></see> defines the allowable child content of the <see cref="T:System.Windows.Documents.FlowDocument"></see>, <see cref="T:System.Windows.Documents.Section"></see>, <see cref="T:System.Windows.Documents.ListItem"></see>, <see cref="T:System.Windows.Documents.TableCell"></see>, <see cref="T:System.Windows.Documents.Floater"></see>, and <see cref="T:System.Windows.Documents.Figure"></see> elements.</summary>
		</member>
		<member name="T:System.Windows.Documents.BlockUIContainer">
			<summary>A block-level flow content element which enables <see cref="T:System.Windows.UIElement"></see> elements (i.e. a <see cref="T:System.Windows.Controls.Button"></see>) to be embedded (hosted) in flow content.</summary>
		</member>
		<member name="M:System.Windows.Documents.BlockUIContainer.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.BlockUIContainer"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.BlockUIContainer.#ctor(System.Windows.UIElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.BlockUIContainer"></see> class, taking a specified <see cref="T:System.Windows.UIElement"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.BlockUIContainer"></see>.</summary>
			<param name="uiElement">An <see cref="T:System.Windows.UIElement"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.BlockUIContainer"></see>.</param>
		</member>
		<member name="P:System.Windows.Documents.BlockUIContainer.Child">
			<summary>Gets or sets the <see cref="T:System.Windows.UIElement"></see> hosted by the <see cref="T:System.Windows.Documents.BlockUIContainer"></see>.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> hosted by the <see cref="T:System.Windows.Documents.BlockUIContainer"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Bold">
			<summary>An inline-level flow content element which causes content to render with a bold font weight.</summary>
		</member>
		<member name="M:System.Windows.Documents.Bold.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Bold"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Bold"></see>.</summary>
			<param name="childInline">An <see cref="T:System.Windows.Documents.Inline"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Bold"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Bold"></see>, and a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Inline"></see> element.</summary>
			<param name="childInline">An <see cref="T:System.Windows.Documents.Inline"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Bold"></see>.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline"></see> is inserted.</param>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Bold"></see> element after it is created, or null for no automatic insertion.</param>
		</member>
		<member name="M:System.Windows.Documents.Bold.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Bold"></see> class, taking two <see cref="T:System.Windows.Documents.TextPointer"></see> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold"></see>.</summary>
			<param name="end">A <see cref="T:System.Windows.Documents.TextPointer"></see> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold"></see>.</param>
			<param name="start">A <see cref="T:System.Windows.Documents.TextPointer"></see> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Bold"></see>.</param>
			<exception cref="T:System.ArgumentNullException">Raised when start or end is null.</exception>
			<exception cref="T:System.ArgumentException">Raised when start and end do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Bold"></see> element, for example, if start and end indicate positions in different paragraphs.</exception>
		</member>
		<member name="T:System.Windows.Documents.DocumentReference">
			<summary>Provides access to reference a <see cref="T:System.Windows.Documents.FixedDocument"></see>. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentReference.#ctor">
			<summary>Initializes a new instance of the DocumentReference class.</summary>
		</member>
		<member name="F:System.Windows.Documents.DocumentReference.SourceProperty">
			<summary>Identifies the Source dependency property.</summary>
			<returns>The identifier for the Source dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.DocumentReference.GetDocument(System.Boolean)">
			<summary>Synchronously loads and parses the document specified by the <see cref="P:System.Windows.Documents.DocumentReference.Source"></see> property location.</summary>
			<returns>The document that was loaded.</returns>
			<param name="forceReload">true to force a new load of the <see cref="P:System.Windows.Documents.DocumentReference.Source"></see> document, even if it was previously loaded.</param>
		</member>
		<member name="M:System.Windows.Documents.DocumentReference.SetDocument(System.Windows.Documents.FixedDocument)">
			<summary>Attaches a <see cref="T:System.Windows.Documents.FixedDocument"></see> to the <see cref="T:System.Windows.Documents.DocumentReference"></see>.</summary>
			<param name="doc">The document that is attached.</param>
		</member>
		<member name="P:System.Windows.Documents.DocumentReference.Source">
			<summary>Gets or sets the uniform resource identifier (URI) for this document reference.</summary>
			<returns>A <see cref="T:System.Uri"></see> representing the document reference.</returns>
		</member>
		<member name="T:System.Windows.Documents.DocumentReferenceCollection">
			<summary>Defines an ordered list of <see cref="T:System.Windows.Documents.DocumentReference"></see> elements. This class cannot be inherited.</summary>
		</member>
		<member name="E:System.Windows.Documents.DocumentReferenceCollection.CollectionChanged">
			<summary>Occurs when an element is added or removed.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentReferenceCollection.Add(System.Windows.Documents.DocumentReference)">
			<summary>Adds an element to the end of the collection.</summary>
			<param name="item">The element to add to the end of the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.DocumentReferenceCollection.CopyTo(System.Windows.Documents.DocumentReference[],System.Int32)">
			<summary>Copies the whole collection to an array that starts at a given array index.</summary>
			<param name="array">The destination array to which the elements from the collection should be copied.</param>
			<param name="arrayIndex">The zero-based starting index within the array where the collection elements are to be copied.</param>
		</member>
		<member name="M:System.Windows.Documents.DocumentReferenceCollection.GetEnumerator">
			<summary>Returns an enumerator for iterating through the collection.</summary>
			<returns>An enumerator for iterating through the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.DocumentReferenceCollection.Count">
			<summary>Gets the number of elements that are in the collection.</summary>
			<returns>The number of items that the collection contains.</returns>
		</member>
		<member name="P:System.Windows.Documents.DocumentReferenceCollection.Item(System.Int32)">
			<summary>Gets the element that is at the specified index.</summary>
			<returns>The collection element that is at the specified index.</returns>
			<param name="index">The zero-based index of the element in the collection to get.</param>
		</member>
		<member name="T:System.Windows.Documents.EditingCommands">
			<summary>Provides a standard set of editing related commands.</summary>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.AlignCenter">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter"></see> command, which requests that the current paragraph or a selection of paragraphs be centered.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+E.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.AlignJustify">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify"></see> command, which requests that the current paragraph or a selection of paragraphs be justified.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+J.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.AlignLeft">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft"></see> command, which requests that a selection of content be aligned left.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+L.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.AlignRight">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight"></see> command, which requests that a selection of content be aligned right.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+R.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.Backspace">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace"></see> command, which requests that a backspace be entered at the current position or over the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Backspace.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.CorrectSpellingError">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError"></see> command, which requests that any misspelled word at the current position be corrected.</summary>
			<returns>The requested command.  This command has no default key gesture.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.DecreaseFontSize">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize"></see> command, which requests that the font size for the current selection be decreased by 1 point.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+OemOpenBrackets.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.DecreaseIndentation">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation"></see> command, which requests that indentation for the current paragraph be decreased by one tab stop.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+T.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.Delete">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete"></see> command, which requests that the current selection be deleted.</summary>
			<returns>The requested command.  The default key gesture for this command is Delete.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.DeleteNextWord">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord"></see> command, which requests that the next word (relative to a current position) be deleted.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Delete.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.DeletePreviousWord">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord"></see> command, which requests that the previous word (relative to a current position) be deleted.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Backspace.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.EnterLineBreak">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak"></see> command, which requests that a line break be inserted at the current position or over the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+Enter.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak"></see> command, which requests that a paragraph break be inserted at the current position or over the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Enter.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError"></see> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</summary>
			<returns>The requested command.  This command has no default key gesture.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.IncreaseFontSize">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize"></see> command, which requests that the font size for the current selection be increased by 1 point.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+OemCloseBrackets.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.IncreaseIndentation">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation"></see> command, which requests that indentation for the current paragraph be increased by one tab stop.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+T.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveDownByLine">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine"></see> command, which requests that the caret move down by one line.</summary>
			<returns>The requested command.  The default key gesture for this command is Down.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveDownByPage">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage"></see> command, which requests that the caret move down by one page.</summary>
			<returns>The requested command.  The default key gesture for this command is PageDown.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph"></see> command, which requests that the caret move down by one paragraph.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Down.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter"></see> command, which requests that the caret move one character left.</summary>
			<returns>The requested command.  The default key gesture for this command is Left.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveLeftByWord">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord"></see> command, which requests that the caret move one word left.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Left.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter"></see> command, which requests that the caret move one character right.</summary>
			<returns>The requested command.  The default key gesture for this command is Right.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveRightByWord">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord"></see> command, which requests that the caret move right by one word.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Right.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd"></see> command, which requests that the caret move to the very end of content.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+End.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart"></see> command, which requests that the caret move to the very beginning of content.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Home.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveToLineEnd">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd"></see> command, which requests that the caret move to the end of the current line.</summary>
			<returns>The requested command.  The default key gesture for this command is End.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveToLineStart">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart"></see> command, which requests that the caret move to the beginning of the current line.</summary>
			<returns>The requested command.  The default key gesture for this command is Home.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveUpByLine">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine"></see> command, which requests that the caret move up by one line.</summary>
			<returns>The requested command.  The default key gesture for this command is Up.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveUpByPage">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage"></see> command, which requests that the caret move up by one page.</summary>
			<returns>The requested command.  The default key gesture for this command is PageUp.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph"></see> command, which requests that the caret move up by one paragraph.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Up.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectDownByLine">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine"></see> command, which requests that the current selection be expanded down by one line.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+Down.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectDownByPage">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage"></see> command, which requests that the current selection be expanded down by one page.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+PageDown.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph"></see> command, which requests that the current selection be expanded down by one paragraph.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Down.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter"></see> command, which requests that the current selection be expanded left by one character.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+Left.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectLeftByWord">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord"></see> command, which requests that the current selection be expanded left by one word.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Left.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter"></see> command, which requests that the current selection be expanded right by one character.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+Right.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectRightByWord">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord"></see> command, which requests that the current selection be expanded right by one word.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Right.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd"></see> command, which requests that the current selection be expanded to the very end of content.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+End.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart"></see> command, which requests that the current selection be expanded to the very beginning of content.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Home.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectToLineEnd">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd"></see> command, which requests that the current selection be expanded to the end of the current line.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+End.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectToLineStart">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart"></see> command, which requests that the current selection be expanded to the beginning of the current line.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+Home.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectUpByLine">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine"></see> command, which requests that the current selection be expanded up by one line.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+Up.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectUpByPage">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage"></see> command, which requests that the current selection be expanded  up by one page.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+PageUp.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph"></see> command, which requests that the current selection be expanded up by one paragraph.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+Up.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.TabBackward">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward"></see> command.</summary>
			<returns>The requested command.  The default key gesture for this command is Shift+Tab.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.TabForward">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward"></see> command.</summary>
			<returns>The requested command.  The default key gesture for this command is Tab.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleBold">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold"></see> command, which requests that <see cref="T:System.Windows.Documents.Bold"></see> formatting be toggled on the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+B.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleBullets">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets"></see> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+L.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleInsert">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert"></see> command, which toggles the typing mode between Insert and Overtype.</summary>
			<returns>The requested command.  The default key gesture for this command is Insert.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleItalic">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic"></see> command, which requests that <see cref="T:System.Windows.Documents.Italic"></see> formatting be toggled on the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+I.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleNumbering">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering"></see> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+N.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleSubscript">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript"></see> command, which requests that subscript formatting be toggled on the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+OemPlus.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleSuperscript">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript"></see> command, which requests that superscript formatting be toggled on the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+Shift+OemPlus.</returns>
		</member>
		<member name="P:System.Windows.Documents.EditingCommands.ToggleUnderline">
			<summary>Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline"></see> command, which requests that <see cref="T:System.Windows.Documents.Underline"></see> formatting be toggled on the current selection.</summary>
			<returns>The requested command.  The default key gesture for this command is Ctrl+U.</returns>
		</member>
		<member name="T:System.Windows.Documents.Figure">
			<summary>An inline-level flow content element used to host a figure.  A figure is a portion of flow content with placement properties that can be customized independently from the primary content flow within a <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.Figure.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Figure"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Figure"></see> class, taking a specified <see cref="T:System.Windows.Documents.Block"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Figure"></see>.</summary>
			<param name="childBlock">A <see cref="T:System.Windows.Documents.Block"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Figure"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Figure.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Figure"></see> class, taking a specified <see cref="T:System.Windows.Documents.Block"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Figure"></see>, and a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Figure"></see> element.</summary>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Figure"></see> element after it is created, or null for no automatic insertion.</param>
			<param name="childBlock">A <see cref="T:System.Windows.Documents.Block"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Figure"></see>.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Block"></see> is inserted.</param>
		</member>
		<member name="F:System.Windows.Documents.Figure.CanDelayPlacementProperty">
			<summary> Identifies the <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.CanDelayPlacement"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Figure.HeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Figure.Height"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.Height"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Figure.HorizontalAnchorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.HorizontalAnchor"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Figure.HorizontalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Figure.HorizontalOffset"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.HorizontalOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Figure.VerticalAnchorProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Figure.VerticalAnchor"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.VerticalAnchor"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Figure.VerticalOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Figure.VerticalOffset"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.VerticalOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Figure.WidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Figure.Width"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.Width"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Figure.WrapDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Figure.WrapDirection"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Figure.WrapDirection"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.CanDelayPlacement">
			<summary>Gets or sets a value that indicates whether this figure can delay its placement in the flow of content. </summary>
			<returns>true if this figure can delay placement; otherwise, false.The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.Height">
			<summary>Gets or sets a value that indicates the height of a <see cref="T:System.Windows.Documents.Figure"></see> element.</summary>
			<returns>A <see cref="T:System.Windows.FigureLength"></see> structure specifying the height characteristics for the <see cref="T:System.Windows.Documents.Figure"></see>.The default value is <see cref="T:System.Windows.FigureLength"></see>.<see cref="P:System.Windows.FigureLength.Value"></see> = 1.0 and <see cref="T:System.Windows.FigureLength"></see>.<see cref="P:System.Windows.FigureLength.FigureUnitType"></see> = <see cref="F:System.Windows.FigureUnitType.Auto"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.HorizontalAnchor">
			<summary>Gets or sets a value that indicates the position that content is anchored to in the horizontal direction.</summary>
			<returns>A member of the <see cref="T:System.Windows.FigureHorizontalAnchor"></see> enumeration specifying a horizontal anchor location for the <see cref="T:System.Windows.Documents.Figure"></see>.The default value is <see cref="F:System.Windows.FigureHorizontalAnchor.ColumnRight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.HorizontalOffset">
			<summary>Gets or sets a value that indicates the distance that a <see cref="T:System.Windows.Documents.Figure"></see> is offset from its baseline in the horizontal direction. </summary>
			<returns>The distance that a <see cref="T:System.Windows.Documents.Figure"></see> is offset from its baseline in the horizontal direction, in device independent pixels.The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.VerticalAnchor">
			<summary>Gets or sets a value that indicates the position that content is anchored to in the vertical direction.</summary>
			<returns>A member of the <see cref="T:System.Windows.FigureVerticalAnchor"></see> enumeration specifying a vertical anchor location for the <see cref="T:System.Windows.Documents.Figure"></see>.The default value is <see cref="F:System.Windows.FigureVerticalAnchor.ParagraphTop"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.VerticalOffset">
			<summary>Gets or sets a value that indicates the distance that a <see cref="T:System.Windows.Documents.Figure"></see> is offset from its baseline in the vertical direction. </summary>
			<returns>The distance that a <see cref="T:System.Windows.Documents.Figure"></see> is offset from its baseline in the vertical direction, in device independent pixels.The default value is 0.0.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.Width">
			<summary>Gets or sets a value that indicates the width of a <see cref="T:System.Windows.Documents.Figure"></see> element.</summary>
			<returns>A <see cref="T:System.Windows.FigureLength"></see> structure specifying the width characteristics for the <see cref="T:System.Windows.Documents.Figure"></see>.The default value is <see cref="T:System.Windows.FigureLength"></see>.<see cref="P:System.Windows.FigureLength.Value"></see> = 1.0 and <see cref="T:System.Windows.FigureLength"></see>.<see cref="P:System.Windows.FigureLength.FigureUnitType"></see> = <see cref="F:System.Windows.FigureUnitType.Auto"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Figure.WrapDirection">
			<summary>Gets or sets a value that indicates the allowable ways in which content can flow around a <see cref="T:System.Windows.Documents.Figure"></see>. </summary>
			<returns>A member of the <see cref="T:System.Windows.WrapDirection"></see> enumeration specifying the allowable ways in which content can flow around a <see cref="T:System.Windows.Documents.Figure"></see>.The default value is <see cref="F:System.Windows.WrapDirection.Both"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.FixedDocument">
			<summary>Hosts a portable, high fidelity, fixed-format document with read access for user text selection, keyboard navigation, and search.</summary>
		</member>
		<member name="M:System.Windows.Documents.FixedDocument.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocument"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Documents.FixedDocument.PrintTicketProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer">
			<summary>Creates an automation peer for the document. </summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see> that exposes the <see cref="T:System.Windows.Documents.FixedDocument"></see> to Microsoft UI Automation.</returns>
		</member>
		<member name="M:System.Windows.Documents.FixedDocument.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="M:System.Windows.Documents.FixedDocument.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="P:System.Windows.Documents.FixedDocument.DocumentPaginator">
			<summary>Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument"></see> that provides page-oriented services such as getting a particular page and repaginating in response to changes. </summary>
			<returns>An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator"></see> that provides pagination services.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedDocument.LogicalChildren">
			<summary>Gets an enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent"></see> child elements.</summary>
			<returns>An enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent"></see> child elements.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedDocument.Pages">
			<summary>Gets a collection of the document's <see cref="T:System.Windows.Documents.PageContent"></see> elements. </summary>
			<returns>A collection of the document's <see cref="T:System.Windows.Documents.PageContent"></see> elements.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedDocument.PrintTicket">
			<summary>Gets or sets the <see cref="T:System.Printing.PrintTicket"></see> that is associated with this document. </summary>
			<returns>The <see cref="T:System.Printing.PrintTicket"></see> for this document.</returns>
		</member>
		<member name="T:System.Windows.Documents.FixedDocumentSequence">
			<summary>Hosts one or more <see cref="T:System.Windows.Documents.DocumentReference"></see> elements that define a sequence of fixed documents. </summary>
		</member>
		<member name="M:System.Windows.Documents.FixedDocumentSequence.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Documents.FixedDocumentSequence.PrintTicketProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.FixedDocumentSequence.OnCreateAutomationPeer">
			<summary>Creates an automation peer for the sequence. </summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer"></see> that exposes the <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> to Microsoft UI Automation.</returns>
		</member>
		<member name="M:System.Windows.Documents.FixedDocumentSequence.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="M:System.Windows.Documents.FixedDocumentSequence.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="P:System.Windows.Documents.FixedDocumentSequence.DocumentPaginator">
			<summary>Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument"></see> that provides page-oriented services such as getting a particular page and repaginating in response to changes. </summary>
			<returns>An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator"></see> that provides pagination services</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedDocumentSequence.LogicalChildren">
			<summary>Gets an enumerator for accessing the document sequence's <see cref="T:System.Windows.Documents.DocumentReference"></see> child elements. </summary>
			<returns>An enumerator for accessing the document sequence's <see cref="T:System.Windows.Documents.DocumentReference"></see> child elements.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedDocumentSequence.PrintTicket">
			<summary>Gets or sets the <see cref="T:System.Printing.PrintTicket"></see> that is associated with this document sequence. </summary>
			<returns>The <see cref="T:System.Printing.PrintTicket"></see> for this sequence.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedDocumentSequence.References">
			<summary>Gets a collection of the document sequence's <see cref="T:System.Windows.Documents.DocumentReference"></see> child elements. </summary>
			<returns>A collection of the document sequence's <see cref="T:System.Windows.Documents.DocumentReference"></see> child elements.</returns>
		</member>
		<member name="T:System.Windows.Documents.FixedPage">
			<summary>Provides the content for a high fidelity, fixed-format page. </summary>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.#ctor">
			<summary>Initializes a new instance of the FixedPage class. </summary>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.Background"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.BleedBoxProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.BleedBox"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.DocumentPage.BleedBox"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.BottomProperty">
			<summary>Identifies the Bottom attached property. </summary>
			<returns>The identifier for the Bottom attached property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.ContentBoxProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.ContentBox"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.ContentBox"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.LeftProperty">
			<summary>Identifies the Left attached property. </summary>
			<returns>The identifier for the Left attached property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.NavigateUriProperty">
			<summary>Identifies the NavigateUri attached property. </summary>
			<returns>The identifier for the NavigateUri attached property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.PrintTicketProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FixedPage.PrintTicket"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FixedPage.PrintTicket"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.RightProperty">
			<summary>Identifies the Right attached property. </summary>
			<returns>The identifier for the Right dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FixedPage.TopProperty">
			<summary>Identifies the Top attached property. </summary>
			<returns>The identifier for the Top attached property.</returns>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.GetBottom(System.Windows.UIElement)">
			<summary>Returns the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the bottom of an element and the bottom of its parent canvas.</returns>
			<param name="element">The element from which to get the bottom offset.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.GetLeft(System.Windows.UIElement)">
			<summary>Returns the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the right side of an element and the right side of its parent canvas.</returns>
			<param name="element">The element from which to get the left offset.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.GetNavigateUri(System.Windows.UIElement)">
			<summary>Returns the <see cref="P:System.Windows.Documents.FixedPage.NavigateUri"></see> property for a given element.</summary>
			<returns>The <see cref="T:System.Uri"></see> of element.</returns>
			<param name="element">The element from which to get the property.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.GetRight(System.Windows.UIElement)">
			<summary>Returns the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the right side of an element and the right side of its parent canvas.</returns>
			<param name="element">The element from which to get the right offset.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.GetTop(System.Windows.UIElement)">
			<summary>Returns the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the top of an element and the top of its parent canvas.</returns>
			<param name="element">The element from which to get the top offset.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.SetBottom(System.Windows.UIElement,System.Double)">
			<summary>Sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<param name="element">The element on which to set the bottom offset.</param>
			<param name="length">The new distance between the bottom side of the element and the bottom side of its parent canvas.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.SetLeft(System.Windows.UIElement,System.Double)">
			<summary>Sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<param name="element">The element on which to set the left offset.</param>
			<param name="length">The new distance between the left side of the element and the left side of its parent canvas.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.SetNavigateUri(System.Windows.UIElement,System.Uri)">
			<summary>Sets the uniform resource identifier (URI) to navigate to when a hyperlink is clicked.</summary>
			<param name="uri">The URI to navigate to when a hyperlink is clicked.</param>
			<param name="element">The element on which to set the URI offset.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.SetRight(System.Windows.UIElement,System.Double)">
			<summary>Sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<param name="element">The element on which to set the right offset.</param>
			<param name="length">The new distance between the right side of the element and the right side of its parent canvas.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.SetTop(System.Windows.UIElement,System.Double)">
			<summary>Sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<param name="element">The element on which to set the top offset.</param>
			<param name="length">The new distance between the top side of the element and the top side of its parent canvas.</param>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="M:System.Windows.Documents.FixedPage.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.Background">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> used for rendering the page background. </summary>
			<returns>The brush for rendering the page background.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.BleedBox">
			<summary>Gets or sets a rectangle defining the overflow area for bleeds, registration marks, and crop marks.</summary>
			<returns>The <see cref="T:System.Windows.Rect"></see> defining the overflow area.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.Children">
			<summary>Gets a collection of the <see cref="T:System.Windows.Documents.FixedPage"></see> child elements. </summary>
			<returns>The <see cref="T:System.Windows.Controls.UIElementCollection"></see> of the child elements.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.ContentBox">
			<summary>Gets or sets the bounding rectangle of the content area; that is, the area of the page within the margins, if any.</summary>
			<returns>The <see cref="T:System.Windows.Rect"></see> that defines the content area.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.PrintTicket">
			<summary>Gets or sets the <see cref="T:System.Printing.PrintTicket"></see> that is associated with the page.</summary>
			<returns>The <see cref="T:System.Printing.PrintTicket"></see> for the page.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.Bottom">
			<summary>Gets or sets the distance between the bottom of the page and the bottom of the parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the bottom of the page and the bottom of the parent canvas.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.Left">
			<summary>Gets or sets the distance between the left edge of the page and the left edge of the parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the left edge of the page and the left edge of the parent canvas.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.NavigateUri">
			<summary>Gets or sets the URI associated with the page.</summary>
			<returns>The uniform resource identifier (URI) associated with the <see cref="T:System.Windows.Documents.FixedPage"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.Right">
			<summary>Gets or sets the distance between the right edge of the page and the right edge of the parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the right edge of the page and the right edge of the parent canvas.</returns>
		</member>
		<member name="P:System.Windows.Documents.FixedPage.Top">
			<summary>Gets or sets the distance between the top of the page and the top of the parent <see cref="T:System.Windows.Controls.Canvas"></see>.</summary>
			<returns>The distance between the top of the page and the top of the parent canvas.</returns>
		</member>
		<member name="T:System.Windows.Documents.Floater">
			<summary>Provides an inline-level flow content element used to host a floater. A floater displays images and other content parallel to the main content flow in a <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.Floater.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater"></see> class with the specified <see cref="T:System.Windows.Documents.Block"></see> object as its initial content.</summary>
			<param name="childBlock">The initial content of the new <see cref="T:System.Windows.Documents.Floater"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Floater.#ctor(System.Windows.Documents.Block,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Floater"></see> class with the specified <see cref="T:System.Windows.Documents.Block"></see> object as its initial content, and a <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Floater"></see>.</summary>
			<param name="insertionPosition">The position at which to insert the <see cref="T:System.Windows.Documents.Floater"></see> element after it is created.</param>
			<param name="childBlock">The initial content of the new <see cref="T:System.Windows.Documents.Floater"></see>. This parameter can be null, in which case no <see cref="T:System.Windows.Documents.Block"></see> is inserted.</param>
		</member>
		<member name="F:System.Windows.Documents.Floater.HorizontalAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Floater.HorizontalAlignment"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Floater.WidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Floater.Width"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Floater.Width"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Documents.Floater.HorizontalAlignment">
			<summary>Gets or sets a value that indicates the horizontal alignment for a <see cref="T:System.Windows.Documents.Floater"></see> object. This is a dependency property.</summary>
			<returns>A member of the <see cref="T:System.Windows.HorizontalAlignment"></see> enumeration specifying the horizontal alignment for the <see cref="T:System.Windows.Documents.Floater"></see>. The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Floater.Width">
			<summary>Gets or sets a value that indicates the width of a <see cref="T:System.Windows.Documents.Floater"></see> object. This is a dependency property.</summary>
			<returns>The width of the <see cref="T:System.Windows.Documents.Floater"></see>, in device independent pixels. The default value is <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of Auto), which indicates that the line height is determined automatically. </returns>
		</member>
		<member name="T:System.Windows.Documents.FlowDocument">
			<summary>Hosts and formats flow content with advanced document features, such as pagination and columns.</summary>
		</member>
		<member name="M:System.Windows.Documents.FlowDocument.#ctor">
			<summary>Initializes a new, empty instance of the FlowDocument class.</summary>
		</member>
		<member name="M:System.Windows.Documents.FlowDocument.#ctor(System.Windows.Documents.Block)">
			<summary>Initializes a new instance of the FlowDocument class, adding a specified <see cref="T:System.Windows.Documents.Block"></see> element as the initial content. </summary>
			<param name="block">An object deriving from the abstract <see cref="T:System.Windows.Documents.Block"></see> class, to be added as the initial content.</param>
			<exception cref="T:System.ArgumentNullException">Raised if block is null.</exception>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.Background"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.ColumnGapProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnGap"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.ColumnRuleBrushProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.ColumnRuleWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.ColumnWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.FlowDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FlowDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.FontFamilyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontFamily"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontFamily"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.FontSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontSize"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontSize"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.FontStretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontStretch"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontStretch"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.FontStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontStyle"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.FontWeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.FontWeight"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.FontWeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.ForegroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.Foreground"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.Foreground"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.IsColumnWidthFlexibleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.IsHyphenationEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabledProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.LineHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.LineStackingStrategyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.LineStackingStrategy"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.MaxPageHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.MaxPageWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MaxPageWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.MinPageHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MinPageHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.MinPageWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.MinPageWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.PageHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PageHeight"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.PageHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.PagePaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PagePadding"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.PagePadding"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.PageWidthProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.PageWidth"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.PageWidth"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.TextAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.TextAlignment"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.FlowDocument.TextEffectsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.FlowDocument.TextEffects"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.FlowDocument.TextEffects"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.FlowDocument.OnCreateAutomationPeer">
			<summary>A protected method that <see cref="T:System.Windows.Documents.FlowDocument"></see> subclasses should implement in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementations to the Windows Presentation Foundation (WPF) infrastructure.</summary>
			<returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementation.</returns>
		</member>
		<member name="M:System.Windows.Documents.FlowDocument.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Called when one or more of the dependency properties that exist on the element have had their effective values changed.</summary>
			<param name="e">Arguments for the associated event.</param>
		</member>
		<member name="M:System.Windows.Documents.FlowDocument.System.IServiceProvider.GetService(System.Type)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>null</returns>
		</member>
		<member name="M:System.Windows.Documents.FlowDocument.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Documents.FlowDocument.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.Background">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> used to fill the background of content area.</summary>
			<returns>The brush used to fill the background of the content area, or null not to use a background brush.The default is a null brush.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.Blocks">
			<summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the top-level <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.FlowDocument"></see>.  This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.ColumnGap">
			<summary>Gets or sets the column gap value, which indicates the spacing between columns in a <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>A double value indicating the column gap, in device independent pixels.  Getting this property returns the current column gap.  Setting this value changes the currently effective column gap, and may cause content to reflow.A value of <see cref="F:System.Double.NaN"></see>, (equivalent to an attribute value of "Auto") causes the effective spacing between columns to be set to the current value of the <see cref="P:System.Windows.Documents.FlowDocument.LineHeight"></see> property.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.ColumnRuleBrush">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> used to draw the rule between columns.</summary>
			<returns>A <see cref="T:System.Windows.Media.Brush"></see> to use when drawing the rule line between columns, or null to not use a background brush.The default value of this property is null.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.ColumnRuleWidth">
			<summary>Gets or sets a the column rule width.</summary>
			<returns>A value specifying the column rule width, in device independent pixels. The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.ColumnWidth">
			<summary>Gets or sets the minimum desired width of the columns within a <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>A value specifying the minimum desired column width, in device independent pixels.  A value of <see cref="F:System.Double.NaN"></see> causes only one column to be displayed, regardless of the page width.  The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.ContentEnd">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> that represents the end of the content within a FlowDocument.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> representing the end of the contents in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.ContentStart">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> that represents the start of content within a FlowDocument.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointerContext"></see> representing the start of the contents in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.FlowDirection">
			<summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.FlowDirection"></see> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.FlowDocument"></see> to re-flow in the indicated direction.The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.FontFamily">
			<summary>Gets or sets the preferred top-level font family for the FlowDocument.</summary>
			<returns>A <see cref="T:System.Windows.Media.FontFamily"></see> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families.The default value is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.FontSize">
			<summary>Gets or sets the top-level font size for the FlowDocument.</summary>
			<returns>A double value specifying the desired font size to use in points (1 point = 1/72 of an inch = 96/72 )).  The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontSize"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.FontStretch">
			<summary>Gets or sets the top-level font-stretching characteristics for the FlowDocument.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontStretch"></see> class specifying the desired font-stretching characteristics to use.The default value is <see cref="P:System.Windows.FontStretches.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.FontStyle">
			<summary>Gets or sets the top-level font style for the FlowDocument.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontStyles"></see> class specifying the desired font style.The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.FontWeight">
			<summary>Gets or sets the top-level font weight for the FlowDocument.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontWeights"></see> class specifying the desired font weight.The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.Foreground">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> to apply to the text contents of the FlowDocument.</summary>
			<returns>The brush used to apply to the text contents.The default is <see cref="P:System.Windows.Media.Brushes.Black"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.IsColumnWidthFlexible">
			<summary>Gets or sets a value that indicates whether the <see cref="P:System.Windows.Documents.FlowDocument.ColumnWidth"></see> value is flexible or fixed.</summary>
			<returns>true to indicate that the column width is flexible; false to indicate that the column width is fixed.The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.IsEnabledCore">
			<summary>Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled"></see> property for the <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>The value of the <see cref="P:System.Windows.ContentElement.IsEnabled"></see> property for the <see cref="T:System.Windows.Documents.FlowDocument"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.IsHyphenationEnabled">
			<summary>Gets or sets a value that indicates whether automatic hyphenation of words is enabled or disabled.</summary>
			<returns>true to indicate that automatic breaking and hyphenation of words is enabled; false otherwise.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.IsOptimalParagraphEnabled">
			<summary>Gets or sets a value that indicates whether optimal paragraph layout is enabled or disabled.</summary>
			<returns>true to indicate that optimal paragraph layout is enabled; false otherwise.The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.LineHeight">
			<summary>Gets or sets the height of each line of content.</summary>
			<returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.FlowDocument.LineHeight"></see> must be equal to or greater than 0.0034 and equal to or less then 160000.A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the line height to be determined automatically from the current font characteristics.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> to a non-positive value.</exception>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.LineStackingStrategy">
			<summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.FlowDocument"></see>. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of the FlowDocument.</summary>
			<returns>An enumerator for the logical children.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.MaxPageHeight">
			<summary>Gets or sets the maximum height for pages in a FlowDocument.</summary>
			<returns>A double value indicating the maximum height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.The default value is <see cref="F:System.Double.PositiveInfinity"></see> (no maximum page height).</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.MaxPageWidth">
			<summary>Gets or sets the maximum width for pages in a FlowDocument.</summary>
			<returns>A double value indicating the maximum width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.The default value is <see cref="F:System.Double.PositiveInfinity"></see> (no maximum page width).</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.MinPageHeight">
			<summary>Gets or sets the minimum height for pages in a FlowDocument.</summary>
			<returns>A double value indicating the minimum height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.MinPageWidth">
			<summary>Gets or sets the minimum width for pages in a FlowDocument.</summary>
			<returns>A double value indicating the minimum width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.The default value is zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.PageHeight">
			<summary>Gets or sets the preferred height for pages in a FlowDocument.</summary>
			<returns>A double value indicating the preferred height, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the page height to be determined automatically.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.PagePadding">
			<summary>Gets or sets a value that indicates the thickness of padding space between the boundaries of a page and the page's content.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of padding to apply, in device independent pixels.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.PageWidth">
			<summary>Gets or sets the preferred width for pages in a FlowDocument.</summary>
			<returns>A double value indicating the preferred width, in device independent pixels, for pages in the <see cref="T:System.Windows.Documents.FlowDocument"></see>.A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the page width to be determined automatically.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.TextAlignment">
			<summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextAlignment"></see> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.TextEffects">
			<summary>Gets or sets a collection of text effects that contains the effects to apply to the text of a <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Media.TextEffectCollection"></see> containing one or more <see cref="T:System.Windows.Media.TextEffect"></see> objects that define effects to apply to the text of the <see cref="T:System.Windows.Documents.FlowDocument"></see>.The default value is null (no effects applied).</returns>
		</member>
		<member name="P:System.Windows.Documents.FlowDocument.Typography">
			<summary>Gets the currently effective typography variations for the text contents of the <see cref="T:System.Windows.Documents.FlowDocument"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.Typography"></see> object that specifies the currently effective typography variations.For a list of default typography values, see the <see cref="T:System.Windows.Documents.Typography"></see> class page.</returns>
		</member>
		<member name="T:System.Windows.Documents.FrameworkRichTextComposition">
			<summary>  Represents a composition related to text input. You can use this class to find the text position of the composition or the result string.</summary>
		</member>
		<member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionEnd">
			<summary> Gets the end position of the current composition text. </summary>
			<returns>The end position of the current composition text.</returns>
		</member>
		<member name="P:System.Windows.Documents.FrameworkRichTextComposition.CompositionStart">
			<summary> Gets the start position of the current composition text. </summary>
			<returns>The start position of the current composition text.</returns>
		</member>
		<member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultEnd">
			<summary> Gets the end position of the result text of the text input. </summary>
			<returns>The end position of the result text of the text input.</returns>
		</member>
		<member name="P:System.Windows.Documents.FrameworkRichTextComposition.ResultStart">
			<summary> Gets the start position of the result text of the text input. </summary>
			<returns>The start position of the result text of the text input.</returns>
		</member>
		<member name="T:System.Windows.Documents.FrameworkTextComposition">
			<summary>Provides input-text/composition event promotion. This class is used for the simple <see cref="T:System.Windows.Controls.TextBox"></see> control that does not expose <see cref="T:System.Windows.Documents.TextRange"></see>.</summary>
		</member>
		<member name="T:System.Windows.Documents.GetPageRootCompletedEventArgs">
			<summary> Provides data for the GetPageRootCompleted event. </summary>
		</member>
		<member name="P:System.Windows.Documents.GetPageRootCompletedEventArgs.Result">
			<summary> Gets the FixedPage content asynchronously requested by GetPageRootAsync. </summary>
			<returns>The root element of the visual tree for the PageContent requested by GetPageRootAsync.</returns>
		</member>
		<member name="T:System.Windows.Documents.GetPageRootCompletedEventHandler">
			<summary> Represents the method that will handle the GetPageRootCompleted event of the PageContent class. </summary>
		</member>
		<member name="T:System.Windows.Documents.Glyphs">
			<summary>Represents the set of glyphs that are used for rendering fixed text. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Documents.Glyphs.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Glyphs"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.BidiLevelProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.BidiLevel"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.CaretStopsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.CaretStops"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.DeviceFontNameProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.DeviceFontName"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.FillProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Fill"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.FontRenderingEmSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontRenderingEmSize"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.FontUriProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.FontUri"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.IndicesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.Indices"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.IsSidewaysProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.IsSideways"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.OriginXProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginX"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.OriginYProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.OriginY"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.StyleSimulationsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.StyleSimulations"></see> dependency property. </summary>
		</member>
		<member name="F:System.Windows.Documents.Glyphs.UnicodeStringProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Glyphs.UnicodeString"></see> dependency property. </summary>
		</member>
		<member name="M:System.Windows.Documents.Glyphs.ToGlyphRun">
			<summary>Creates a <see cref="T:System.Windows.Media.GlyphRun"></see> from the properties of the <see cref="T:System.Windows.Documents.Glyphs"></see> object.</summary>
			<returns>A value of type <see cref="T:System.Windows.Media.GlyphRun"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.BidiLevel">
			<summary>Gets or sets the bidirectional nesting level of <see cref="T:System.Windows.Documents.Glyphs"></see>.</summary>
			<returns>An <see cref="T:System.Int32"></see> value that represents the bidirectional nesting level.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.CaretStops">
			<summary>Gets or sets the caret stops that correspond to the code points in the Unicode string representing the <see cref="T:System.Windows.Documents.Glyphs"></see>.</summary>
			<returns>A value of type <see cref="T:System.String"></see> that represents whether the code points have caret stops.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.DeviceFontName">
			<summary>Gets or sets the specific device font for which the <see cref="T:System.Windows.Documents.Glyphs"></see> object has been optimized.</summary>
			<returns>A <see cref="T:System.String"></see> value that represents the name of the device font.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.Fill">
			<summary>Gets the sets the <see cref="T:System.Windows.Media.Brush"></see> that is used for the fill of the <see cref="T:System.Windows.Documents.Glyphs"></see> class.</summary>
			<returns>A value of type <see cref="T:System.Windows.Media.Brush"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.FontRenderingEmSize">
			<summary>Gets or sets the em size used for rendering the <see cref="T:System.Windows.Documents.Glyphs"></see> class.</summary>
			<returns>A <see cref="T:System.Double"></see> value that represents the em size used for rendering.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.FontUri">
			<summary>Gets or sets the <see cref="T:System.Uri"></see> that represents the location of the font used for rendering the <see cref="T:System.Windows.Documents.Glyphs"></see> class.</summary>
			<returns>A value of type <see cref="T:System.Uri"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.Indices">
			<summary>Gets or sets the glyph indices that represent the <see cref="T:System.Windows.Documents.Glyphs"></see> object.</summary>
			<returns>A value of type <see cref="T:System.String"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.IsSideways">
			<summary>Determines whether to rotate the <see cref="T:System.Windows.Documents.Glyphs"></see> object.</summary>
			<returns>true if the glyphs that make up the <see cref="T:System.Windows.Documents.Glyphs"></see> object are rotated 90° counter-clockwise; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.OriginX">
			<summary>Gets or sets the value of the x origin for the <see cref="T:System.Windows.Documents.Glyphs"></see> object.</summary>
			<returns>A value of type <see cref="T:System.Double"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.OriginY">
			<summary>Gets or sets the value of the x origin for the <see cref="T:System.Windows.Documents.Glyphs"></see> object.</summary>
			<returns>A value of type <see cref="T:System.Double"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.StyleSimulations">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.StyleSimulations"></see> for the <see cref="T:System.Windows.Documents.Glyphs"></see> class.</summary>
			<returns>A value of type <see cref="T:System.Windows.Media.StyleSimulations"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Glyphs.UnicodeString">
			<summary>Gets or sets the <see cref="T:System.String"></see> that represents the Unicode string for the <see cref="T:System.Windows.Documents.Glyphs"></see> object.</summary>
			<returns>A value of type <see cref="T:System.String"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Hyperlink">
			<summary>An inline-level flow content element that provides facilities for hosting hyperlinks within flow content.</summary>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.Hyperlink"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
			<param name="childInline">An <see cref="T:System.Windows.Documents.Inline"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink"></see>, and a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
			<param name="childInline">An <see cref="T:System.Windows.Documents.Inline"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Hyperlink"></see>.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline"></see> is inserted.</param>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Hyperlink"></see> element after it is created, or null for no automatic insertion.</param>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Hyperlink"></see> class, taking two <see cref="T:System.Windows.Documents.TextPointer"></see> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
			<param name="end">A <see cref="T:System.Windows.Documents.TextPointer"></see> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink"></see>.</param>
			<param name="start">A <see cref="T:System.Windows.Documents.TextPointer"></see> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Hyperlink"></see>.</param>
			<exception cref="T:System.ArgumentNullException">Raised when start or end is null.</exception>
			<exception cref="T:System.ArgumentException">Raised when start and end do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Span"></see> element, for example, if start and end indicate positions in different paragraphs.</exception>
		</member>
		<member name="E:System.Windows.Documents.Hyperlink.Click">
			<summary>Occurs when the left mouse button is clicked on a <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
		</member>
		<member name="E:System.Windows.Documents.Hyperlink.RequestNavigate">
			<summary>Occurs when navigation events are requested.</summary>
		</member>
		<member name="F:System.Windows.Documents.Hyperlink.ClickEvent">
			<summary>Identifies the <see cref="E:System.Windows.Documents.Hyperlink.Click"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Documents.Hyperlink.Click"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Documents.Hyperlink.CommandParameterProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.CommandParameter"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Hyperlink.CommandProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.Command"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.Command"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Hyperlink.CommandTargetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.CommandTarget"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Hyperlink.NavigateUriProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.NavigateUri"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Hyperlink.RequestNavigateEvent">
			<summary>Identifies the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate"></see> routed event.</summary>
			<returns>The identifier for the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate"></see> routed event.</returns>
		</member>
		<member name="F:System.Windows.Documents.Hyperlink.TargetNameProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Hyperlink.TargetName"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Hyperlink.TargetName"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.DoClick">
			<summary>Simulates the act of a user clicking the <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.OnClick">
			<summary>Handles the <see cref="E:System.Windows.Documents.Hyperlink.Click"></see> routed event.</summary>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Documents.Hyperlink"></see>.</returns>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.ContentElement.KeyDown"></see> routed event.</summary>
			<param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.KeyDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.ContentElement.MouseEnter"></see> routed event.</summary>
			<param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseEnter"></see> event.</param>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.ContentElement.MouseLeave"></see> routed event.</summary>
			<param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseLeave"></see> event.</param>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown"></see> routed event.</summary>
			<param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown"></see> event.</param>
		</member>
		<member name="M:System.Windows.Documents.Hyperlink.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
			<summary>Handles the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp"></see> routed event.</summary>
			<param name="e">Arguments associated with the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp"></see> event.</param>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.BaseUri">
			<summary>Gets or sets a base URI for the <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.Command">
			<summary>Gets or sets a command to associate with the <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
			<returns>A command to associate with the <see cref="T:System.Windows.Documents.Hyperlink"></see>.The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.CommandParameter">
			<summary>Gets or sets command parameters associated with the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command"></see> property.</summary>
			<returns>An object specifying parameters for the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command"></see> property.The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.CommandTarget">
			<summary>Gets or sets a target element on which to execute the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command"></see> property.</summary>
			<returns>A target element on which to execute the command specified by the <see cref="P:System.Windows.Documents.Hyperlink.Command"></see> property.The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.IsEnabledCore">
			<summary>Gets a value that indicates whether or not the <see cref="T:System.Windows.Documents.Hyperlink"></see> is enabled.</summary>
			<returns>true if the <see cref="T:System.Windows.Documents.Hyperlink"></see> is enabled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.NavigateUri">
			<summary>Gets or sets a URI to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink"></see> is activated.</summary>
			<returns>The <see cref="T:System.Uri"></see> to navigate to when the <see cref="T:System.Windows.Documents.Hyperlink"></see> is activated.The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.System.Windows.Markup.IUriContext.BaseUri">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Documents.Hyperlink.TargetName">
			<summary>Gets or sets the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink"></see>.</summary>
			<returns>A string specifying the name of a target window or frame for the <see cref="T:System.Windows.Documents.Hyperlink"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Inline">
			<summary>An abstract class that provides a base for all inline flow content elements.</summary>
		</member>
		<member name="M:System.Windows.Documents.Inline.#ctor">
			<summary>Initializes base class values when called by a derived class.</summary>
		</member>
		<member name="F:System.Windows.Documents.Inline.BaselineAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Inline.BaselineAlignment"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Inline.BaselineAlignment"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Inline.FlowDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Inline.FlowDirection"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Inline.FlowDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Inline.TextDecorationsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Inline.TextDecorations"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Inline.TextDecorations"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Documents.Inline.BaselineAlignment">
			<summary>Gets or sets the baseline alignment for the <see cref="T:System.Windows.Documents.Inline"></see> element.</summary>
			<returns>A member or the <see cref="T:System.Windows.BaselineAlignment"></see> enumeration specifying the baseline alignment for the <see cref="T:System.Windows.Documents.Inline"></see> element.The default value is <see cref="T:System.Windows.BaselineAlignment"></see>.Baseline.</returns>
		</member>
		<member name="P:System.Windows.Documents.Inline.FlowDirection">
			<summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.Inline"></see> element.</summary>
			<returns>A member of the <see cref="T:System.Windows.FlowDirection"></see> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.Inline"></see> element to re-flow in the indicated direction.The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Inline.NextInline">
			<summary>Gets the next <see cref="T:System.Windows.Documents.Inline"></see> element that is a peer to this element.</summary>
			<returns>An <see cref="T:System.Windows.Documents.Inline"></see> object representing the next <see cref="T:System.Windows.Documents.Inline"></see> element that is a peer to this element, or null if there is no next <see cref="T:System.Windows.Documents.Inline"></see> element.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Inline.PreviousInline">
			<summary>Gets the previous <see cref="T:System.Windows.Documents.Inline"></see> element that is a peer to this element.</summary>
			<returns>An <see cref="T:System.Windows.Documents.Inline"></see> object representing the previous <see cref="T:System.Windows.Documents.Inline"></see> element that is a peer to this element, or null if there is no previous <see cref="T:System.Windows.Documents.Inline"></see> element.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Inline.SiblingInlines">
			<summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection"></see> that contains the <see cref="T:System.Windows.Documents.Inline"></see> elements that are siblings (peers) to this element.</summary>
			<returns>An <see cref="T:System.Windows.Documents.InlineCollection"></see> object that contains the <see cref="T:System.Windows.Documents.Inline"></see> elements that are siblings to this element.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Inline.TextDecorations">
			<summary>Gets a <see cref="T:System.Windows.TextDecorationCollection"></see> that contains text decorations to apply to this element.</summary>
			<returns>A <see cref="T:System.Windows.TextDecorationCollection"></see> collection that contains text decorations to apply to this element.The default value is null (no text decorations applied).</returns>
		</member>
		<member name="T:System.Windows.Documents.InlineCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Documents.Inline"></see> elements. <see cref="T:System.Windows.Documents.InlineCollection"></see> defines the allowable child content of the <see cref="T:System.Windows.Documents.Paragraph"></see>, <see cref="T:System.Windows.Documents.Span"></see>, and <see cref="T:System.Windows.Controls.TextBlock"></see> elements. </summary>
		</member>
		<member name="T:System.Windows.Documents.InlineUIContainer">
			<summary>An inline-level flow content element which enables <see cref="T:System.Windows.UIElement"></see> elements (i.e. a <see cref="T:System.Windows.Controls.Button"></see>) to be embedded (hosted) in flow content.</summary>
		</member>
		<member name="M:System.Windows.Documents.InlineUIContainer.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.InlineUIContainer"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.InlineUIContainer"></see> class, taking a specified <see cref="T:System.Windows.UIElement"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer"></see>.</summary>
			<param name="childUIElement">An <see cref="T:System.Windows.UIElement"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.InlineUIContainer.#ctor(System.Windows.UIElement,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.InlineUIContainer"></see> class, taking a specified <see cref="T:System.Windows.UIElement"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer"></see>, and a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position for the new <see cref="T:System.Windows.Documents.InlineUIContainer"></see> element.</summary>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.InlineUIContainer"></see> element after it is created, or null for no automatic insertion.</param>
			<param name="childUIElement">A <see cref="T:System.Windows.UIElement"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.InlineUIContainer"></see>.  This parameter may be null, in which case no <see cref="T:System.Windows.UIElement"></see> is inserted.</param>
		</member>
		<member name="P:System.Windows.Documents.InlineUIContainer.Child">
			<summary>Gets or sets the <see cref="T:System.Windows.UIElement"></see> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer"></see>.</summary>
			<returns>The <see cref="T:System.Windows.UIElement"></see> hosted by the <see cref="T:System.Windows.Documents.InlineUIContainer"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Italic">
			<summary>Provides an inline-level flow content element that causes content to render with an italic font style.</summary>
		</member>
		<member name="M:System.Windows.Documents.Italic.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic"></see> class with the specified <see cref="T:System.Windows.Documents.Inline"></see> object as its initial content.</summary>
			<param name="childInline">The initial content of the new <see cref="T:System.Windows.Documents.Italic"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic"></see> class with the specified <see cref="T:System.Windows.Documents.Inline"></see> object as its initial content, and a <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Inline"></see> element.</summary>
			<param name="childInline">The initial content. This parameter can be null, in which case no <see cref="T:System.Windows.Documents.Inline"></see> is inserted.</param>
			<param name="insertionPosition">The insertion position at which to insert the <see cref="T:System.Windows.Documents.Italic"></see> element after it is created.</param>
		</member>
		<member name="M:System.Windows.Documents.Italic.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Italic"></see> class with the specified <see cref="T:System.Windows.Documents.TextPointer"></see> objects that indicate the beginning and end of a content selection that the new <see cref="T:System.Windows.Documents.Italic"></see> will contain.</summary>
			<param name="end">The end of a selection of content that the new <see cref="T:System.Windows.Documents.Italic"></see> will contain.</param>
			<param name="start">The beginning of a selection of content that the new <see cref="T:System.Windows.Documents.Italic"></see> will contain.</param>
			<exception cref="T:System.ArgumentException">start and end do not resolve to a range of content suitable for enclosure by an <see cref="T:System.Windows.Documents.Italic"></see> element; for example, if start and end indicate positions in different paragraphs.</exception>
			<exception cref="T:System.ArgumentNullException">start or end is null.</exception>
		</member>
		<member name="T:System.Windows.Documents.LineBreak">
			<summary>An inline flow content element that causes a line break to occur in flow content.</summary>
		</member>
		<member name="M:System.Windows.Documents.LineBreak.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.LineBreak"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.LineBreak.#ctor(System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LineBreak"></see> class, and inserts the new <see cref="T:System.Windows.Documents.LineBreak"></see> at a specified position.</summary>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.LineBreak"></see> element after it is created, or null for no automatic insertion.</param>
		</member>
		<member name="T:System.Windows.Documents.LinkTarget">
			<summary>Represents an element on a page that can be linked to from other documents or other places in the same document. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Documents.LinkTarget.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LinkTarget"></see> class. </summary>
		</member>
		<member name="P:System.Windows.Documents.LinkTarget.Name">
			<summary>Gets or sets the name of the element that this <see cref="T:System.Windows.Documents.LinkTarget"></see> identifies as a linkable element.</summary>
			<returns>A <see cref="T:System.String"></see> that is identical to the <see cref="P:System.Windows.FrameworkElement.Name"></see> property of the markup element that corresponds to this <see cref="T:System.Windows.Documents.LinkTarget"></see> element.</returns>
		</member>
		<member name="T:System.Windows.Documents.LinkTargetCollection">
			<summary>Provides a collection of all of the <see cref="T:System.Windows.Documents.LinkTarget"></see> elements in a <see cref="T:System.IO.Packaging.Package"></see>. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Documents.LinkTargetCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.LinkTargetCollection"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.LinkTargetCollection.Add(System.Windows.Documents.LinkTarget)">
			<summary>Adds a specified <see cref="T:System.Windows.Documents.LinkTarget"></see> to the collection.</summary>
			<returns>The zero-based index in the collection of the value added.</returns>
			<param name="value">The link target that is added.</param>
		</member>
		<member name="M:System.Windows.Documents.LinkTargetCollection.Contains(System.Windows.Documents.LinkTarget)">
			<summary>Specifies a value that indicates whether a particular <see cref="T:System.Windows.Documents.LinkTarget"></see> is in the collection.</summary>
			<returns>true if value is present; otherwise, false.</returns>
			<param name="value">The link to test for.</param>
		</member>
		<member name="M:System.Windows.Documents.LinkTargetCollection.CopyTo(System.Windows.Documents.LinkTarget[],System.Int32)">
			<summary>Copies the items in the collection to the specified array beginning at the specified index.</summary>
			<param name="array">The target array.</param>
			<param name="index">The zero-based index of the array position where the first item is copied. </param>
		</member>
		<member name="M:System.Windows.Documents.LinkTargetCollection.IndexOf(System.Windows.Documents.LinkTarget)">
			<summary>Gets the index of the specified item.</summary>
			<returns>The index of value if found in the collection; otherwise, -1.</returns>
			<param name="value">The object to locate in the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.LinkTargetCollection.Insert(System.Int32,System.Windows.Documents.LinkTarget)">
			<summary>Inserts the specified item into the collection at the specified index.</summary>
			<param name="value">The target to insert.</param>
			<param name="index">The point where the link target is inserted.</param>
		</member>
		<member name="M:System.Windows.Documents.LinkTargetCollection.Remove(System.Windows.Documents.LinkTarget)">
			<summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"></see>.</summary>
			<param name="value">The link target to remove.</param>
		</member>
		<member name="P:System.Windows.Documents.LinkTargetCollection.Item(System.Int32)">
			<summary>Gets or sets the <see cref="T:System.Windows.Documents.LinkTarget"></see> at the specified index.</summary>
			<returns>A <see cref="T:System.Windows.Documents.LinkTarget"></see>.</returns>
			<param name="index">The index of the target being written or read.</param>
		</member>
		<member name="T:System.Windows.Documents.List">
			<summary>A block-level flow content element that provides facilities for presenting content in an ordered or unordered list.</summary>
		</member>
		<member name="M:System.Windows.Documents.List.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.List"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.List.#ctor(System.Windows.Documents.ListItem)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.List"></see> class, taking a specified <see cref="T:System.Windows.Documents.ListItem"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.List"></see>.</summary>
			<param name="listItem">A <see cref="T:System.Windows.Documents.ListItem"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.List"></see>.</param>
		</member>
		<member name="F:System.Windows.Documents.List.MarkerOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.List.MarkerOffset"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.List.MarkerOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.List.MarkerStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.List.MarkerStyle"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.List.MarkerStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.List.StartIndexProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.List.StartIndex"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.List.StartIndex"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Documents.List.ListItems">
			<summary>Gets a <see cref="T:System.Windows.Documents.ListItemCollection"></see> containing the <see cref="T:System.Windows.Documents.ListItem"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.List"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.ListItemCollection"></see> containing the <see cref="T:System.Windows.Documents.ListItem"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.List"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.List.MarkerOffset">
			<summary>Gets or sets the desired distance between the contents of each <see cref="T:System.Windows.Documents.ListItem"></see> element, and the near edge of the list marker.</summary>
			<returns>A double value specifying the desired distance between list content and the near edge of list markers, in device independent pixels.  A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the marker offset to be determined automatically.The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.List.MarkerStyle">
			<summary>Gets or sets the marker style for the <see cref="T:System.Windows.Documents.List"></see>.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextMarkerStyle"></see> enumeration specifying the marker style to use.The default value is <see cref="F:System.Windows.TextMarkerStyle.Disc"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.List.StartIndex">
			<summary>Gets of sets the starting index for labeling the items in an ordered list.</summary>
			<returns>The starting index for labeling items in an ordered list.The default value is 1.</returns>
		</member>
		<member name="T:System.Windows.Documents.ListItem">
			<summary>A flow content element that represents a particular content item in an ordered or unordered <see cref="T:System.Windows.Documents.List"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.ListItem.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.ListItem"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.ListItem.#ctor(System.Windows.Documents.Paragraph)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.ListItem"></see> class, taking a specified <see cref="T:System.Windows.Documents.Paragraph"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.ListItem"></see>.</summary>
			<param name="paragraph">A <see cref="T:System.Windows.Documents.Paragraph"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.ListItem"></see>.</param>
		</member>
		<member name="F:System.Windows.Documents.ListItem.BorderBrushProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderBrush"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.BorderBrush"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.ListItem.BorderThicknessProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.BorderThickness"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.BorderThickness"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.ListItem.FlowDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.FlowDirection"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.FlowDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.ListItem.LineHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.LineHeight"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.LineHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.ListItem.LineStackingStrategyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.LineStackingStrategy"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.ListItem.MarginProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.Margin"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.Margin"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.ListItem.PaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.Padding"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.Padding"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.ListItem.TextAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.ListItem.TextAlignment"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.ListItem.TextAlignment"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.ListItem.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.ListItem.Blocks"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.ListItem"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Documents.ListItem.Blocks"></see> property should be serialized; otherwise, false.</returns>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.NullReferenceException">Raised when manager is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.ListItem.Blocks">
			<summary>Gets a block collection containing the top-level <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.ListItem"></see>.</summary>
			<returns>A block collection containing the <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.ListItem"></see>This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.BorderBrush">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Brush"></see> to use when painting the element's border.</summary>
			<returns>The brush used to apply to the element's border.The default value is a null brush.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.BorderThickness">
			<summary>Gets or sets the border thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of border to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.FlowDirection">
			<summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.ListItem"></see> element.</summary>
			<returns>A member of the <see cref="T:System.Windows.FlowDirection"></see> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.ListItem"></see> element to re-flow in the indicated direction.The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.LineHeight">
			<summary>Gets or sets the height of each line of content.</summary>
			<returns>A double value specifying the height of line in device independent pixels with a value equal to or greater than 0.0034 and equal to or less then 160000.  A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the line height to be determined automatically from the current font characteristics.  The default value is <see cref="F:System.Double.NaN"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.LineStackingStrategy">
			<summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem"></see>.</summary>
			<returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.ListItem"></see>. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.List">
			<summary>Gets the <see cref="T:System.Windows.Documents.List"></see> that contains this <see cref="T:System.Windows.Documents.ListItem"></see>.</summary>
			<returns>The list that contains this <see cref="T:System.Windows.Documents.ListItem"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.Margin">
			<summary>Gets or sets the margin thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of margin to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.NextListItem">
			<summary>Gets the next <see cref="T:System.Windows.Documents.ListItem"></see> in the <see cref="T:System.Windows.Documents.List"></see>.</summary>
			<returns>The next <see cref="T:System.Windows.Documents.ListItem"></see> in the <see cref="T:System.Windows.Documents.List"></see>, or null if there is no next <see cref="T:System.Windows.Documents.ListItem"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.Padding">
			<summary>Gets or sets the padding thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of padding to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.PreviousListItem">
			<summary>Gets the previous <see cref="T:System.Windows.Documents.ListItem"></see> in the List.</summary>
			<returns>The previous <see cref="T:System.Windows.Documents.ListItem"></see> in the <see cref="T:System.Windows.Documents.List"></see>, or null if there is no previous <see cref="T:System.Windows.Documents.ListItem"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.SiblingListItems">
			<summary>Gets a <see cref="T:System.Windows.Documents.ListItemCollection"></see> that contains <see cref="T:System.Windows.Documents.ListItem"></see> elements that are siblings to this <see cref="T:System.Windows.Documents.ListItem"></see> element.</summary>
			<returns>A <see cref="T:System.Windows.Documents.ListItemCollection"></see> that contains all of the child <see cref="T:System.Windows.Documents.Block"></see> elements directly hosted by the parent of this Block element, or null if this <see cref="T:System.Windows.Documents.Block"></see> element has no parent.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.ListItem.TextAlignment">
			<summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextAlignment"></see> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.ListItemCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Documents.ListItem"></see> elements. <see cref="T:System.Windows.Documents.ListItemCollection"></see> defines the allowable child content of a <see cref="T:System.Windows.Documents.List"></see> element.</summary>
		</member>
		<member name="T:System.Windows.Documents.LogicalDirection">
			<summary>Specifies a logical direction in which to perform certain text operations, such as inserting, retrieving, or navigating through text relative to a specified position (a <see cref="T:System.Windows.Documents.TextPointer"></see>).</summary>
		</member>
		<member name="F:System.Windows.Documents.LogicalDirection.Backward">
			<summary>Backward, or from right to left.</summary>
		</member>
		<member name="F:System.Windows.Documents.LogicalDirection.Forward">
			<summary>Forward, or from left to right.</summary>
		</member>
		<member name="T:System.Windows.Documents.PageContent">
			<summary>Provides information about the <see cref="T:System.Windows.Documents.FixedPage"></see> elements within a <see cref="T:System.Windows.Documents.FixedDocument"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.PageContent.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.PageContent"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Documents.PageContent.GetPageRootCompleted">
			<summary>Occurs when <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)"></see> has completed.</summary>
		</member>
		<member name="F:System.Windows.Documents.PageContent.SourceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.PageContent.Source"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.PageContent.Source"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.PageContent.GetPageRoot(System.Boolean)">
			<summary>Loads and returns the <see cref="T:System.Windows.Documents.FixedPage"></see> content element. </summary>
			<returns>The root element of the visual tree for this page.</returns>
			<param name="forceReload">true to always reload the <see cref="T:System.Windows.Documents.FixedPage"></see> even if it has been previously loaded and cached; false to load the <see cref="T:System.Windows.Documents.FixedPage"></see> only if there is no cached version.</param>
		</member>
		<member name="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)">
			<summary>Asynchronously loads and returns the <see cref="T:System.Windows.Documents.FixedPage"></see> content element. </summary>
			<param name="forceReload">true to always reload the <see cref="T:System.Windows.Documents.FixedPage"></see> even if it has been previously loaded and cached; false to load the <see cref="T:System.Windows.Documents.FixedPage"></see> only if there is no cached version.</param>
		</member>
		<member name="M:System.Windows.Documents.PageContent.GetPageRootAsyncCancel">
			<summary>Cancels any current <see cref="M:System.Windows.Documents.PageContent.GetPageRootAsync(System.Boolean)"></see> operation in progress.</summary>
		</member>
		<member name="M:System.Windows.Documents.PageContent.ShouldSerializeChild(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Gets a value indicating whether the value of the <see cref="P:System.Windows.Documents.PageContent.Child"></see> property should be serialized when this <see cref="T:System.Windows.Documents.PageContent"></see> is serialized.</summary>
			<returns>true if manager is not null and it does not have an XmlWriter; otherwise, false. The default is false.</returns>
			<param name="manager">The serialization services provider.</param>
		</member>
		<member name="M:System.Windows.Documents.PageContent.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="M:System.Windows.Documents.PageContent.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="P:System.Windows.Documents.PageContent.Child">
			<summary>Gets the <see cref="T:System.Windows.Documents.FixedPage"></see> associated with this <see cref="T:System.Windows.Documents.PageContent"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Documents.FixedPage"></see> associated with this <see cref="T:System.Windows.Documents.PageContent"></see>, or null when the <see cref="T:System.Windows.Documents.FixedPage"></see> is set by the <see cref="P:System.Windows.Documents.PageContent.Source"></see> property. </returns>
		</member>
		<member name="P:System.Windows.Documents.PageContent.LinkTargets">
			<summary>Gets a collection of <see cref="T:System.Windows.Documents.LinkTarget"></see> elements that identify the hyperlink-addressable locations on the page. </summary>
			<returns>The <see cref="T:System.Windows.Documents.LinkTargetCollection"></see> of <see cref="T:System.Windows.Documents.LinkTarget"></see> elements that identify the hyperlink-addressable locations on the page.</returns>
		</member>
		<member name="P:System.Windows.Documents.PageContent.Source">
			<summary>Gets or sets the uniform resource identifier (URI) to the <see cref="T:System.Windows.Documents.FixedPage"></see> content data stream. </summary>
			<returns>The <see cref="T:System.Uri"></see> of the corresponding <see cref="T:System.Windows.Documents.FixedPage"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.PageContentCollection">
			<summary>Provides collection support for a collection of document pages. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Windows.Documents.PageContentCollection.Add(System.Windows.Documents.PageContent)">
			<summary>Adds a new page to the page collection.</summary>
			<returns>The zero-based index within the collection where the page was added.</returns>
			<param name="newPageContent">The new page to add to the collection. </param>
			<exception cref="T:System.ArgumentNullException">Raised if newPageContent was passed as null.</exception>
			<exception cref="T:System.InvalidOperationException">Raised if the page passed as newPageContent already existed in the collection.</exception>
		</member>
		<member name="M:System.Windows.Documents.PageContentCollection.GetEnumerator">
			<summary>Returns an enumerator for iterating through the page collection. </summary>
			<returns>An enumerator that can be used to iterate through the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.PageContentCollection.Count">
			<summary>Gets the number of elements contained in the page collection.</summary>
			<returns>The number of elements in the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.PageContentCollection.Item(System.Int32)">
			<summary>Gets the <see cref="T:System.Windows.Documents.PageContent"></see> element at the specified index within the collection. </summary>
			<returns>The page content element at the specified index within the collection. </returns>
			<param name="pageIndex">The zero-based index of the page to get. </param>
		</member>
		<member name="T:System.Windows.Documents.Paragraph">
			<summary>A block-level flow content element used to group content into a paragraph.</summary>
		</member>
		<member name="M:System.Windows.Documents.Paragraph.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Paragraph"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.Paragraph.#ctor(System.Windows.Documents.Inline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Paragraph"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as its initial contents.</summary>
			<param name="inline">An <see cref="T:System.Windows.Documents.Inline"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Paragraph"></see>.</param>
		</member>
		<member name="F:System.Windows.Documents.Paragraph.KeepTogetherProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.KeepTogether"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.KeepTogether"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Paragraph.KeepWithNextProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.KeepWithNext"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Paragraph.MinOrphanLinesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.MinOrphanLines"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Paragraph.MinWidowLinesProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.MinWidowLines"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Paragraph.TextDecorationsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.TextDecorations"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.TextDecorations"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.Paragraph.TextIndentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Paragraph.TextIndent"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Paragraph.TextIndent"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.Paragraph.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Indicates whether the <see cref="P:System.Windows.Documents.Paragraph.Inlines"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.NullReferenceException">manager is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.Paragraph.Inlines">
			<summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection"></see> containing the top-level <see cref="T:System.Windows.Documents.Inline"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Paragraph"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Documents.InlineCollection"></see> containing the <see cref="T:System.Windows.Documents.Inline"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Paragraph"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Paragraph.KeepTogether">
			<summary>Gets or sets a value that indicates whether the text of the paragraph may be broken by a page break or column break. This is a dependency property.</summary>
			<returns>true to prevent the text of the paragraph from being broken; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Paragraph.KeepWithNext">
			<summary>Gets or sets a value that indicates whether a break may occur between this paragraph and the next paragraph. This is a dependency property.</summary>
			<returns>true to prevent a break from occurring between this paragraph and the next paragraph; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Paragraph.MinOrphanLines">
			<summary>Gets or sets a value that specifies the minimum number of lines that can be left before the break when a <see cref="T:System.Windows.Documents.Paragraph"></see> is broken by a page break or column break. This is a dependency property.</summary>
			<returns>An integer specifying the minimum number of lines that can be left before the break when a <see cref="T:System.Windows.Documents.Paragraph"></see> is broken by a page break or column break. A value of 0 indicates no minimum.The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.Documents.Paragraph.MinWidowLines">
			<summary>Gets or sets a value that specifies the minimum number of lines that can be placed after the break when a <see cref="T:System.Windows.Documents.Paragraph"></see> is broken by a page break or column break. This is a dependency property.</summary>
			<returns>An integer specifying the minimum number of lines that can be placed after the break when a <see cref="T:System.Windows.Documents.Paragraph"></see> is broken by a page break or column break.  A value of 0 indicates no minimum.The default value is 0.</returns>
		</member>
		<member name="P:System.Windows.Documents.Paragraph.TextDecorations">
			<summary>Gets or sets a <see cref="T:System.Windows.TextDecorationCollection"></see> that contains text decorations to apply to this element. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Windows.TextDecorationCollection"></see> collection that contains text decorations to apply to this element. A value of null means no text decorations will be applied. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Documents.Paragraph.TextIndent">
			<summary>Gets or sets a value that indicates how far to indent the first line of a <see cref="T:System.Windows.Documents.Paragraph"></see>. This is a dependency property.</summary>
			<returns>A double value specifying the amount to indent the first line of the paragraph, in device independent pixels. The default value is 0.</returns>
		</member>
		<member name="T:System.Windows.Documents.Run">
			<summary>An inline-level flow content element intended to contain a run of unformatted text.</summary>
		</member>
		<member name="M:System.Windows.Documents.Run.#ctor">
			<summary>Initializes a new, default instance of the <see cref="T:System.Windows.Documents.Run"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.Run.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Run"></see> class, taking a specified string as the initial contents of the text run.</summary>
			<param name="text">A string specifying the initial contents of the <see cref="T:System.Windows.Documents.Run"></see> object.</param>
		</member>
		<member name="M:System.Windows.Documents.Run.#ctor(System.String,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Run"></see> class, taking a specified string as the initial contents of the text run, and a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position for the text run.</summary>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the text run after it is created, or null for no automatic insertion.</param>
			<param name="text">A string specifying the initial contents of the <see cref="T:System.Windows.Documents.Run"></see> object.</param>
		</member>
		<member name="M:System.Windows.Documents.Run.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.Run.Text"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.Run"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Documents.Run.Text"></see> property should be serialized; otherwise, false.</returns>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.NullReferenceException">Raised when manager is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.Run.Text">
			<summary>Gets or sets the unformatted text contents of this text <see cref="T:System.Windows.Documents.Run"></see>.</summary>
			<returns>A string specifying the unformatted text contents of this text <see cref="T:System.Windows.Documents.Run"></see>.The default value is <see cref="F:System.String.Empty"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Section">
			<summary>A block-level flow content element used for grouping other <see cref="T:System.Windows.Documents.Block"></see> elements.</summary>
		</member>
		<member name="M:System.Windows.Documents.Section.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Section"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.Section.#ctor(System.Windows.Documents.Block)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Section"></see> class, taking a specified <see cref="T:System.Windows.Documents.Block"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Section"></see>.</summary>
			<param name="block">A <see cref="T:System.Windows.Documents.Block"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Section"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Section.ShouldSerializeBlocks(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.NullReferenceException">Raised when manager is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.Section.Blocks">
			<summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the top-level <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Section"></see>This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Section.HasTrailingParagraphBreakOnPaste">
			<summary>Gets or sets a value that indicates whether or not a trailing paragraph break should be inserted after the last paragraph when placing the contents of a root <see cref="T:System.Windows.Documents.Section"></see> element on the clipboard.</summary>
			<returns>true to indicate that a trailing paragraph break should be included; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.Documents.Span">
			<summary>Groups other <see cref="T:System.Windows.Documents.Inline"></see> flow content elements.</summary>
		</member>
		<member name="M:System.Windows.Documents.Span.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Span"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span"></see> class with the specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents.</summary>
			<param name="childInline">The initial contents of the new <see cref="T:System.Windows.Documents.Span"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Span"></see>, and a <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies an insertion position for the new <see cref="T:System.Windows.Documents.Inline"></see> element.</summary>
			<param name="childInline">An <see cref="T:System.Windows.Documents.Inline"></see> object that specifies the initial contents of the new <see cref="T:System.Windows.Documents.Span"></see>. This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline"></see> is inserted.</param>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies the position at which to insert the <see cref="T:System.Windows.Documents.Span"></see> element after it is created, or null for no automatic insertion.</param>
		</member>
		<member name="M:System.Windows.Documents.Span.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Span"></see> class, taking two <see cref="T:System.Windows.Documents.TextPointer"></see> objects that indicate the beginning and end of a selection of content that the new <see cref="T:System.Windows.Documents.Span"></see> will contain.</summary>
			<param name="end">A <see cref="T:System.Windows.Documents.TextPointer"></see> that indicates the end of a selection of content that the new <see cref="T:System.Windows.Documents.Span"></see> will contain.</param>
			<param name="start">A <see cref="T:System.Windows.Documents.TextPointer"></see> that indicates the beginning of a selection of content that the new <see cref="T:System.Windows.Documents.Span"></see> will contain.</param>
			<exception cref="T:System.ArgumentException">Raised when start and end do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Span"></see> element; for example, if start and end indicate positions in different paragraphs.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when start or end is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Span.ShouldSerializeInlines(System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Returns a value that indicates whether the content of a <see cref="T:System.Windows.Documents.Span"></see> element should be serialized during serialization of a <see cref="T:System.Windows.Documents.Run"></see> object.</summary>
			<returns>true if the content should be serialized; otherwise, false.</returns>
			<param name="manager">A serialization service manager object for this object.</param>
			<exception cref="T:System.NullReferenceException">manager is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.Span.Inlines">
			<summary>Gets an <see cref="T:System.Windows.Documents.InlineCollection"></see> containing the top-level <see cref="T:System.Windows.Documents.Inline"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Span"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Documents.InlineCollection"></see> containing the <see cref="T:System.Windows.Documents.Inline"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.Span"></see>.This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Documents.Table">
			<summary>A block-level flow content element that provides a grid-based presentation organized by rows and columns.</summary>
		</member>
		<member name="M:System.Windows.Documents.Table.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Table"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Documents.Table.CellSpacingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.Table.CellSpacing"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.Table.CellSpacing"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.Table.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Documents.Table"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Documents.Table"></see>.</returns>
		</member>
		<member name="M:System.Windows.Documents.Table.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Documents.Table.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Documents.Table.CellSpacing">
			<summary>Gets or sets the amount of spacing between cells in a table.</summary>
			<returns>The amount of spacing between cells in a table, in device independent pixels.The default value is 2.0.</returns>
		</member>
		<member name="P:System.Windows.Documents.Table.Columns">
			<summary>Gets a <see cref="T:System.Windows.Documents.TableColumnCollection"></see> object that contains the columns hosted by the table.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TableColumnCollection"></see> object that contains the columns (represented by <see cref="T:System.Windows.Documents.TableColumn"></see> objects) hosted by the table. Note that this number might not be the actual number of columns rendered in the table. It is the <see cref="T:System.Windows.Documents.TableCell"></see> objects in a table that determine how many columns are actually rendered.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.Table.LogicalChildren">
			<summary>Gets an enumerator that can be used to iterate the logical children of the <see cref="T:System.Windows.Documents.Table"></see>.</summary>
			<returns>An enumerator for the logical children of the <see cref="T:System.Windows.Documents.Table"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Table.RowGroups">
			<summary>Gets a <see cref="T:System.Windows.Documents.TableRowGroupCollection"></see> collection object that contains the row groups hosted by the table.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TableRowGroupCollection"></see> collection object that contains the row groups (represented by <see cref="T:System.Windows.Documents.TableRowGroup"></see> objects) hosted by the table.This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Documents.TableCell">
			<summary>A flow content element that defines a cell of content within a <see cref="T:System.Windows.Documents.Table"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCell.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.TableCell"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCell.#ctor(System.Windows.Documents.Block)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableCell"></see> class, taking a specified <see cref="T:System.Windows.Documents.Block"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.TableCell"></see>.</summary>
			<param name="blockItem">A <see cref="T:System.Windows.Documents.Block"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.TableCell"></see>.</param>
		</member>
		<member name="F:System.Windows.Documents.TableCell.BorderBrushProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.BorderBrush"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.BorderBrush"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.BorderThicknessProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.BorderThickness"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.BorderThickness"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.ColumnSpanProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.ColumnSpan"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.ColumnSpan"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.FlowDirectionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.FlowDirection"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.FlowDirection"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.LineHeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.LineHeight"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.LineHeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.LineStackingStrategyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy"></see>  dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.LineStackingStrategy"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.PaddingProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.Padding"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.Padding"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.RowSpanProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.RowSpan"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.RowSpan"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableCell.TextAlignmentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TableCell.TextAlignment"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TableCell.TextAlignment"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Documents.TableCell.OnCreateAutomationPeer">
			<summary>Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Documents.TableCell"></see>.</summary>
			<returns>An <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> object for this <see cref="T:System.Windows.Documents.TableCell"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.Blocks">
			<summary>Gets a <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the top-level <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableCell"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.BlockCollection"></see> containing the <see cref="T:System.Windows.Documents.Block"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableCell"></see>This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.BorderBrush">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Brush"></see> to use when painting the element's border.</summary>
			<returns>The brush used to apply to the element's border.The default value is a null brush.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.BorderThickness">
			<summary>Gets or sets the border thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of border to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.ColumnSpan">
			<summary>Gets or sets the number of columns that the <see cref="T:System.Windows.Documents.TableCell"></see> should span.</summary>
			<returns>The number of columns the <see cref="T:System.Windows.Documents.TableCell"></see> should span.The default value is 1 (no spanning).</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.FlowDirection">
			<summary>Gets or sets a value that specifies the relative direction for flow of content within a <see cref="T:System.Windows.Documents.TableCell"></see> element.</summary>
			<returns>A member of the <see cref="T:System.Windows.FlowDirection"></see> enumeration specifying the relative flow direction.  Getting this property returns the currently effective flow direction.  Setting this property causes the contents of the <see cref="T:System.Windows.Documents.TableCell"></see> element to re-flow in the indicated direction.The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.LineHeight">
			<summary>Gets or sets the height of each line of content.</summary>
			<returns>A double value specifying the height of line in device independent pixels.  <see cref="P:System.Windows.Documents.TableCell.LineHeight"></see> must be equal to or greater than 0.0034 and equal to or less then 160000.A value of <see cref="F:System.Double.NaN"></see> (equivalent to an attribute value of "Auto") causes the line height to be determined automatically from the current font characteristics.  The default value is <see cref="F:System.Double.NaN"></see>.</returns>
			<exception cref="T:System.ArgumentException">Raised if an attempt is made to set <see cref="P:System.Windows.Controls.TextBlock.LineHeight"></see> to a non-positive value.</exception>
		</member>
		<member name="P:System.Windows.Documents.TableCell.LineStackingStrategy">
			<summary>Gets or sets the mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.TableCell"></see>.</summary>
			<returns>The mechanism by which a line box is determined for each line of text within the <see cref="T:System.Windows.Documents.TableCell"></see>. The default value is <see cref="F:System.Windows.LineStackingStrategy.MaxHeight"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.Padding">
			<summary>Gets or sets the padding thickness for the element.</summary>
			<returns>A <see cref="T:System.Windows.Thickness"></see> structure specifying the amount of padding to apply, in device independent pixels.The default value is a uniform thickness of zero (0.0).</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.RowSpan">
			<summary>Gets or sets the number of rows that the <see cref="T:System.Windows.Documents.TableCell"></see> should span.</summary>
			<returns>The number of rows the <see cref="T:System.Windows.Documents.TableCell"></see> should span.The default value is 1 (no spanning).</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCell.TextAlignment">
			<summary>Gets or sets a value that indicates the horizontal alignment of text content.</summary>
			<returns>A member of the <see cref="T:System.Windows.TextAlignment"></see> enumerations specifying the desired alignment.The default value is <see cref="F:System.Windows.TextAlignment.Left"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.TableCellCollection">
			<summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableCell"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.Add(System.Windows.Documents.TableCell)">
			<summary>Appends a specified <see cref="T:System.Windows.Documents.TableCell"></see> to the collection of table cells.</summary>
			<param name="item">The <see cref="T:System.Windows.Documents.TableCell"></see> to append to the collection of table cells.</param>
			<exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.Clear">
			<summary>Clears all items from the collection.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.Contains(System.Windows.Documents.TableCell)">
			<summary>Queries for the presence of a specified item in the collection.</summary>
			<returns>true if the specified item is present in the collection; otherwise, false.</returns>
			<param name="item">An item to query for the presence of in the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional array to which the collection contents will be copied. This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableCell"></see>, or if index specifies a position that falls outside the bounds of array.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.CopyTo(System.Windows.Documents.TableCell[],System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableCell"></see> array of starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableCell"></see> array to which the collection contents will be copied. This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array that specifies the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableCell"></see>, or if index specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.IndexOf(System.Windows.Documents.TableCell)">
			<summary>Returns the zero-based index of specified collection item.</summary>
			<returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
			<param name="item">A collection item to return the index of.</param>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)">
			<summary>Inserts a specified item in the collection at a specified index position.</summary>
			<param name="item">An item to insert into the collection.</param>
			<param name="index">A zero-based index that specifies the position in the collection at which to insert item.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)">
			<summary>Removes a specified item from the collection.</summary>
			<returns>trueif the specified item was found and removed; otherwise, false.</returns>
			<param name="item">An item to remove from the collection.</param>
			<exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)">
			<summary>Removes an item, specified by index, from the collection.</summary>
			<param name="index">A zero-based index that specifies the collection item to remove.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see>.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)">
			<summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
			<param name="count">The number of items to remove, beginning from the position specified by index.</param>
			<param name="index">A zero-based index that indicates the beginning of a range of items to remove.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see>.</exception>
			<exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.System.Collections.IList.Clear">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableCellCollection.Clear"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. Use the type-safe <see cref="M:System.Windows.Documents.TableCellCollection.Insert(System.Int32,System.Windows.Documents.TableCell)"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. Use the type safe <see cref="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)"></see>, <see cref="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.System.Collections.IList.RemoveAt(System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type safe <see cref="M:System.Windows.Documents.TableCellCollection.Remove(System.Windows.Documents.TableCell)"></see>, <see cref="M:System.Windows.Documents.TableCellCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableCellCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableCellCollection.TrimToSize">
			<summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableCellCollection.Capacity"></see> equal to the <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see> of items currently in the collection.</summary>
		</member>
		<member name="P:System.Windows.Documents.TableCellCollection.Capacity">
			<summary>Gets or sets the preallocated collection item capacity for this collection.</summary>
			<returns>The preallocated collection item capacity for this collection. The default value is 8.</returns>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity"></see> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see>.</exception>
		</member>
		<member name="P:System.Windows.Documents.TableCellCollection.Count">
			<summary>Gets the number of items currently contained by the collection.</summary>
			<returns>The number of items currently contained by the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCellCollection.IsReadOnly">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCellCollection.IsSynchronized">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableCellCollection.Item(System.Int32)">
			<summary>Gets or sets the collection item at a specified index. This is an indexed property.</summary>
			<returns>The collection item at the specified index.</returns>
			<param name="index">A zero-based index that specifies the position of the collection item.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see>.</exception>
		</member>
		<member name="T:System.Windows.Documents.TableColumn">
			<summary>A flow content element that defines a column within a <see cref="T:System.Windows.Documents.Table"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableColumn.#ctor">
			<summary> Initializes a new instance of the TableColumn class. </summary>
		</member>
		<member name="F:System.Windows.Documents.TableColumn.BackgroundProperty">
			<summary> Identifies the Background dependency property. </summary>
			<returns>The Background dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.Documents.TableColumn.WidthProperty">
			<summary> Identifies the Width dependency property. </summary>
			<returns>The Width dependency property identifier.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableColumn.Background">
			<summary> Gets or sets the background Brush used to fill the content of the TableColumn. </summary>
			<returns>The background Brush used to fill the content of the TableColumn.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableColumn.Width">
			<summary> Gets or set the width of a TableColumn element. The Width property measures the sum of the Column's content, padding, and border from side to side. </summary>
			<returns>The width of the TableColumn element.</returns>
		</member>
		<member name="T:System.Windows.Documents.TableColumnCollection">
			<summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableColumn"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.Add(System.Windows.Documents.TableColumn)">
			<summary>Appends a specified item to the collection.</summary>
			<param name="i tem">A table column to append to the collection of columns.</param>
			<exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.Clear">
			<summary>Clears all items from the collection.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.Contains(System.Windows.Documents.TableColumn)">
			<summary>Queries for the presence of a specified item in the collection.</summary>
			<returns>true if the specified item is present in the collection; otherwise, false.</returns>
			<param name="item">An item to query for the presence of in the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableColumn"></see>, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.CopyTo(System.Windows.Documents.TableColumn[],System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableColumn"></see> array of starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableColumn"></see> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableColumn"></see>, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.IndexOf(System.Windows.Documents.TableColumn)">
			<summary>Returns the zero-based index of specified collection item.</summary>
			<returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
			<param name="item">A collection item to return the index of.</param>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)">
			<summary>Inserts a specified item in the collection at a specified index position.</summary>
			<param name="item">An item to insert into the collection.</param>
			<param name="index">A zero-based index that specifies the position in the collection at which to insert item.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)">
			<summary>Removes a specified item from the collection.</summary>
			<returns>true if the specified item was found and removed; otherwise, false.</returns>
			<param name="item">An item to remove from the collection.</param>
			<exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)">
			<summary>Removes an item, specified by index, from the collection.</summary>
			<param name="index">A zero-based index that specifies the collection item to remove.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count"></see>.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)">
			<summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
			<param name="count">The number of items to remove, beginning from the position specified by index.</param>
			<param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count"></see>.</exception>
			<exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.System.Collections.IList.Clear">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Clear"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Insert(System.Int32,System.Windows.Documents.TableColumn)"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)"></see>, <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.System.Collections.IList.RemoveAt(System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableColumnCollection.Remove(System.Windows.Documents.TableColumn)"></see>, <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableColumnCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableColumnCollection.TrimToSize">
			<summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableColumnCollection.Capacity"></see> equal to the <see cref="P:System.Windows.Documents.TableColumnCollection.Count"></see> of items currently in the collection.</summary>
		</member>
		<member name="P:System.Windows.Documents.TableColumnCollection.Capacity">
			<summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
			<returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity"></see> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see>.</exception>
		</member>
		<member name="P:System.Windows.Documents.TableColumnCollection.Count">
			<summary>Gets the number of items currently contained by the collection.</summary>
			<returns>The number of items currently contained by the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableColumnCollection.IsReadOnly">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableColumnCollection.IsSynchronized">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableColumnCollection.Item(System.Int32)">
			<summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
			<returns>The collection item at the specified index.</returns>
			<param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableColumnCollection.Count"></see>.</exception>
		</member>
		<member name="T:System.Windows.Documents.TableRow">
			<summary>A flow content element that defines a row within a <see cref="T:System.Windows.Documents.Table"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRow.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.TableRow"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRow.ShouldSerializeCells">
			<summary>Returns a value that indicates whether or not the effective value of the <see cref="P:System.Windows.Documents.TableRow.Cells"></see> property should be serialized during serialization of a <see cref="T:System.Windows.Documents.TableRow"></see> object.</summary>
			<returns>true if the <see cref="P:System.Windows.Documents.TableRow.Cells"></see> property should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Documents.TableRow.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the <see cref="P:System.Windows.Documents.TableRow.Cells"></see> property to add child <see cref="T:System.Windows.Documents.TableCell"></see> elements to a <see cref="T:System.Windows.Documents.TableRow"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRow.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Documents.TableRow.Cells">
			<summary>Gets a <see cref="T:System.Windows.Documents.TableCellCollection"></see> that contains cells of a TableRow. </summary>
			<returns>A collection of child cells.</returns>
		</member>
		<member name="T:System.Windows.Documents.TableRowCollection">
			<summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableRow"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.Add(System.Windows.Documents.TableRow)">
			<summary>Appends a specified item to the collection.</summary>
			<param name="item">A table row to append to the collection or rows.</param>
			<exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.Clear">
			<summary>Clears all items from the collection.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.Contains(System.Windows.Documents.TableRow)">
			<summary>Queries for the presence of a specified item in the collection.</summary>
			<returns>true if the specified item is present in the collection; otherwise, false.</returns>
			<param name="item">An item to query for the presence of in the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRow"></see>, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.CopyTo(System.Windows.Documents.TableRow[],System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableRow"></see> array of starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableRow"></see> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRow"></see>, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.IndexOf(System.Windows.Documents.TableRow)">
			<summary>Returns the zero-based index of specified collection item.</summary>
			<returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
			<param name="item">A collection item to return the index of.</param>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.Insert(System.Int32,System.Windows.Documents.TableRow)">
			<summary>Inserts a specified item in the collection at a specified index position.</summary>
			<param name="item">An item to insert into the collection.</param>
			<param name="index">A zero-based index that specifies the position in the collection at which to insert item.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)">
			<summary>Removes a specified item from the collection.</summary>
			<returns>true if the specified item was found and removed; otherwise, false.</returns>
			<param name="item">An item to remove from the collection.</param>
			<exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)">
			<summary>Removes an item, specified by index, from the collection.</summary>
			<param name="index">A zero-based index that specifies the collection item to remove.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count"></see>.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)">
			<summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
			<param name="count">The number of items to remove, beginning form the position specified by index.</param>
			<param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count"></see>.</exception>
			<exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.System.Collections.IList.Clear">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowCollection.Clear"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowCollection.Insert(System.Int32,System.Windows.Documents.TableRow)"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)"></see>, <see cref="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.System.Collections.IList.RemoveAt(System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowCollection.Remove(System.Windows.Documents.TableRow)"></see>, <see cref="M:System.Windows.Documents.TableRowCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableRowCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowCollection.TrimToSize">
			<summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableRowCollection.Capacity"></see> equal to the <see cref="P:System.Windows.Documents.TableRowCollection.Count"></see> of items currently in the collection.</summary>
		</member>
		<member name="P:System.Windows.Documents.TableRowCollection.Capacity">
			<summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
			<returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity"></see> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see>.</exception>
		</member>
		<member name="P:System.Windows.Documents.TableRowCollection.Count">
			<summary>Gets the number of items currently contained by the collection.</summary>
			<returns>The number of items currently contained by the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableRowCollection.IsReadOnly">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableRowCollection.IsSynchronized">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableRowCollection.Item(System.Int32)">
			<summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
			<returns>The collection item at the specified index.</returns>
			<param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowCollection.Count"></see>.</exception>
		</member>
		<member name="T:System.Windows.Documents.TableRowGroup">
			<summary>Represents a flow content element used to group <see cref="T:System.Windows.Documents.TableRow"></see> elements within a <see cref="T:System.Windows.Documents.Table"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroup.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TableRowGroup"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroup.ShouldSerializeRows">
			<summary>Indicates whether the <see cref="P:System.Windows.Documents.TableRowGroup.Rows"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroup.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroup.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Documents.TableRowGroup.Rows">
			<summary>Gets a <see cref="T:System.Windows.Documents.TableRowCollection"></see> that contains the <see cref="T:System.Windows.Documents.TableRow"></see> objects that comprise the contents of the <see cref="T:System.Windows.Documents.TableRowGroup"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TableRowCollection"></see> that contains the <see cref="T:System.Windows.Documents.TableRow"></see> elements that comprise the contents of the <see cref="T:System.Windows.Documents.TableRowGroup"></see>. This property has no default value.</returns>
		</member>
		<member name="T:System.Windows.Documents.TableRowGroupCollection">
			<summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TableRowGroup"></see> objects.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.Add(System.Windows.Documents.TableRowGroup)">
			<summary>Appends a specified item to the collection.</summary>
			<param name="item">An item to append to the collection.</param>
			<exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.Clear">
			<summary>Clears all items from the collection.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.Contains(System.Windows.Documents.TableRowGroup)">
			<summary>Queries for the presence of a specified item in the collection.</summary>
			<returns>true if the specified item is present in the collection; otherwise, false.</returns>
			<param name="item">An item to query for the presence of in the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Array,System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRowGroup"></see>, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.CopyTo(System.Windows.Documents.TableRowGroup[],System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified <see cref="T:System.Windows.Documents.TableRowGroup"></see> array of starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional <see cref="T:System.Windows.Documents.TableRowGroup"></see> array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
			<param name="index">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TableRowGroup"></see>, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.IndexOf(System.Windows.Documents.TableRowGroup)">
			<summary>Returns the zero-based index of specified collection item.</summary>
			<returns>The zero-based index of the specified collection item, or -1 if the specified item is not a member of the collection.</returns>
			<param name="item">A collection item to return the index of.</param>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.Insert(System.Int32,System.Windows.Documents.TableRowGroup)">
			<summary>Inserts a specified item in the collection at a specified index position.</summary>
			<param name="item">An item to insert into the collection.</param>
			<param name="index">A zero-based index that specifies the position in the collection at which to insert item.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than 0.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)">
			<summary>Removes a specified item from the collection.</summary>
			<returns>true if the specified item was found and removed; otherwise, false.</returns>
			<param name="item">An item to remove from the collection.</param>
			<exception cref="T:System.ArgumentException">Raised if item is not present in the collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)">
			<summary>Removes an item, specified by index, from the collection.</summary>
			<param name="index">A zero-based index that specifies the collection item to remove.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count"></see>.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)">
			<summary>Removes a range of items, specified by beginning index and count, from the collection.</summary>
			<param name="count">The number of items to remove, beginning form the position specified by index.</param>
			<param name="index">A zero-based index indicating the beginning of a range of items to remove.</param>
			<exception cref="T:System.ArgumentException">Raised when index and count do not specify a valid range in this collection.</exception>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index or count is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count"></see>.</exception>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.System.Collections.IList.Clear">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowGroupCollection.Clear"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowGroupCollection.Insert(System.Int32,System.Windows.Documents.TableRowGroup)"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)"></see>, <see cref="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.System.Collections.IList.RemoveAt(System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TableRowGroupCollection.Remove(System.Windows.Documents.TableRowGroup)"></see>, <see cref="M:System.Windows.Documents.TableRowGroupCollection.RemoveAt(System.Int32)"></see>, or <see cref="M:System.Windows.Documents.TableRowGroupCollection.RemoveRange(System.Int32,System.Int32)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TableRowGroupCollection.TrimToSize">
			<summary>Optimizes memory consumption for the collection by setting the underlying collection <see cref="P:System.Windows.Documents.TableRowGroupCollection.Capacity"></see> equal to the <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count"></see> of items currently in the collection.</summary>
		</member>
		<member name="P:System.Windows.Documents.TableRowGroupCollection.Capacity">
			<summary>Gets or sets the pre-allocated collection item capacity for this collection.</summary>
			<returns>The pre-allocated collection item capacity for this collection.  The default value is 8.</returns>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when an attempt is made to set <see cref="P:System.Windows.Documents.TableCellCollection.Capacity"></see> to a value that is less than the current value of <see cref="P:System.Windows.Documents.TableCellCollection.Count"></see>.</exception>
		</member>
		<member name="P:System.Windows.Documents.TableRowGroupCollection.Count">
			<summary>Gets the number of items currently contained by the collection.</summary>
			<returns>The number of items currently contained by the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableRowGroupCollection.IsReadOnly">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableRowGroupCollection.IsSynchronized">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<returns>Currently, this property always returns false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TableRowGroupCollection.Item(System.Int32)">
			<summary>Gets the collection item at a specified index.  This is an indexed property.</summary>
			<returns>The collection item at the specified index.</returns>
			<param name="index">A zero-based index specifying the position of the collection item to retrieve.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when index is less than zero, or when index is greater than or equal to <see cref="P:System.Windows.Documents.TableRowGroupCollection.Count"></see>.</exception>
		</member>
		<member name="T:System.Windows.Documents.TextEffectResolver">
			<summary> A helper class that sets text effects in a text container </summary>
		</member>
		<member name="M:System.Windows.Documents.TextEffectResolver.Resolve(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer,System.Windows.Media.TextEffect)">
			<summary> Resolves text effect on a text range to a list of text effect targets. </summary>
			<returns>Collection of <see cref="T:System.Windows.Documents.TextEffectTarget"></see> objects corresponding to the text range.</returns>
			<param name="effect">The effect to apply on the text</param>
			<param name="endPosition">The end text pointer</param>
			<param name="startPosition">The starting text pointer</param>
		</member>
		<member name="T:System.Windows.Documents.TextEffectTarget">
			<summary>Result from using <see cref="T:System.Windows.Documents.TextEffectResolver"></see> to set an effect on text. This consists of the <see cref="T:System.Windows.Media.TextEffect"></see> created and the <see cref="T:System.Windows.DependencyObject"></see> to which the <see cref="T:System.Windows.Media.TextEffect"></see> should be set. </summary>
		</member>
		<member name="M:System.Windows.Documents.TextEffectTarget.Disable">
			<summary> Disables the <see cref="T:System.Windows.Media.TextEffect"></see> on the effect target. </summary>
			<returns>This method does not have a return value. If the <see cref="T:System.Windows.Media.TextEffect"></see> is already disabled, the method will be a no-op (no operation).</returns>
		</member>
		<member name="M:System.Windows.Documents.TextEffectTarget.Enable">
			<summary>Enables the <see cref="T:System.Windows.Media.TextEffect"></see> on the target text. </summary>
			<returns>This method does not have a return value. If the <see cref="T:System.Windows.Media.TextEffect"></see> is already enabled, the method will be a no-op (no operation).</returns>
		</member>
		<member name="P:System.Windows.Documents.TextEffectTarget.Element">
			<summary> Gets the <see cref="T:System.Windows.DependencyObject"></see> that the <see cref="T:System.Windows.Media.TextEffect"></see> is targeting. </summary>
			<returns>The <see cref="T:System.Windows.DependencyObject"></see> that the <see cref="T:System.Windows.Media.TextEffect"></see> is targeting. </returns>
		</member>
		<member name="P:System.Windows.Documents.TextEffectTarget.IsEnabled">
			<summary>Gets a value that determines whether the text effect is enabled on the target element </summary>
			<returns>true if the <see cref="T:System.Windows.Media.TextEffect"></see>is enabled on the target; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextEffectTarget.TextEffect">
			<summary> Gets the <see cref="T:System.Windows.Media.TextEffect"></see> of the <see cref="T:System.Windows.Documents.TextEffectTarget"></see>. </summary>
			<returns>The <see cref="T:System.Windows.Media.TextEffect"></see> of the <see cref="T:System.Windows.Documents.TextEffectTarget"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.TextElement">
			<summary>An abstract class used as the base class for the abstract <see cref="T:System.Windows.Documents.Block"></see> and <see cref="T:System.Windows.Documents.Inline"></see> classes.</summary>
		</member>
		<member name="F:System.Windows.Documents.TextElement.BackgroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Background"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.Background"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TextElement.FontFamilyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontFamily"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontFamily"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TextElement.FontSizeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontSize"></see> dependency property.</summary>
			<returns>The <see cref="P:System.Windows.Documents.TextElement.FontSize"></see> dependency property identifier.</returns>
		</member>
		<member name="F:System.Windows.Documents.TextElement.FontStretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStretch"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStretch"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TextElement.FontStyleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TextElement.FontWeightProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.FontWeight"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.FontWeight"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TextElement.ForegroundProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.Foreground"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Documents.TextElement.Foreground"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Documents.TextElement.TextEffectsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Documents.TextElement.TextEffects"></see> dependency property. </summary>
			<returns>The <see cref="P:System.Windows.Documents.TextElement.TextEffects"></see> dependency property identifier.</returns>
		</member>
		<member name="M:System.Windows.Documents.TextElement.GetFontFamily(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.GetFontSize(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontSize"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.GetFontStretch(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.GetFontStyle(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.GetFontWeight(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.GetForeground(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground"></see>  attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.Foreground"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
			<summary>Handles notifications that one or more of the dependency properties that exist on the element have had their effective values changed. </summary>
			<param name="e">Arguments associated with the property value change.  The <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.Property"></see> property specifies which property has changed, the <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue"></see> property specifies the previous property value, and the <see cref="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue"></see> property specifies the new property value.</param>
		</member>
		<member name="M:System.Windows.Documents.TextElement.SetFontFamily(System.Windows.DependencyObject,System.Windows.Media.FontFamily)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.SetFontSize(System.Windows.DependencyObject,System.Double)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontSize"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.SetFontStretch(System.Windows.DependencyObject,System.Windows.FontStretch)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontStretch"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.SetFontStyle(System.Windows.DependencyObject,System.Windows.FontStyle)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontStyle"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.SetFontWeight(System.Windows.DependencyObject,System.Windows.FontWeight)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.FontWeight"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.SetForeground(System.Windows.DependencyObject,System.Windows.Media.Brush)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground"></see>  attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.TextElement.Foreground"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when d is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElement.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextElement.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Documents.TextElement.Background">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> used to fill the background of content area.</summary>
			<returns>The brush used to fill the background of the content area, or null not to use a background brush.The default is a null brush.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.ContentEnd">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> that represents the end of the content in a <see cref="T:System.Windows.Documents.TextElement"></see> (or a descendant of <see cref="T:System.Windows.Documents.TextElement"></see>).</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> representing the end of the contents in the <see cref="T:System.Windows.Documents.TextElement"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.ContentStart">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> that represents the start of content in a <see cref="T:System.Windows.Documents.TextElement"></see> (or a descendant of <see cref="T:System.Windows.Documents.TextElement"></see>).</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointerContext"></see> representing the start of the contents in the <see cref="T:System.Windows.Documents.TextElement"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.ElementEnd">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> that represents the position just after the end of a <see cref="T:System.Windows.Documents.TextElement"></see> (or a descendant of <see cref="T:System.Windows.Documents.TextElement"></see>).</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> representing the position just after the end of this <see cref="T:System.Windows.Documents.TextElement"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.ElementStart">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> that represents the position just before the start of a <see cref="T:System.Windows.Documents.TextElement"></see> (or a descendant of <see cref="T:System.Windows.Documents.TextElement"></see>).</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointerContext"></see> representing the position just before the start of this <see cref="T:System.Windows.Documents.TextElement"></see>.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.FontFamily">
			<summary>Gets or sets the preferred top-level font family for the content in this element.</summary>
			<returns>A <see cref="T:System.Windows.Media.FontFamily"></see> object specifying the preferred font family, or a primary preferred font family with one or more fallback font families.The default value is the font determined by the <see cref="P:System.Windows.SystemFonts.MessageFontFamily"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.FontSize">
			<summary>Gets or sets the  font size for the content in this element.</summary>
			<returns>A double value specifying the desired font size to use in points (1 point = 1/72 of an inch = 96/72 device independent pixels).  The font size must be less than or equal to 35791 and greater than 0.001.  The default font size depends on current system settings, and is derived from the <see cref="P:System.Windows.SystemFonts.MessageFontSize"></see> metric.</returns>
			<exception cref="T:System.ArgumentException">Raised when an attempt is made to set the font size to a value greater than 35791 or less than or equal to 0.001.</exception>
		</member>
		<member name="P:System.Windows.Documents.TextElement.FontStretch">
			<summary>Gets or sets the font-stretching characteristics for the content in this element.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontStretch"></see> class specifying the desired font-stretching characteristics to use.The default value is <see cref="P:System.Windows.FontStretches.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.FontStyle">
			<summary>Gets or sets the  font style for the content in this element.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontStyles"></see> class specifying the desired font style.The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontStyle"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.FontWeight">
			<summary>Gets or sets the top-level font weight for the content in this element.</summary>
			<returns>A member of the <see cref="T:System.Windows.FontWeights"></see> class specifying the desired font weight.The default value is determined by the <see cref="P:System.Windows.SystemFonts.MessageFontWeight"></see> metric.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.Foreground">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> to apply to the content in this element.</summary>
			<returns>The brush used to apply to the text contents.The default is <see cref="P:System.Windows.Media.Brushes.Black"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.LogicalChildren">
			<summary>Gets an enumerator that can iterate the logical children of the <see cref="T:System.Windows.Documents.TextElement"></see> (or a descendant of <see cref="T:System.Windows.Documents.TextElement"></see>).</summary>
			<returns>An enumerator for the logical children.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.TextEffects">
			<summary>Gets or sets a collection of text effects that contains the effects to apply to the content in this element.</summary>
			<returns>A <see cref="T:System.Windows.Media.TextEffectCollection"></see> containing one or more <see cref="T:System.Windows.Media.TextEffect"></see> objects that define effects to apply to the content in this element.The default value is null (no empty collection).</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElement.Typography">
			<summary>Gets the currently effective typography variations for the contents of this element.</summary>
			<returns>A <see cref="T:System.Windows.Documents.Typography"></see> object that specifies the currently effective typography variations.For a list of default typography values, see the <see cref="T:System.Windows.Documents.Typography"></see> class page.</returns>
		</member>
		<member name="T:System.Windows.Documents.TextElementCollection`1">
			<summary>Provides standard facilities for creating and managing a type-safe, ordered collection of <see cref="T:System.Windows.Documents.TextElement"></see> objects.  This is a generic collection for working with objects of a specified type that derives from <see cref="T:System.Windows.Documents.TextElement"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.Add(`0)">
			<summary>Appends a specified item to the collection.</summary>
			<param name="item">An item to append to the collection.</param>
			<exception cref="T:System.ArgumentException">Raised when item already belongs to a collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when item is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.AddRange(System.Collections.IEnumerable)">
			<summary>Appends a specified range of items to the collection.</summary>
			<param name="range">An object that implements the <see cref="T:System.Collections.IEnumerable"></see> interface, and that specifies a range of items to add to the collection.</param>
			<exception cref="T:System.ArgumentException">Raised when range includes any null items.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when range is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.Clear">
			<summary>Clears all items from the collection.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.Contains(`0)">
			<summary>Queries for the presence of a specified item in the collection.</summary>
			<returns>true if the specified item is present in the collection; otherwise, false.</returns>
			<param name="item">An item to query for the presence of in the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)">
			<summary>Copies the contents of the collection and inserts them into a specified array starting at a specified index position in the array.</summary>
			<param name="array">A one-dimensional array to which the collection contents will be copied.  This array must use zero-based indexing.</param>
			<param name="arrayIndex">A zero-based index in array specifying the position at which to begin inserting the copied collection objects.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Raised when arrayIndex is less than 0.</exception>
			<exception cref="T:System.ArgumentException">Raised when array includes items that are not compatible with the type <see cref="T:System.Windows.Documents.TextElement"></see>, or if arrayIndex specifies a position that falls outside of the bounds of array.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when array is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.GetEnumerator">
			<summary>Returns an enumerator for the contents of the collection.</summary>
			<returns>An enumerator for the contents of the collection.</returns>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)">
			<summary>Inserts a specified item in the collection after a specified collection item.</summary>
			<param name="newItem">An item to insert into the collection.</param>
			<param name="previousSibling">An item in the collection after which the new item will be inserted.</param>
			<exception cref="T:System.ArgumentNullException">Raised when previousSibling or newItem is null.</exception>
			<exception cref="T:System.InvalidOperationException">Raised when previousSibling does not belong to this collection.</exception>
			<exception cref="T:System.ArgumentException">Raised when newItem already belongs to a collection.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)">
			<summary>Inserts a specified item in the collection before a specified collection item.</summary>
			<param name="newItem">An item to insert into the collection.</param>
			<param name="nextSibling">An item in the collection before which the new item will be inserted.</param>
			<exception cref="T:System.ArgumentException">Raised when newItem already belongs to a collection.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when nextSibling or newItem is null.</exception>
			<exception cref="T:System.InvalidOperationException">Raised when nextSibling does not belong to this collection.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)">
			<summary>Removes a specified item from the collection.</summary>
			<returns>true if the specified item was found and removed; otherwise, false.</returns>
			<param name="item">An item to be removed fro the collection.</param>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.CopyTo(`0[],System.Int32)"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.System.Collections.IList.Insert(System.Int32,System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertAfter(`0,`0)"></see> or <see cref="M:System.Windows.Documents.TextElementCollection`1.InsertBefore(`0,`0)"></see> methods instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.System.Collections.IList.Remove(System.Object)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)"></see> method instead.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextElementCollection`1.System.Collections.IList.RemoveAt(System.Int32)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.  Use the type-safe <see cref="M:System.Windows.Documents.TextElementCollection`1.Remove(`0)"></see> method instead.</summary>
		</member>
		<member name="P:System.Windows.Documents.TextElementCollection`1.Count">
			<summary>Gets the number of items currently in the collection.</summary>
			<returns>The number of items currently in the collection.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextElementCollection`1.IsReadOnly">
			<summary>Gets a value that indicates whether or not the collection is read-only.</summary>
			<returns>true if the collection is read-only; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.Documents.TextPointer">
			<summary>Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument"></see> or <see cref="T:System.Windows.Controls.TextBlock"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)">
			<summary>Performs an ordinal comparison between the positions specified by this <see cref="T:System.Windows.Documents.TextPointer"></see> and a second specified <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>An integer specifying the ordinal relationship between this <see cref="T:System.Windows.Documents.TextPointer"></see> and the <see cref="T:System.Windows.Documents.TextPointer"></see> specified by position.  A value of negative one (-1) indicates that the position specified by this <see cref="T:System.Windows.Documents.TextPointer"></see> precedes the position specified by position.  A value of zero (0) indicates that the indicated positions are equal.  A value of positive one (+1) indicates that the position specified by this <see cref="T:System.Windows.Documents.TextPointer"></see> follows the position specified by position.</returns>
			<param name="position">A <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies a position to compare to the current position.</param>
			<exception cref="T:System.ArgumentException">Raised when position specifies a position outside of the text container associated with the current position.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)">
			<summary>Deletes a specified number of characters from the position indicated by this <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>The number of characters actually deleted.</returns>
			<param name="count">The number of characters to delete, starting at the position specified by this <see cref="T:System.Windows.Documents.TextPointer"></see>.  Specify a positive value to delete characters following the current position (as in <see cref="T:System.Windows.Documents.LogicalDirection"></see>.<see cref="F:System.Windows.Documents.LogicalDirection.Forward"></see>); specify a negative value to delete characters preceding the current position (as in LogicalDirection.<see cref="F:System.Windows.Documents.LogicalDirection.Backward"></see>).</param>
			<exception cref="T:System.InvalidOperationException">Raised when called at a position where text is not allowed.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)">
			<summary>Returns the element, if any, bordering this <see cref="T:System.Windows.Documents.TextPointer"></see> in a specified logical direction. </summary>
			<returns>The adjacent element in the specified direction, or null if no adjacent element exists.</returns>
			<param name="direction">The logical direction in which to search for an adjacent element.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)">
			<summary>Returns a bounding box (<see cref="T:System.Windows.Rect"></see>) for content bordering this <see cref="T:System.Windows.Documents.TextPointer"></see> in a specified logical direction.</summary>
			<returns>A bounding box for content boarding this <see cref="T:System.Windows.Documents.TextPointer"></see> in the specified direction, or Rect.<see cref="P:System.Windows.Rect.Empty"></see> if current, valid layout information is unavailable.</returns>
			<param name="direction">The logical direction in which to find a content bounding box.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> to the closest insertion position in a specified logical direction.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the closest insertion position in the specified direction.</returns>
			<param name="direction">A logical direction in which to search for the closest insertion position.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> at the beginning of a line specified relative to the position of this <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection"></see> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward"></see>), or null if the specified line is out of range or otherwise cannot be located.</returns>
			<param name="count">Number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, zero specifies the current line, and positive values specify following lines.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> at the beginning of a specified line relative to this <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection"></see> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward"></see>), or to the beginning of the line closest to the specified line if the specified line is out of range.</returns>
			<param name="count">Number of start-of-line markers to skip when determining the line for which to return the starting position. Negative values specify preceding lines, zero specifies the current line, and positive values specify following lines.</param>
			<param name="actualCount">The actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.  This value may be less than count if the beginning or end of content is encountered is encountered when searching for the specified line.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)">
			<summary>Returns a pointer to the next symbol (see remarks section) in a specified logical direction.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the next symbol in the requested direction, or null if this <see cref="T:System.Windows.Documents.TextPointer"></see> borders the start or end of content.</returns>
			<param name="direction">A logical direction in which to search for the next symbol.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> to the next insertion position in a specified logical direction.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the next insertion position in the requested direction, or null if no next insertion position can be found.</returns>
			<param name="direction">A logical direction in which to search for the next insertion position.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)">
			<summary>Returns the count of symbols between this <see cref="T:System.Windows.Documents.TextPointer"></see> and a second specified <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>The relative number of symbols between this <see cref="T:System.Windows.Documents.TextPointer"></see> and position.  A negative value indicates that the position specified by this <see cref="T:System.Windows.Documents.TextPointer"></see> follows the position specified by position.  A value of zero (0) indicates that the indicated positions are equal.  A positive value indicates that the position specified by this <see cref="T:System.Windows.Documents.TextPointer"></see> precedes the position specified by position.</returns>
			<param name="position">A <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies a position to find the distance (in symbols) to from the current position.</param>
			<exception cref="T:System.ArgumentException">Raised when position specifies a position outside of the text container associated with the current position.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)">
			<summary>Returns a category indicator for the content adjacent to this <see cref="T:System.Windows.Documents.TextPointer"></see> in a specified logical direction.</summary>
			<returns>A member of the <see cref="T:System.Windows.Documents.TextPointerContext"></see> enumeration that specifies the category for adjacent content in the specified logical direction.</returns>
			<param name="direction">A logical direction in which to determine the category for adjacent content.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> to the position indicated by a specified offset, in symbols, from the beginning of this <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the position indicated by the specified offset, or null if no corresponding position can be found.</returns>
			<param name="offset">An offset, in symbols, for which to calculate and return the corresponding position for.  If the offset is negative, the position will be calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)">
			<summary>Returns a <see cref="T:System.Windows.Documents.TextPointer"></see> to the position indicated by a specified offset, in symbols, from the beginning of this <see cref="T:System.Windows.Documents.TextPointer"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the position indicated by the specified offset, or null if the offset extends past the end of the content.</returns>
			<param name="offset">An offset, in symbols, for which to calculate and return the corresponding position for.  If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer"></see> precedes this <see cref="T:System.Windows.Documents.TextPointer"></see>, otherwise it follows.</param>
			<param name="direction">The logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)">
			<summary>Returns a string containing any text adjacent to this <see cref="T:System.Windows.Documents.TextPointer"></see> in a specified logical direction.</summary>
			<returns>A string containing any adjacent text in the specified logical direction, or String.<see cref="F:System.String.Empty"></see> if no adjacent text can be found.</returns>
			<param name="direction">A logical direction in which to find and return any adjacent text.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)">
			<summary>Copies a specified maximum number of characters from any adjacent text in a specified direction into a caller supplied character array.</summary>
			<returns>The number of characters actually copied into textBuffer.</returns>
			<param name="direction">A logical direction in which to find and copy any adjacent text.</param>
			<param name="count">The maximum number of characters to copy.</param>
			<param name="textBuffer">A buffer into which any text is copied.</param>
			<param name="startIndex">An index into textBuffer at which to begin writing copied text.</param>
			<exception cref="T:System.ArgumentException">Raised when startIndex is less than 0 or greater than textBuffer.<see cref="P:System.Array.Length"></see>, or when count is less than 0 or greater than the remaining space in textBuffer (textBuffer.Length - startIndex).</exception>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)">
			<summary>Returns the number of Unicode characters between this <see cref="T:System.Windows.Documents.TextPointer"></see> and the next non-text symbol, in a specified logical direction.</summary>
			<returns>The number of Unicode characters between this <see cref="T:System.Windows.Documents.TextPointer"></see> and the next non-text symbol.  This number may be 0 if there is no adjacent text.</returns>
			<param name="direction">A logical direction in which to count the number of characters.</param>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.InsertLineBreak">
			<summary>Inserts a line break at the current position.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> positioned immediately after <see cref="T:System.Windows.Documents.LineBreak"></see> element inserted by this method.</returns>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.InsertParagraphBreak">
			<summary>Inserts a paragraph break at the current position.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart"></see>) of the new paragraph.</returns>
			<exception cref="T:System.InvalidOperationException">Raised when this method is called on a position that cannot be split to accommodate a new paragraph such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink"></see> or <see cref="T:System.Windows.Documents.InlineUIContainer"></see>. </exception>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)">
			<summary>Inserts text (specified by a string) into the text <see cref="T:System.Windows.Documents.Run"></see> at the current position.</summary>
			<param name="textData">A string containing text to insert.</param>
			<exception cref="T:System.InvalidOperationException">Raised when the current position is not within a <see cref="T:System.Windows.Documents.Run"></see> element.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when textData is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)">
			<summary>Determines whether or not a specified position is in the same text container as the current position.</summary>
			<returns>true if textPosition indicates a position that is in the same text container as the current position; otherwise, false.</returns>
			<param name="textPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> that specifies a position to compare to the current position.</param>
			<exception cref="T:System.ArgumentNullException">Raised when textPosition is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.DocumentEnd">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> at the end of content in the text container associated with the current position.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> at the end of content in the text container associated with the current position.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.DocumentStart">
			<summary>Gets a <see cref="T:System.Windows.Documents.TextPointer"></see> at the beginning of content in the text container associated with the current position.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> at the beginning of content in the text container associated with the current position.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.HasValidLayout">
			<summary>Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</summary>
			<returns>true if the layout is current and valid; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition">
			<summary>Gets a value that indicates whether or not the current position is an insertion position.</summary>
			<returns>true if the current position is an insertion position; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition">
			<summary>Gets a value that indicate whether or not the current position is a the beginning of a line.</summary>
			<returns>true if the current position is at the beginning of a line; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.LogicalDirection">
			<summary>Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</summary>
			<returns>The <see cref="T:System.Windows.Documents.LogicalDirection"></see> associated with the current position.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.Paragraph">
			<summary>Gets the paragraph that scopes the current position, if any.</summary>
			<returns>The <see cref="T:System.Windows.Documents.Paragraph"></see> that scopes the current position, or null if no such paragraph exists.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextPointer.Parent">
			<summary>Gets the logical parent that scopes the current position.</summary>
			<returns>The logical parent that scopes the current position.</returns>
		</member>
		<member name="T:System.Windows.Documents.TextPointerContext">
			<summary>Determines the category of content that is adjacent to a <see cref="T:System.Windows.Documents.TextPointer"></see> in a specified <see cref="T:System.Windows.Documents.LogicalDirection"></see>.</summary>
		</member>
		<member name="F:System.Windows.Documents.TextPointerContext.ElementEnd">
			<summary>The <see cref="T:System.Windows.Documents.TextPointer"></see> is adjacent to the closing tag of a <see cref="T:System.Windows.Documents.TextElement"></see>.</summary>
		</member>
		<member name="F:System.Windows.Documents.TextPointerContext.ElementStart">
			<summary>The <see cref="T:System.Windows.Documents.TextPointer"></see> is adjacent to the opening tag of a <see cref="T:System.Windows.Documents.TextElement"></see>.</summary>
		</member>
		<member name="F:System.Windows.Documents.TextPointerContext.EmbeddedElement">
			<summary>The <see cref="T:System.Windows.Documents.TextPointer"></see> is adjacent to an embedded <see cref="T:System.Windows.UIElement"></see> or <see cref="T:System.Windows.ContentElement"></see>.</summary>
		</member>
		<member name="F:System.Windows.Documents.TextPointerContext.None">
			<summary>The <see cref="T:System.Windows.Documents.TextPointer"></see> is adjacent to the beginning or end of content.</summary>
		</member>
		<member name="F:System.Windows.Documents.TextPointerContext.Text">
			<summary>The <see cref="T:System.Windows.Documents.TextPointer"></see> is adjacent to text.</summary>
		</member>
		<member name="T:System.Windows.Documents.TextRange">
			<summary>Represents a selection of content between two <see cref="T:System.Windows.Documents.TextPointer"></see> positions.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextRange.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.TextRange"></see> class, taking two specified <see cref="T:System.Windows.Documents.TextPointer"></see> positions as the beginning and end positions for the new range.</summary>
			<param name="position2">A movable position that marks the other end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange"></see>.</param>
			<param name="position1">A fixed anchor position that marks one end of the selection used to form the new <see cref="T:System.Windows.Documents.TextRange"></see>.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when position1 or position2 is null.</exception>
			<exception cref="T:System.ArgumentException">Occurs when position1 and position2 are not positioned within the same document.</exception>
		</member>
		<member name="E:System.Windows.Documents.TextRange.Changed">
			<summary>Occurs when the range is repositioned to cover a new span of content.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextRange.ApplyPropertyValue(System.Windows.DependencyProperty,System.Object)">
			<summary>Applies a specified formatting property and value to the current selection.</summary>
			<param name="formattingProperty">A formatting property to apply.</param>
			<param name="value">The value for the formatting property.</param>
			<exception cref="T:System.ArgumentException">Occurs when formattingProperty does not specify a valid formatting property, or value specifies an invalid value for formattingProperty.</exception>
			<exception cref="T:System.ArgumentNullException">Occurs when formattingProperty is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextRange.CanLoad(System.String)">
			<summary>Checks whether the current selection can be loaded with content in a specified data format.</summary>
			<returns>true if the current selection can be loaded with content in the specified data format; otherwise, false.</returns>
			<param name="dataFormat">A data format to check for load-compatibility into the current selection.  See <see cref="T:System.Windows.DataFormats"></see> for a list of pre-defined data formats.</param>
		</member>
		<member name="M:System.Windows.Documents.TextRange.CanSave(System.String)">
			<summary>Checks whether the current selection can be saved as a specified data format.</summary>
			<returns>true if the current selection can be saved as the specified data format; otherwise, false.</returns>
			<param name="dataFormat">A data format to check for save compatibility with the current selection.  See <see cref="T:System.Windows.DataFormats"></see> for a list of pre-defined data formats.</param>
		</member>
		<member name="M:System.Windows.Documents.TextRange.ClearAllProperties">
			<summary>Removes all formatting properties (represented by <see cref="T:System.Windows.Documents.Inline"></see> elements) from the current selection.</summary>
		</member>
		<member name="M:System.Windows.Documents.TextRange.Contains(System.Windows.Documents.TextPointer)">
			<summary>Checks whether a position (specified by a <see cref="T:System.Windows.Documents.TextPointer"></see>) is located within the current selection.</summary>
			<returns>true if the specified position is located within the current selection; otherwise, false.</returns>
			<param name="textPointer">A position to test for inclusion in the current selection.</param>
			<exception cref="T:System.ArgumentException">Occurs when textPointer is not in the same document as the current selection.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextRange.GetPropertyValue(System.Windows.DependencyProperty)">
			<summary>Returns the effective value of a specified formatting property on the current selection.</summary>
			<returns>An object specifying the value of the specified formatting property.</returns>
			<param name="formattingProperty">A formatting property to get the value of with respect to the current selection.</param>
			<exception cref="T:System.ArgumentException">Occurs when formattingProperty does not specify a valid formatting property, or value specifies an invalid value for formattingProperty.</exception>
			<exception cref="T:System.ArgumentNullException">Occurs when formattingProperty is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextRange.Load(System.IO.Stream,System.String)">
			<summary>Loads the current selection in a specified data format from a specified stream.</summary>
			<param name="dataFormat">A data format to load the data as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf"></see>, <see cref="F:System.Windows.DataFormats.Text"></see>, <see cref="F:System.Windows.DataFormats.Xaml"></see>, and <see cref="F:System.Windows.DataFormats.XamlPackage"></see>.</param>
			<param name="stream">A readable stream that contains data to load into the current selection.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when stream or dataFormat is null.</exception>
			<exception cref="T:System.ArgumentException">Occurs when the specified data format is unsupported.  May also be raised if content loaded from stream does not match the specified data format.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextRange.Save(System.IO.Stream,System.String)">
			<summary>Saves the current selection to a specified stream in a specified data format.</summary>
			<param name="dataFormat">A data format to save the current selection as.  Currently supported data formats are <see cref="F:System.Windows.DataFormats.Rtf"></see>, <see cref="F:System.Windows.DataFormats.Text"></see>, <see cref="F:System.Windows.DataFormats.Xaml"></see>, and <see cref="F:System.Windows.DataFormats.XamlPackage"></see>.</param>
			<param name="stream">An empty, writable stream to save the current selection to.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when stream or dataFormat is null.</exception>
			<exception cref="T:System.ArgumentException">Occurs when the specified data format is unsupported.  May also be raised if content loaded from stream does not match the specified data format.</exception>
		</member>
		<member name="M:System.Windows.Documents.TextRange.Select(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
			<summary>Updates the current selection, taking two <see cref="T:System.Windows.Documents.TextPointer"></see> positions to indicate the updated selection.</summary>
			<param name="position2">A movable position that marks the other end of the updated selection.</param>
			<param name="position1">A fixed anchor position that marks one end of the updated selection.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when position1 or position2 is null.</exception>
			<exception cref="T:System.ArgumentException">Occurs when position1 and position2 are not positioned within the same document.</exception>
		</member>
		<member name="P:System.Windows.Documents.TextRange.End">
			<summary>Get the position that marks the end of the current selection.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> that points to the end of the current selection.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextRange.IsEmpty">
			<summary>Gets a value indicating whether or not the current selection is empty.</summary>
			<returns>true if the current selection is empty; otherwise, false.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextRange.Start">
			<summary>Gets the position that marks the beginning of the current selection.</summary>
			<returns>A <see cref="T:System.Windows.Documents.TextPointer"></see> that points to the beginning of the current selection.This property has no default value.</returns>
		</member>
		<member name="P:System.Windows.Documents.TextRange.Text">
			<summary>Gets or sets the plain text contents of the current selection.</summary>
			<returns>A string containing the plain text contents of the current selection.This property has no default value.</returns>
			<exception cref="T:System.ArgumentNullException">Occurs when an attempt is made to set this property to null.</exception>
		</member>
		<member name="T:System.Windows.Documents.TextSelection">
			<summary>Encapsulates the selection state for the <see cref="T:System.Windows.Controls.RichTextBox"></see> control. This class cannot be inherited.</summary>
		</member>
		<member name="T:System.Windows.Documents.Typography">
			<summary>Provides access to a rich set of OpenType typography properties. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetAnnotationAlternates(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.TextElement.FontFamily"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates"></see> property.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetCapitals(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Capitals"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Capitals"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Capitals"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetCapitalSpacing(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetCaseSensitiveForms(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetContextualAlternates(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetContextualLigatures(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetContextualSwashes(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetDiscretionaryLigatures(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetEastAsianExpertForms(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetEastAsianLanguage(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetEastAsianWidths(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetFraction(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Fraction"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Fraction"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Fraction"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetHistoricalForms(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetHistoricalLigatures(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetKerning(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Kerning"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Kerning"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Kerning"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetMathematicalGreek(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetNumeralAlignment(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetNumeralStyle(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetSlashedZero(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStandardLigatures(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStandardSwashes(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticAlternates(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet1(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet10(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet11(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet12(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet13(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet14(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet15(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet16(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet17(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet18(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet19(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet2(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet20(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet3(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet4(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet5(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet6(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet7(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet8(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetStylisticSet9(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.GetVariants(System.Windows.DependencyObject)">
			<summary>Returns the value of the <see cref="P:System.Windows.Documents.Typography.Variants"></see> attached property for a specified dependency object.</summary>
			<returns>The current value of the <see cref="P:System.Windows.Documents.Typography.Variants"></see> attached property on the specified dependency object.</returns>
			<param name="element">The dependency object for which to retrieve the value of the <see cref="P:System.Windows.Documents.Typography.Variants"></see> property.</param>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetAnnotationAlternates(System.Windows.DependencyObject,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.AnnotationAlternates"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetCapitals(System.Windows.DependencyObject,System.Windows.FontCapitals)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Capitals"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Capitals"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetCapitalSpacing(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.CapitalSpacing"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetCaseSensitiveForms(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.CaseSensitiveForms"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetContextualAlternates(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualAlternates"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetContextualLigatures(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualLigatures"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetContextualSwashes(System.Windows.DependencyObject,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.ContextualSwashes"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetDiscretionaryLigatures(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.DiscretionaryLigatures"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetEastAsianExpertForms(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianExpertForms"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetEastAsianLanguage(System.Windows.DependencyObject,System.Windows.FontEastAsianLanguage)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianLanguage"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetEastAsianWidths(System.Windows.DependencyObject,System.Windows.FontEastAsianWidths)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.EastAsianWidths"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetFraction(System.Windows.DependencyObject,System.Windows.FontFraction)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Fraction"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Fraction"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetHistoricalForms(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalForms"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetHistoricalLigatures(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.HistoricalLigatures"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetKerning(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Kerning"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Kerning"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetMathematicalGreek(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.MathematicalGreek"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetNumeralAlignment(System.Windows.DependencyObject,System.Windows.FontNumeralAlignment)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.NumeralAlignment"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetNumeralStyle(System.Windows.DependencyObject,System.Windows.FontNumeralStyle)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.NumeralStyle"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetSlashedZero(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.SlashedZero"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStandardLigatures(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StandardLigatures"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStandardSwashes(System.Windows.DependencyObject,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StandardSwashes"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticAlternates(System.Windows.DependencyObject,System.Int32)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticAlternates"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet1(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet1"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet10(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet10"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet11(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet11"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet12(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet12"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet13(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet13"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet14(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet14"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet15(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet15"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet16(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet16"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet17(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet17"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet18(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet18"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet19(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet19"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet2(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet2"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet20(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet20"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet3(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet3"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet4(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet4"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet5(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet5"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet6(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet6"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet7(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet7"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet8(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet8"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetStylisticSet9(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet9"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.StylisticSet9"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Typography.SetVariants(System.Windows.DependencyObject,System.Windows.FontVariants)">
			<summary>Sets the value of the <see cref="P:System.Windows.Documents.Typography.Variants"></see> attached property for a specified dependency object.</summary>
			<param name="element">The dependency object for which to set the value of the <see cref="P:System.Windows.Documents.Typography.Variants"></see> property.</param>
			<param name="value">The new value to set the property to.</param>
			<exception cref="T:System.ArgumentNullException">Raised when element is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.Typography.AnnotationAlternates">
			<summary>Gets or sets a value that specifies the index of an alternate annotation form.</summary>
			<returns>The index of the alternate annotation form. The default value is 0 (zero).</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.Capitals">
			<summary>Gets or sets a <see cref="T:System.Windows.FontCapitals"></see> enumerated value that indicates the capital form of the selected font.</summary>
			<returns>A <see cref="T:System.Windows.FontCapitals"></see> enumerated value. The default value is <see cref="F:System.Windows.FontCapitals.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.CapitalSpacing">
			<summary>Gets or sets a value that determines whether inter-glyph spacing for all-capital text is globally adjusted to improve readability.</summary>
			<returns>true if spacing is adjusted; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.CaseSensitiveForms">
			<summary>Gets or sets a value that determines whether glyphs adjust their vertical position to better align with uppercase glyphs.</summary>
			<returns>true if the vertical position is adjusted; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.ContextualAlternates">
			<summary>Gets or sets a value that determines whether custom glyph forms can be used based upon the context of the text being rendered.</summary>
			<returns>true if custom glyph forms can be used; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.ContextualLigatures">
			<summary>Gets or sets a value that determines whether contextual ligatures are enabled.</summary>
			<returns>true if contextual ligatures are enabled; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.ContextualSwashes">
			<summary>Gets or sets a value that specifies the index of a contextual swashes form.</summary>
			<returns>The index of the standard swashes form. The default value is 0 (zero).</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.DiscretionaryLigatures">
			<summary>Gets or sets a value that determines whether discretionary ligatures are enabled.</summary>
			<returns>true if discretionary ligatures are enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.EastAsianExpertForms">
			<summary>Gets or sets a value that determines whether the standard Japanese font forms have been replaced with the corresponding preferred typographic forms.</summary>
			<returns>true if standard Japanese font forms have been replaced with the corresponding preferred typographic forms; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.EastAsianLanguage">
			<summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianLanguage"></see> enumerated value that indicates the version of glyphs to be used for a specific writing system or language.</summary>
			<returns>A <see cref="T:System.Windows.FontEastAsianLanguage"></see> enumerated value. The default value is <see cref="F:System.Windows.FontEastAsianLanguage.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.EastAsianWidths">
			<summary>Gets or sets a <see cref="T:System.Windows.FontEastAsianWidths"></see> enumerated value that indicates the proportional width to be used for Latin characters in an East Asian font.</summary>
			<returns>A <see cref="T:System.Windows.FontEastAsianWidths"></see> enumerated value. The default value is <see cref="F:System.Windows.FontEastAsianWidths.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.Fraction">
			<summary>Gets or sets a <see cref="T:System.Windows.FontFraction"></see> enumerated value that indicates the fraction style.</summary>
			<returns>A <see cref="T:System.Windows.FontFraction"></see> enumerated value. The default value is <see cref="F:System.Windows.FontFraction.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.HistoricalForms">
			<summary>Gets or sets a value that determines whether historical forms are enabled.</summary>
			<returns>true if historical forms are enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.HistoricalLigatures">
			<summary>Gets or sets a value that indicates whether historical ligatures are enabled.</summary>
			<returns>true if historical ligatures are enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.Kerning">
			<summary>Gets or sets a value that indicates whether kerning is enabled.</summary>
			<returns>true if kerning is enabled; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.MathematicalGreek">
			<summary>Gets or sets a value that indicates whether standard typographic font forms of Greek glyphs have been replaced with corresponding font forms commonly used in mathematical notation.</summary>
			<returns>true if mathematical Greek forms are enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.NumeralAlignment">
			<summary>Gets or sets a <see cref="T:System.Windows.FontNumeralAlignment"></see> enumerated value that indicates the alighnment of widths when using numerals.</summary>
			<returns>A <see cref="T:System.Windows.FontNumeralAlignment"></see> enumerated value. The default value is <see cref="F:System.Windows.FontNumeralAlignment.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.NumeralStyle">
			<summary>Gets or sets a <see cref="T:System.Windows.FontNumeralStyle"></see> enumerated value that determines the set of glyphs that are used to render numeric alternate font forms.</summary>
			<returns>A <see cref="T:System.Windows.FontNumeralStyle"></see> enumerated value. The default value is <see cref="F:System.Windows.FontNumeralStyle.Normal"></see>.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.SlashedZero">
			<summary>Gets or sets a value that indicates whether a nominal zero font form should be replaced with a slashed zero.</summary>
			<returns>true if slashed zero forms are enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StandardLigatures">
			<summary>Gets or sets a value that indicates whether standard ligatures are enabled.</summary>
			<returns>true if standard ligatures are enabled; otherwise, false. The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StandardSwashes">
			<summary>Gets or sets a value that specifies the index of a standard swashes form.</summary>
			<returns>The index of the standard swashes form. The default value is 0 (zero).</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticAlternates">
			<summary>Gets or sets a value that specifies the index of a stylistic alternates form.</summary>
			<returns>The index of the stylistic alternates form. The default value is 0 (zero).</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet1">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet10">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet11">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet12">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet13">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet14">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet15">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet16">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet17">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet18">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet19">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet2">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet20">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet3">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet4">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet5">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet6">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet7">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet8">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.StylisticSet9">
			<summary>Gets or sets a value that indicates whether a stylistic set of a font form is enabled.</summary>
			<returns>true if the stylistic set of the font form is enabled; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Typography.Variants">
			<summary>Gets or sets a <see cref="T:System.Windows.FontVariants"></see> enumerated value that indicates a variation of the standard typographic form to be used.</summary>
			<returns>A <see cref="T:System.Windows.FontVariants"></see> enumerated value. The default value is <see cref="F:System.Windows.FontVariants.Normal"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Underline">
			<summary>An inline-level flow content element which causes content to render with an underlined text decoration.</summary>
		</member>
		<member name="M:System.Windows.Documents.Underline.#ctor">
			<summary>Initializes a new, empty instance of the <see cref="T:System.Windows.Documents.Underline"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Underline"></see>.</summary>
			<param name="childInline">An <see cref="T:System.Windows.Documents.Inline"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Underline"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.Inline,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline"></see> class, taking a specified <see cref="T:System.Windows.Documents.Inline"></see> object as the initial contents of the new <see cref="T:System.Windows.Documents.Underline"></see>, and a <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position for the new <see cref="T:System.Windows.Documents.Inline"></see> element.</summary>
			<param name="childInline">An <see cref="T:System.Windows.Documents.Inline"></see> object specifying the initial contents of the new <see cref="T:System.Windows.Documents.Underline"></see>.  This parameter may be null, in which case no <see cref="T:System.Windows.Documents.Inline"></see> is inserted.</param>
			<param name="insertionPosition">A <see cref="T:System.Windows.Documents.TextPointer"></see> specifying an insertion position at which to insert the <see cref="T:System.Windows.Documents.Underline"></see> element after it is created, or null for no automatic insertion.</param>
		</member>
		<member name="M:System.Windows.Documents.Underline.#ctor(System.Windows.Documents.TextPointer,System.Windows.Documents.TextPointer)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Underline"></see> class, taking two <see cref="T:System.Windows.Documents.TextPointer"></see> objects that indicate the beginning and end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline"></see>.</summary>
			<param name="end">A <see cref="T:System.Windows.Documents.TextPointer"></see> indicating the end of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline"></see>.</param>
			<param name="start">A <see cref="T:System.Windows.Documents.TextPointer"></see> indicating the beginning of a selection of content to be contained by the new <see cref="T:System.Windows.Documents.Underline"></see>.</param>
			<exception cref="T:System.ArgumentException">Raised when start and end do not resolve to a range of content suitable for enclosure by a <see cref="T:System.Windows.Documents.Underline"></see> element, for example, if start and end indicate positions in different paragraphs.</exception>
			<exception cref="T:System.ArgumentNullException">Raised when start or end is null.</exception>
		</member>
		<member name="T:System.Windows.Documents.ZoomPercentageConverter">
			<summary>Implements a type converter for converting <see cref="T:System.Double"></see> (used as the value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom"></see>) to and from other types. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Documents.ZoomPercentageConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.ZoomPercentageConverter"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.ZoomPercentageConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Converts the <see cref="T:System.Double"></see> (used as the value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom"></see>) to an object of the specified type. </summary>
			<returns><see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> when the converter cannot produce a value; for example, when value is null or when targetType is not <see cref="T:System.Double"></see> or <see cref="T:System.String"></see>.- or -The new <see cref="T:System.Object"></see> of the designated type. As implemented in this class, this must be either a <see cref="T:System.Double"></see> or a <see cref="T:System.String"></see>. If it is a string, it will be formatted appropriately for the culture.</returns>
			<param name="culture">The language and culture assumed during the conversion.</param>
			<param name="targetType">The type to which value is to be converted. This must be <see cref="T:System.Double"></see> or <see cref="T:System.String"></see>. See Remarks.</param>
			<param name="parameter">null. See Remarks.</param>
			<param name="value">The current value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.ZoomPercentageConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Returns a previously converted value of <see cref="P:System.Windows.Controls.DocumentViewer.Zoom"></see> back to a <see cref="T:System.Double"></see> that can be assigned to <see cref="P:System.Windows.Controls.DocumentViewer.Zoom"></see>. </summary>
			<returns><see cref="F:System.Windows.DependencyProperty.UnsetValue"></see> when the converter cannot produce a value; for example, when value is not a valid percentage when targetType is not <see cref="T:System.Double"></see> or <see cref="T:System.String"></see>.- or -A <see cref="T:System.Double"></see> representing the zoom percentage of a <see cref="T:System.Windows.Controls.DocumentViewer"></see>.</returns>
			<param name="culture">The language and culture assumed during the conversion.</param>
			<param name="targetType">The type of value. This must be <see cref="T:System.Double"></see> or <see cref="T:System.String"></see>. See Remarks.</param>
			<param name="parameter">null. See Remarks.</param>
			<param name="value">The object that is to be converted back to a <see cref="T:System.Double"></see>. </param>
		</member>
		<member name="N:System.Windows.Documents.DocumentStructures">
			<summary>Provides classes to describe the structure of an <see cref="T:System.Windows.Xps.Packaging.XpsDocument"></see> in terms of sections, paragraphs, figures, bulleted or numbered lists, and tables. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.BlockElement">
			<summary>Do not use.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.BlockElement.#ctor">
			<summary>Do not use. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.FigureStructure">
			<summary>Represents a drawing, chart, or diagram in a document. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.FigureStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> to add. </param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks. </exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.FigureStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.ListItemStructure">
			<summary>Represents an item in a list or outline. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ListItemStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks.</exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ListItemStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="P:System.Windows.Documents.DocumentStructures.ListItemStructure.Marker">
			<summary>Gets or sets the name of the numeral, character, or bullet symbol for the list item as it appears in the formatting markup of the document.</summary>
			<returns>A <see cref="T:System.String"></see> marking list item.</returns>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.ListStructure">
			<summary>Represents a list of items in a document.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ListStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ListStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks.</exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ListStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.NamedElement">
			<summary>Identifies an element within the hierarchy of elements under a <see cref="T:System.Windows.Documents.FixedPage"></see>.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.NamedElement.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement"></see> class.</summary>
		</member>
		<member name="P:System.Windows.Documents.DocumentStructures.NamedElement.NameReference">
			<summary>Gets or sets the name of the element in the <see cref="T:System.Windows.Documents.FixedPage"></see> markup hierarchy that provides the content for the parent of the <see cref="T:System.Windows.Documents.DocumentStructures.NamedElement"></see>. </summary>
			<returns>The name of the element.</returns>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.ParagraphStructure">
			<summary>Represents a paragraph in a document. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.ParagraphStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks.</exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.ParagraphStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.SectionStructure">
			<summary>Represents a section of content in a document.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.SectionStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.SectionStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.SemanticBasicElement">
			<summary>Do not use. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.StoryBreak">
			<summary>Identifies the start or end of story composed of one or more <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment"></see> elements.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.StoryBreak.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryBreak"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.StoryFragment">
			<summary>Represents all or part of a story within an XPS document.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks.</exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.StoryFragment.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName">
			<summary>Gets or sets the name of the story fragment. </summary>
			<returns>A <see cref="T:System.String"></see> representing the name of this fragment. </returns>
		</member>
		<member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType">
			<summary>Gets or sets the type of fragment. </summary>
			<returns>A <see cref="T:System.String"></see> representing the type of fragment.</returns>
		</member>
		<member name="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName">
			<summary>Gets or sets the name of the story. </summary>
			<returns>A <see cref="T:System.String"></see> representing the name of the story.</returns>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.StoryFragments">
			<summary>Represents a set of one or more <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment"></see> elements.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragments"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.StoryFragments.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.TableCellStructure">
			<summary>Represents a cell in a table.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableCellStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks. </exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableCellStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.ColumnSpan">
			<summary>Gets or sets the number of columns spanned by the cell.</summary>
			<returns>The number of columns that the cell spans. The default is 1.</returns>
		</member>
		<member name="P:System.Windows.Documents.DocumentStructures.TableCellStructure.RowSpan">
			<summary>Gets or sets the number of rows spanned by the cell.</summary>
			<returns>The number of rows that the cell spans. The default is 1.</returns>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure">
			<summary>Represents a set of one or more rows in a table.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableRowGroupStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks.</exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableRowGroupStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.TableRowStructure">
			<summary>Represents a row of one or more cells in a table.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableRowStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks.</exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableRowStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="T:System.Windows.Documents.DocumentStructures.TableStructure">
			<summary>Represents a table in a document.</summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableStructure.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.DocumentStructures.TableStructure"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
			<param name="value">The child <see cref="T:System.Object"></see> that is added.</param>
			<exception cref="T:System.ArgumentException">value is not one of the types that can be a child of this class. See Remarks.</exception>
		</member>
		<member name="M:System.Windows.Documents.DocumentStructures.TableStructure.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Microsoft .NET Framework version 3.0 infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="N:System.Windows.Documents.Serialization">
			<summary>Provides classes that support the creation and use of run-time accessible plug-in serializers which read and write documents in different data formats.</summary>
		</member>
		<member name="T:System.Windows.Documents.Serialization.ISerializerFactory">
			<summary>Provides a means for creating a software component that can serialize any part of a Windows Presentation Foundation (WPF) application's content to a manufacturer's proprietary format. </summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter(System.IO.Stream)">
			<summary>Initializes an object derived from the abstract <see cref="T:System.Windows.Documents.Serialization.SerializerWriter"></see> class for the specified <see cref="T:System.IO.Stream"></see>. </summary>
			<returns>An object of a class derived from <see cref="T:System.Windows.Documents.Serialization.SerializerWriter"></see>.</returns>
			<param name="stream">The <see cref="T:System.IO.Stream"></see> to which the returned object writes.</param>
		</member>
		<member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DefaultFileExtension">
			<summary>Gets the default extension for files of the manufacturer's proprietary format. </summary>
			<returns>A <see cref="T:System.String"></see> representing the proprietary format's default file extension.</returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.ISerializerFactory.DisplayName">
			<summary>Gets the public name of the manufacturer's serializing component. </summary>
			<returns>A <see cref="T:System.String"></see> representing the public name of the serializing component. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerName">
			<summary>Gets the name of the serializing component's manufacturer. </summary>
			<returns>A <see cref="T:System.String"></see> representing the manufacturer's name. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.ISerializerFactory.ManufacturerWebsite">
			<summary>Gets the web address of the serializing component's manufacturer. </summary>
			<returns>A <see cref="T:System.Uri"></see> representing the manufacturer's website.</returns>
		</member>
		<member name="T:System.Windows.Documents.Serialization.SerializerDescriptor">
			<summary>Provides information about installed plug-in serializers.  This class cannot be inherited.    </summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.CreateFromFactoryInstance(System.Windows.Documents.Serialization.ISerializerFactory)">
			<summary>Creates a new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see> through a given <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory"></see> implementation. </summary>
			<returns>A new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see> with its properties initialized with values from the given <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory"></see> implementation. </returns>
			<param name="factoryInstance">The source of data for the new <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see>.</param>
			<exception cref="T:System.ArgumentNullException">factoryInstance is null.</exception>
			<exception cref="T:System.ArgumentException">One or more of the following properties of the factoryInstance is null: <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName"></see>, <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName"></see>, <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite"></see>, and <see cref="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension"></see></exception>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.Equals(System.Object)">
			<summary>Tests two <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see> objects for equality.</summary>
			<returns>true if both are equal; otherwise, false. </returns>
			<param name="obj">The object to be compared with this <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerDescriptor.GetHashCode">
			<summary>Gets the unique hash code value of the serializer. </summary>
			<returns>The unique hash code value of the serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyName">
			<summary>Gets the name of the assembly that contains the serializer. </summary>
			<returns>The name of the assembly (usually a DLL) that contains the plug-in serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyPath">
			<summary>Gets the path to the assembly file that contains the serializer. </summary>
			<returns>The path to the assembly file that contains the plug-in serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.AssemblyVersion">
			<summary>Gets the version of the assembly that contains the serializer. </summary>
			<returns>The version of the assembly that contains the plug-in serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DefaultFileExtension">
			<summary>Gets the default extension associated with files that the serializer outputs. </summary>
			<returns>The default extension associated with files that the serializer outputs. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.DisplayName">
			<summary>Gets the public display name of the serializer. </summary>
			<returns>The public display name of the serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.FactoryInterfaceName">
			<summary>Gets the name of the <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory"></see> derived class that implements the serializer. </summary>
			<returns>The name of the <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory"></see> derived class that implements the serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.IsLoadable">
			<summary>Gets a value indicating whether the serializer can be loaded with the currently installed version of Microsoft .NET Framework version 3.0.</summary>
			<returns>true if the serializer assembly can be loaded; otherwise, false.  The default is false.</returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerName">
			<summary>Gets the name of the company that developed the serializer. </summary>
			<returns>The name of the company that developed the plug-in serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.ManufacturerWebsite">
			<summary>Gets the web address of the company that developed the serializer. </summary>
			<returns>The web address of the company that developed the serializer. </returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerDescriptor.WinFXVersion">
			<summary>Gets the version of Microsoft .NET Framework version 3.0 required by the serializer.</summary>
			<returns>The version of Microsoft .NET Framework version 3.0 required by the plug-in serializer. </returns>
		</member>
		<member name="T:System.Windows.Documents.Serialization.SerializerProvider">
			<summary>Manages serialization plug-ins created, using <see cref="T:System.Windows.Documents.Serialization.ISerializerFactory"></see> and <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see>, by manufacturers who have their own proprietary serialization formats. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerProvider.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerProvider"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter(System.Windows.Documents.Serialization.SerializerDescriptor,System.IO.Stream)">
			<summary>Initializes an object derived from the abstract <see cref="T:System.Windows.Documents.Serialization.SerializerWriter"></see> class for the specified <see cref="T:System.IO.Stream"></see> that will use the specified descriptor.</summary>
			<returns>An object of a class derived from <see cref="T:System.Windows.Documents.Serialization.SerializerWriter"></see>.</returns>
			<param name="stream">The <see cref="T:System.IO.Stream"></see> to which the returned object writes.</param>
			<param name="serializerDescriptor">A <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see> that contains serialization information for the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter"></see>.</param>
			<exception cref="T:System.ArgumentException">The serializerDescriptor is specifying the wrong version.-or-It is not registered.-or-The assembly file cannot be found.-or-The assembly cannot be loaded.</exception>
			<exception cref="T:System.ArgumentNullException">One of the parameters is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerProvider.RegisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor,System.Boolean)">
			<summary>Registers a serializer plug-in. </summary>
			<param name="overwrite">true to overwrite an existing registration for the same plug-in; otherwise, false. See Remarks.</param>
			<param name="serializerDescriptor">The <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see> for the plug-in.</param>
			<exception cref="T:System.ArgumentException">overwrite is false and the plug-in is already registered.</exception>
			<exception cref="T:System.ArgumentNullException">serializerDescriptor is null.</exception>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerProvider.UnregisterSerializer(System.Windows.Documents.Serialization.SerializerDescriptor)">
			<summary>Deletes a serializer plug-in from the registry.</summary>
			<param name="serializerDescriptor">The <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see> for the plug-in.</param>
			<exception cref="T:System.ArgumentException">The plug-in is not registered. See Remarks.</exception>
			<exception cref="T:System.ArgumentNullException">serializerDescriptor is null.</exception>
		</member>
		<member name="P:System.Windows.Documents.Serialization.SerializerProvider.InstalledSerializers">
			<summary>Gets a collection of the installed plug-in serializers.</summary>
			<returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"></see> of the <see cref="T:System.Windows.Documents.Serialization.SerializerDescriptor"></see> objects already registered. </returns>
		</member>
		<member name="T:System.Windows.Documents.Serialization.SerializerWriter">
			<summary>Defines the abstract methods that are required to implement a plug-in document output serializer. </summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled">
			<summary>When overridden in a derived class, occurs when a <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync"></see> operation is performed.</summary>
		</member>
		<member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted">
			<summary>When overridden in a derived class, occurs when a write operation finishes.</summary>
		</member>
		<member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired">
			<summary>When overridden in a derived class, occurs just before a <see cref="T:System.Printing.PrintTicket"></see> is added to a stream by a <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write"></see> or <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync"></see> method.</summary>
		</member>
		<member name="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged">
			<summary>When overridden in a derived class, occurs when the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter"></see> updates its progress. </summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync">
			<summary>When overridden in a derived class, cancels an asynchronous write operation.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator">
			<summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator"></see> that writes collated <see cref="T:System.Windows.Media.Visual"></see> elements.</summary>
			<returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator"></see> that writes collated <see cref="T:System.Windows.Media.Visual"></see> elements to the document output serialization <see cref="T:System.IO.Stream"></see>. </returns>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator"></see> that writes collated <see cref="T:System.Windows.Media.Visual"></see> elements together with an associated given print ticket.</summary>
			<returns>A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator"></see> that writes collated <see cref="T:System.Windows.Media.Visual"></see> elements to the document output serialization <see cref="T:System.IO.Stream"></see>.</returns>
			<param name="documentPT">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocument"></see> content.</param>
			<param name="documentSequencePT">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)">
			<summary>When overridden in a derived class, synchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, synchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the documentPaginator content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="printTicket">The default print preferences for the fixedDocument content.</param>
			<param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the fixedDocumentSequence content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the fixedPage content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the visual element.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)">
			<summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the documentPaginator content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
			<param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="printTicket">The default print preferences for the fixedDocument content.</param>
			<param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the fixedDocumentSequence content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the fixedPage content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the visual element.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="documentPaginator">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
			<param name="printTicket">The default print preferences for the documentPaginator content.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="printTicket">The default print preferences for the fixedDocument content.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
			<param name="fixedDocument">The document to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedDocumentSequence">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the fixedDocumentSequence content.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage"></see> together with an associated <see cref="T:System.Printing.PrintTicket"></see> to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="fixedPage">The page to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the fixedPage content.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element together with an associated <see cref="T:System.Printing.PrintTicket"></see> and identifier to the serialization <see cref="T:System.IO.Stream"></see>.</summary>
			<param name="visual">The <see cref="T:System.Windows.Media.Visual"></see> element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
			<param name="printTicket">The default print preferences for the visual element.</param>
		</member>
		<member name="T:System.Windows.Documents.Serialization.SerializerWriterCollator">
			<summary>Defines the abstract methods required to implement a plug-in document serialization <see cref="T:System.Windows.Media.Visual"></see> collator.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite">
			<summary>When overridden in a derived class, initiates the start of a batch write operation.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel">
			<summary>When overridden in a derived class, cancels a synchronous <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write"></see> operation. </summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync">
			<summary>When overridden in a derived class, cancels an asynchronous <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync"></see> operation. </summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite">
			<summary>When overridden in a derived class, completes a batch write operation.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element to the serialization stream.</summary>
			<param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element together with an associated print ticket to the serialization stream.</summary>
			<param name="visual">A <see cref="T:System.Windows.Media.Visual"></see> that is written to the stream.</param>
			<param name="printTicket">An object specifying preferences for how the material should be printed.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element to the serialization stream.</summary>
			<param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element with a specified event identifier to the serialization stream.</summary>
			<param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element together with an associated print ticket to the serialization stream.</summary>
			<param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="printTicket">The default print preferences for the visual element.</param>
		</member>
		<member name="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)">
			<summary>When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual"></see> element together with an associated print ticket and identifier to the serialization stream.</summary>
			<param name="visual">The visual element to write to the serialization <see cref="T:System.IO.Stream"></see>.</param>
			<param name="userState">A caller-specified object to identify the asynchronous write operation.</param>
			<param name="printTicket">The default print preferences for the visual element.</param>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.WritingCancelledEventArgs.#ctor(System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingCancelledEventArgs"></see> class.</summary>
			<param name="exception">The exception that canceled the write operation.</param>
		</member>
		<member name="P:System.Windows.Documents.Serialization.WritingCancelledEventArgs.Error">
			<summary>Gets the exception that canceled the write operation.</summary>
			<returns>The exception that canceled the write operation.</returns>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingCancelledEventHandler">
			<summary>Represents a method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCancelled"></see> event.</summary>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.WritingCompletedEventArgs.#ctor(System.Boolean,System.Object,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingCompletedEventArgs"></see> class.</summary>
			<param name="e xception">Error that occurred during the write operation or null if there is no error.</param>
			<param name="state">The user-supplied state object that was passed to the <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync"></see> method.</param>
			<param name="cancel l ed">true if canceled; otherwise, false if the write operation completed normally.</param>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingCompletedEventHandler">
			<summary>Represents a method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingCompleted"></see> event of the <see cref="T:System.Windows.Xps.XpsDocumentWriter"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.#ctor(System.Windows.Xps.Serialization.PrintTicketLevel,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs"></see> class.</summary>
			<param name="printTicketLevel">An enumeration value that specifies scope of the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket"></see> as a page, document, or sequence of documents.</param>
			<param name="sequence">Based on the scope of defined by printTicketLevel, the number of pages or the number of documents associated with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket"></see>.</param>
		</member>
		<member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket">
			<summary>Gets or sets the default printer settings to use when the document is printed.</summary>
			<returns>The default printer settings to use when the document is printed.</returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicketLevel">
			<summary>Gets a value that indicates the scope of the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired"></see> event.</summary>
			<returns>An enumeration that indicates the scope of the <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired"></see> event as for a sequence of documents, a single document, or a single page.</returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.Sequence">
			<summary>Gets the number of documents or pages output with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket"></see>.</summary>
			<returns>The number of documents or pages output with the <see cref="P:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventArgs.CurrentPrintTicket"></see>.</returns>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingPrintTicketRequired"></see> event of an <see cref="T:System.Windows.Xps.XpsDocumentWriter"></see>.</summary>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged"></see> event.</summary>
		</member>
		<member name="M:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.#ctor(System.Windows.Documents.Serialization.WritingProgressChangeLevel,System.Int32,System.Int32,System.Object)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs"></see> class.</summary>
			<param name="progressPercentage">The percentage of data that has been written.</param>
			<param name="number">Based on the scope defined by writingLevel, the number of documents or the number of pages that have been written.</param>
			<param name="state">The user-supplied object that identifies the write operation.</param>
			<param name="writingLevel">An enumeration value that specifies the scope of the progress changed event such as for an entire multiple document sequence, a single document, or a single page.</param>
		</member>
		<member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.Number">
			<summary>Gets the number of documents or pages that have been written.</summary>
			<returns>The number of documents or pages that have been written at the time of the event.</returns>
		</member>
		<member name="P:System.Windows.Documents.Serialization.WritingProgressChangedEventArgs.WritingLevel">
			<summary>Gets a value that indicates the scope of the writing progress.</summary>
			<returns>An enumeration that indicates the scope of writing a multiple document sequence, a single document, or single page.</returns>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingProgressChangedEventHandler">
			<summary>Represents a method that handles the <see cref="E:System.Windows.Xps.XpsDocumentWriter.WritingProgressChanged"></see> event of an <see cref="T:System.Windows.Xps.XpsDocumentWriter"></see>.</summary>
		</member>
		<member name="T:System.Windows.Documents.Serialization.WritingProgressChangeLevel">
			<summary>Specifies the scope of a <see cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged"></see> event.</summary>
		</member>
		<member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentSequenceWritingProgress">
			<summary>The output progress of a multiple document sequence.</summary>
		</member>
		<member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedDocumentWritingProgress">
			<summary>The output progress of a single document.</summary>
		</member>
		<member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.FixedPageWritingProgress">
			<summary>The output progress of a single page.</summary>
		</member>
		<member name="F:System.Windows.Documents.Serialization.WritingProgressChangeLevel.None">
			<summary>The output progress is unspecified.</summary>
		</member>
		<member name="T:System.Windows.Input.CommandConverter">
			<summary>Converts an <see cref="T:System.Windows.Input.ICommand"></see> object to and from other types.</summary>
		</member>
		<member name="M:System.Windows.Input.CommandConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Input.CommandConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ICommand"></see>, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="sourceType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an instance of <see cref="T:System.Windows.Input.ICommand"></see> can be converted to the specified type, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Attempts to convert the specified object to an <see cref="T:System.Windows.Input.ICommand"></see>, using the specified context.</summary>
			<returns>The converted object, or null if source is an empty string.</returns>
			<param name="culture">Culture specific information.</param>
			<param name="source">The object to convert.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<exception cref="T:System.NotSupportedException">source cannot be converted.</exception>
		</member>
		<member name="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Attempts to convert an <see cref="T:System.Windows.Input.ICommand"></see> to the specified type, using the specified context.</summary>
			<returns>The converted object, or an empty string if value is null.</returns>
			<param name="culture">Culture specific information.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type to convert the object to.</param>
			<param name="value">The object to convert.</param>
			<exception cref="T:System.ArgumentNullException">destinationType is null.</exception>
			<exception cref="T:System.NotSupportedException">value cannot be converted.</exception>
		</member>
		<member name="T:System.Windows.Input.KeyboardNavigation">
			<summary>Provides logical and directional navigation between focusable objects. </summary>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigation.AcceptsReturnProperty">
			<summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigation.ControlTabNavigationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation"></see> attached property. </summary>
			<returns>The identifier for the  attached property.</returns>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigation.DirectionalNavigationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigation.IsTabStopProperty">
			<summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigation.TabIndexProperty">
			<summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigation.TabNavigationProperty">
			<summary>Identifies the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.GetAcceptsReturn(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn"></see> attached property for the specified element. </summary>
			<returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn"></see> property.</returns>
			<param name="element">The element from which to read the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.GetControlTabNavigation(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation"></see> attached property for the specified element. </summary>
			<returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation"></see> property.</returns>
			<param name="element">Element from which to get the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.GetDirectionalNavigation(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation"></see> attached property for the specified element. </summary>
			<returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation"></see> property.</returns>
			<param name="element">Element from which to get the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.GetIsTabStop(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop"></see> attached property for the specified element. </summary>
			<returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop"></see> property.</returns>
			<param name="element">The element from which to read the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.GetTabIndex(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex"></see>  attached property for the specified element. </summary>
			<returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex"></see> property.</returns>
			<param name="element">The element from which to read the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.GetTabNavigation(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation"></see> attached property for the specified element. </summary>
			<returns>The value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation"></see> property.</returns>
			<param name="element">Element from which to get the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.SetAcceptsReturn(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn"></see>  attached property for the specified element. </summary>
			<param name="enabled">The property value to set.</param>
			<param name="element">The element to write the attached property to.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.SetControlTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
			<summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation"></see> attached property for the specified element. </summary>
			<param name="mode">The property value to set</param>
			<param name="element">Element on which to set the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.SetDirectionalNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
			<summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation"></see> attached property for the specified element. </summary>
			<param name="mode">Property value to set.</param>
			<param name="element">Element on which to set the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.SetIsTabStop(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.IsTabStop"></see> attached property for the specified element. </summary>
			<param name="isTabStop">The property value to set.</param>
			<param name="element">The element to which to write the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.SetTabIndex(System.Windows.DependencyObject,System.Int32)">
			<summary>Set the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabIndex"></see> attached property for the specified element. </summary>
			<param name="element">The element on which to set the attached property to.</param>
			<param name="index">The property value to set.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="M:System.Windows.Input.KeyboardNavigation.SetTabNavigation(System.Windows.DependencyObject,System.Windows.Input.KeyboardNavigationMode)">
			<summary>Sets the value of the <see cref="P:System.Windows.Input.KeyboardNavigation.TabNavigation"></see> attached property for the specified element. </summary>
			<param name="mode">Property value to set.</param>
			<param name="element">Element on which to set the attached property.</param>
			<exception cref="T:System.ArgumentNullException">element is null.</exception>
		</member>
		<member name="P:System.Windows.Input.KeyboardNavigation.AcceptsReturn">
			<summary>Gets or sets a value indicating whether the Return character is accepted by a control.</summary>
			<returns>true if the Return character is accepted; otherwise, false.  The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Input.KeyboardNavigation.ControlTabNavigation">
			<summary>Gets or sets the logical control tab navigation behavior for the children of the element that this property is set on.</summary>
			<returns>How the container will move the focus when control tab navigation occurs.  The default value is <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue"></see>.</returns>
		</member>
		<member name="P:System.Windows.Input.KeyboardNavigation.DirectionalNavigation">
			<summary>Gets or sets the directional navigation behavior for the children of the element that this property is set on. </summary>
			<returns>How the container will move the focus when directional navigation occurs.  The default value is <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue"></see>.</returns>
		</member>
		<member name="P:System.Windows.Input.KeyboardNavigation.IsTabStop">
			<summary>Gets or sets a value indicating whether the element that this property is set on is a tab stop. </summary>
			<returns>true if the element is a tab stop; otherwise, false.  The default value is true.</returns>
		</member>
		<member name="P:System.Windows.Input.KeyboardNavigation.TabIndex">
			<summary>Gets or sets the tab index for the element that this property is set on. </summary>
			<returns>The tab index.</returns>
		</member>
		<member name="P:System.Windows.Input.KeyboardNavigation.TabNavigation">
			<summary>Gets or sets the logical tab navigation behavior for the children of the element that this property is set on. </summary>
			<returns>How the container will move the focus when tab navigation occurs.  The default value is <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue"></see>.</returns>
		</member>
		<member name="T:System.Windows.Input.KeyboardNavigationMode">
			<summary>Specifies the possible values for changes in focus when logical and directional navigation occurs.</summary>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigationMode.Contained">
			<summary>Depending on the direction of the navigation, focus returns to the first or the last item when the end or the beginning of the container is reached, but does not move past the beginning or end of the container.</summary>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigationMode.Continue">
			<summary>Each element receives keyboard focus, as long as it is a navigation stop.  Navigation leaves the containing element when an edge is reached.</summary>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigationMode.Cycle">
			<summary>Depending on the direction of the navigation, the focus returns to the first or the last item when the end or the beginning of the container is reached.  Focus cannot leave the container using logical navigation.</summary>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigationMode.Local">
			<summary>Tab Indexes are considered on local subtree only inside this container and behave like <see cref="F:System.Windows.Input.KeyboardNavigationMode.Continue"></see> after that.</summary>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigationMode.None">
			<summary>No keyboard navigation is allowed inside this container.</summary>
		</member>
		<member name="F:System.Windows.Input.KeyboardNavigationMode.Once">
			<summary>The container and all of its child elements as a whole receive focus only once. Either the first tree child or the or the last focused element in the group receives focus</summary>
		</member>
		<member name="N:System.Windows.Interop">
			<summary>Provides supporting classes for interoperation between Windows Presentation Foundation (WPF) and other technologies such as Win32 , and base classes for other specific interoperation scenarios involving WPF .</summary>
		</member>
		<member name="T:System.Windows.Interop.BrowserInteropHelper">
			<summary>A helper class that provides information about the browser environment in which a XAML browser application (XBAP) application is hosted.</summary>
		</member>
		<member name="P:System.Windows.Interop.BrowserInteropHelper.ClientSite">
			<summary>Returns a reference to an object that can be used to access the host browser via its OLE container interfaces (eg IOleClientSite::GetContainer();)</summary>
			<returns>An object that can be cast to IOleClientSite.</returns>
		</member>
		<member name="P:System.Windows.Interop.BrowserInteropHelper.IsBrowserHosted">
			<summary>Gets a value that specifies whether the current Windows Presentation Foundation (WPF) application is browser hosted.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is true if the application is browser hosted; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Interop.BrowserInteropHelper.Source">
			<summary>Gets the uniform resource identifier (URI) for the location from which a XAML browser application (XBAP) application was launched.</summary>
			<returns>The <see cref="T:System.Uri"></see> for the location from which a XAML browser application (XBAP) application was launched; otherwise, null.</returns>
		</member>
		<member name="T:System.Windows.Interop.DocObjHost">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="M:System.Windows.Interop.DocObjHost.#ctor">
			<summary> This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code. </summary>
		</member>
		<member name="T:System.Windows.Interop.HwndHost">
			<summary>Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content. </summary>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndHost"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Interop.HwndHost.MessageHook">
			<summary>Occurs for each unhandled message that is received by the hosted window. </summary>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
			<summary>When overridden in a derived class, creates the window to be hosted. </summary>
			<returns>The handle to the child Win32 window to create.</returns>
			<param name="hwndParent">The window handle of the parent window.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
			<summary>When overridden in a derived class, destroys the hosted window. </summary>
			<param name="hwnd">A structure that contains the window handle.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
			<summary> Immediately frees any system resources that the object might hold. </summary>
			<param name="disposing">Set to true if called from an explicit disposer and false otherwise.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
			<summary>Returns the size of the window represented by the <see cref="T:System.Windows.Interop.HwndHost"></see> object, as requested by layout engine operations. </summary>
			<returns>The size of the <see cref="T:System.Windows.Interop.HwndHost"></see> object.</returns>
			<param name="constraint">The size of the <see cref="T:System.Windows.Interop.HwndHost"></see> object.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
			<summary>Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> for <see cref="T:System.Windows.Interop.HwndHost"></see> . </summary>
			<returns>The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"></see> implementation. </returns>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
			<summary> Called when the hosted window receives a WM_KEYDOWNhttp://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputmessages/wm_keydown.asp message. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
			<summary> Called when the hosted window receives a WM_KEYUPhttp://msdn.microsoft.com/library/en-us/winui/winui/windowsuserinterface/userinput/keyboardinput/keyboardinputreference/keyboardinputmessages/wm_keyup.asp message. </summary>
			<param name="e">The event data.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
			<summary> Called when the hosted window's position changes. </summary>
			<param name="rcBoundingBox">The window's position.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
			<summary>Gets a value that indicates whether the sink or one of its children has focus. </summary>
			<returns>true if the sink or one of its children has focus; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
			<summary> Called when one of the mnemonics for a sink is invoked. </summary>
			<returns>true if the message was handled; otherwise, false.</returns>
			<param name="modifiers">Modifier keys.</param>
			<param name="msg">The message and associated data. Do not modify this structure. It is passed by reference only for performance reasons.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
			<summary>Do not use. This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be called from user code.</summary>
			<returns>A reference to this component's <see cref="T:System.Windows.Interop.IKeyboardInputSink"></see> interface.</returns>
			<param name="sink">A reference to the child component's <see cref="T:System.Windows.Interop.IKeyboardInputSink"></see> interface.</param>
			<exception cref="T:System.InvalidOperationException">Always when called.</exception>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)">
			<summary>Do not use. This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be called from user code.</summary>
			<returns>true if the focus has been set as requested; false if there are no tab stops. </returns>
			<param name="request">Specifies whether focus should be set to the first or the last tab stop.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
			<summary>Do not use. This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be called from user code.</summary>
			<returns>true if the message was handled; otherwise, false.</returns>
			<param name="modifiers">Modifier keys.</param>
			<param name="msg">The message and associated data. Do not modify this structure. It is passed by reference only for performance reasons.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
			<summary>Do not use. This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be called from user code.</summary>
			<returns>true if the message was handled and  should not be called; otherwise, false. </returns>
			<param name="modifiers">Modifier keys.</param>
			<param name="msg">The message and associated data. Do not modify this structure. It is passed by reference only for performance reasons.</param>
		</member>
		<member name="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
			<summary>When overridden in a derived class, accesses the window process (handle) of the hosted child window. </summary>
			<param name="lParam">Information that may be relevant to handling the message. This is typically used to reference an object.</param>
			<param name="hwnd">The window handle of the hosted window.</param>
			<param name="handled">Whether events resulting should be marked handled.</param>
			<param name="msg">The message to act upon.</param>
			<param name="wParam">Information that may be relevant to handling the message. This is typically used to store small pieces of information, such as flags.</param>
		</member>
		<member name="P:System.Windows.Interop.HwndHost.Handle">
			<summary>Gets the window handle  of the hosted window. </summary>
			<returns>The window handle.</returns>
		</member>
		<member name="P:System.Windows.Interop.HwndHost.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
			<summary>This property supports the Windows Presentation Foundation (WPF) framework and is not intended for use from user code.</summary>
			<returns>An object used for keyboard input processing.</returns>
		</member>
		<member name="T:System.Windows.Interop.IErrorPage">
			<summary>Defines the interaction between Windows Presentation Foundation (WPF) applications that are hosting interoperation content and interpreted by the Windows Presentation Foundation (WPF) executable, and a host supplied error page. </summary>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.DeploymentPath">
			<summary>Gets or sets the path to an application's deployment manifest.</summary>
			<returns>The path to an application's deployment manifest.</returns>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.ErrorFlag">
			<summary>Gets or sets a value that indicates whether this represents an error or some other condition such as a warning. true denotes an error.</summary>
			<returns>true denotes an error; false denotes another condition such as a warning.</returns>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.ErrorText">
			<summary>Gets or sets a verbose description of the error.</summary>
			<returns>Description of the error.</returns>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.ErrorTitle">
			<summary>Gets or sets the string title of the error page.</summary>
			<returns>The string title of the error page.</returns>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.GetWinFxCallback">
			<summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback"></see>  handler, which can handle requests for Microsoft .NET Framework version 3.0 runtime downloads.</summary>
			<returns>A <see cref="T:System.Windows.Threading.DispatcherOperationCallback"></see>  handler,</returns>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.LogFilePath">
			<summary>Gets or sets the string path to the error's log file, if any.</summary>
			<returns>Path to an associated error file. May be an empty string.</returns>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.RefreshCallback">
			<summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback"></see> handler, that can handle refresh of the error page.</summary>
			<returns>A <see cref="T:System.Windows.Threading.DispatcherOperationCallback"></see> handler to handle refresh of error page.</returns>
		</member>
		<member name="P:System.Windows.Interop.IErrorPage.SupportUri">
			<summary>Gets or sets a uniform resource identifier (URI) for support information associated with the error.</summary>
			<returns>A link for support information.</returns>
		</member>
		<member name="T:System.Windows.Interop.IProgressPage">
			<summary>Defines the interaction between Windows Presentation Foundation (WPF) applications that are hosting interoperation content, and a host supplied progress page. </summary>
		</member>
		<member name="M:System.Windows.Interop.IProgressPage.UpdateProgress(System.Int64,System.Int64)">
			<summary>Provides upload progress numeric information that can be used to update the progress indicators.</summary>
			<param name="bytesDownloaded">Total bytes downloaded thus far.</param>
			<param name="bytesTotal">Total bytes that need to be downloaded for the application.</param>
		</member>
		<member name="P:System.Windows.Interop.IProgressPage.ApplicationName">
			<summary>Gets or sets  the application's name.</summary>
			<returns>Name of the application that originates the progress page.</returns>
		</member>
		<member name="P:System.Windows.Interop.IProgressPage.DeploymentPath">
			<summary>Gets or sets the <see cref="T:System.Uri"></see> path to the application deployment manifest.</summary>
			<returns>The application deployment manifest path.</returns>
		</member>
		<member name="P:System.Windows.Interop.IProgressPage.PublisherName">
			<summary>Gets or sets the application's publisher.</summary>
			<returns>The publisher identifying string.</returns>
		</member>
		<member name="P:System.Windows.Interop.IProgressPage.RefreshCallback">
			<summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback"></see> handler, that can handle the case of a user-initiated Refresh command.</summary>
			<returns>The callback reference.</returns>
		</member>
		<member name="P:System.Windows.Interop.IProgressPage.StopCallback">
			<summary>Gets or sets a reference to a <see cref="T:System.Windows.Threading.DispatcherOperationCallback"></see> handler, that can handle the case of a user-initiated Stop command.</summary>
			<returns>The callback reference.</returns>
		</member>
		<member name="T:System.Windows.Interop.WindowInteropHelper">
			<summary>Assists interoperation between Windows Presentation Foundation (WPF) and Win32 code. </summary>
		</member>
		<member name="M:System.Windows.Interop.WindowInteropHelper.#ctor(System.Windows.Window)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Interop.WindowInteropHelper"></see> class for a specified Windows Presentation Foundation (WPF) window. </summary>
			<param name="window">A WPF window object.</param>
		</member>
		<member name="P:System.Windows.Interop.WindowInteropHelper.Handle">
			<summary>Gets the window handle for a Windows Presentation Foundation (WPF) window that is used to create this <see cref="T:System.Windows.Interop.WindowInteropHelper"></see>. </summary>
			<returns>The Windows Presentation Foundation (WPF) window handle (HWND).</returns>
		</member>
		<member name="P:System.Windows.Interop.WindowInteropHelper.Owner">
			<summary>Gets or sets the handle of the Windows Presentation Foundation (WPF) owner window. </summary>
			<returns>The owner window handle (HWND).</returns>
		</member>
		<member name="N:System.Windows.Markup">
			<summary>Provides classes to support serialization and Extensible Application Markup Language (XAML) in Windows Presentation Foundation (WPF).</summary>
		</member>
		<member name="T:System.Windows.Markup.ArrayExtension">
			<summary>Implements x:Array support for the WPF XAML reader implementation.</summary>
		</member>
		<member name="M:System.Windows.Markup.ArrayExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ArrayExtension"></see> class. This creates an empty array. </summary>
		</member>
		<member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Array)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ArrayExtension"></see> class based on the provided raw array.</summary>
			<param name="elements">The array to populate the extension with.</param>
		</member>
		<member name="M:System.Windows.Markup.ArrayExtension.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ArrayExtension"></see> class, and initializes the type of the array. </summary>
			<param name="arrayType">Object type of the new array.</param>
		</member>
		<member name="M:System.Windows.Markup.ArrayExtension.AddChild(System.Object)">
			<summary>Appends the supplied object to the end of the array. </summary>
			<param name="value">Object to add to the end of the array.</param>
		</member>
		<member name="M:System.Windows.Markup.ArrayExtension.AddText(System.String)">
			<summary>Adds a text node as a new array item.</summary>
			<param name="text">Text to add to the end of the array</param>
		</member>
		<member name="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an array that is sized to the number of objects supplied in the service input </summary>
			<returns>The created array.</returns>
			<param name="serviceProvider">Object that can provide services for the markup extension.</param>
			<exception cref="T:System.InvalidOperationException">Attempted to provide a value for an array that did not provide a type.- or -Type mismatch between the declared type of the array and one or more of its members.</exception>
		</member>
		<member name="P:System.Windows.Markup.ArrayExtension.Items">
			<summary>Gets the contents of the array.</summary>
			<returns>The array contents.</returns>
		</member>
		<member name="P:System.Windows.Markup.ArrayExtension.Type">
			<summary>Gets and sets the type of array to be created when calling <see cref="M:System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)"></see>.</summary>
			<returns>The type of the array.</returns>
		</member>
		<member name="T:System.Windows.Markup.ComponentResourceKeyConverter">
			<summary>Converts a <see cref="T:System.Windows.ComponentResourceKey"></see> object to and from other types.</summary>
		</member>
		<member name="M:System.Windows.Markup.ComponentResourceKeyConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ComponentResourceKeyConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.ComponentResourceKey"></see>, using the specified context.</summary>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="sourceType">The type being evaluated for conversion.</param>
			<exception cref="T:System.ArgumentNullException">sourceType is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.ComponentResourceKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an instance of <see cref="T:System.Windows.ComponentResourceKey"></see> can be converted to the specified type, using the specified context.</summary>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type being evaluated for conversion.</param>
			<exception cref="T:System.ArgumentNullException">destinationType is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Attempts to convert the specified object to a <see cref="T:System.Windows.ComponentResourceKey"></see>, using the specified context.</summary>
			<param name="culture">Culture specific information.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="value">The object to convert.</param>
			<exception cref="T:System.NotSupportedException">value cannot be converted.</exception>
		</member>
		<member name="M:System.Windows.Markup.ComponentResourceKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Attempts to convert a <see cref="T:System.Windows.ComponentResourceKey"></see> to the specified type, using the specified context.</summary>
			<param name="culture">Culture specific information.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type to convert the object to.</param>
			<param name="value">The object to convert.</param>
			<exception cref="T:System.ArgumentNullException">destinationType is null.</exception>
			<exception cref="T:System.NotSupportedException">value cannot be converted.</exception>
		</member>
		<member name="T:System.Windows.Markup.DependencyPropertyConverter">
			<summary>Converts a <see cref="T:System.Windows.DependencyProperty"></see> object to and from other types.</summary>
		</member>
		<member name="M:System.Windows.Markup.DependencyPropertyConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.DependencyPropertyConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.DependencyProperty"></see>, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="sourceType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Markup.DependencyPropertyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an instance of <see cref="T:System.Windows.DependencyProperty"></see> can be converted to the specified type, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Attempts to convert the specified object to a <see cref="T:System.Windows.DependencyProperty"></see>, using the specified context.</summary>
			<returns>The converted object.</returns>
			<param name="culture">Culture specific information.</param>
			<param name="source">The object to convert.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<exception cref="T:System.NotSupportedException">source cannot be converted.</exception>
		</member>
		<member name="M:System.Windows.Markup.DependencyPropertyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Attempts to convert a <see cref="T:System.Windows.DependencyProperty"></see> to the specified type, using the specified context.</summary>
			<returns>The converted object.</returns>
			<param name="culture">Culture specific information.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type to convert the object to.</param>
			<param name="value">The object to convert.</param>
			<exception cref="T:System.NotSupportedException">value cannot be converted.</exception>
		</member>
		<member name="T:System.Windows.Markup.IProvideValueTarget">
			<summary>Reports object-property relationships for framework features such as binding on a dependency property.</summary>
		</member>
		<member name="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
			<summary>Gets the target object being reported.</summary>
			<returns>The target object being reported.</returns>
		</member>
		<member name="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
			<summary>Gets the target property being reported.</summary>
			<returns>The target property being reported.</returns>
		</member>
		<member name="T:System.Windows.Markup.IStyleConnector">
			<summary>Provides methods used internally by the markup parser to attach events and event setters on compiled content. </summary>
		</member>
		<member name="M:System.Windows.Markup.IStyleConnector.Connect(System.Int32,System.Object)">
			<summary>When implemented by a derived class, calls the StyleBamlReader to attach events on EventSetters and Templates in compiled content. </summary>
			<param name="connectionId">The id. </param>
			<param name="target">The target.</param>
		</member>
		<member name="T:System.Windows.Markup.NamespaceMapEntry">
			<summary>Provides information the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> uses for mapping between an XML namespace URI and the corresponding CLR namespace and the assembly it is in.</summary>
		</member>
		<member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.NamespaceMapEntry"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Markup.NamespaceMapEntry.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.NamespaceMapEntry"></see> class by using the specified XML namespace, assembly name, and the CLR namespace that is in the assembly. </summary>
			<param name="xmlNamespace">The XML namespace.</param>
			<param name="clrNamespace">The CLR namespace in the assembly.</param>
			<param name="assemblyName">Assembly to use when resolving a tag.</param>
			<exception cref="T:System.ArgumentNullException">xmlNamespace is null-or- assemblyName is null-or- clrNamespace is null.</exception>
		</member>
		<member name="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName">
			<summary>Gets or sets the assembly name that contains the types in the CLR namespace. </summary>
			<returns>The assembly name.</returns>
			<exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.AssemblyName"></see> is being set to is null.</exception>
		</member>
		<member name="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace">
			<summary>Gets or sets the common language runtime (CLR) namespace that contains the types which are being mapped to the XML namespace. </summary>
			<returns>The CLR namespace.</returns>
			<exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.ClrNamespace"></see> is being set to is null.</exception>
		</member>
		<member name="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace">
			<summary>Gets or sets the XML namespace. </summary>
			<returns>The XML namespace.</returns>
			<exception cref="T:System.ArgumentNullException">The value <see cref="P:System.Windows.Markup.NamespaceMapEntry.XmlNamespace"></see> is being set to is null.</exception>
		</member>
		<member name="T:System.Windows.Markup.NullExtension">
			<summary>Implements a XAML markup extension in order to return a null object, which you can use to explicitly set values to null. </summary>
		</member>
		<member name="M:System.Windows.Markup.NullExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.NullExtension"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Markup.NullExtension.ProvideValue(System.IServiceProvider)">
			<summary>Provides null to use as a value when you set property values in XAML. </summary>
			<returns>A null reference (Nothing in Visual Basic).</returns>
			<param name="serviceProvider">An object that can provide services for the markup extension.</param>
		</member>
		<member name="T:System.Windows.Markup.ParserContext">
			<summary>Provides context information required by the Extensible Application Markup Language (XAML) parser. </summary>
		</member>
		<member name="M:System.Windows.Markup.ParserContext.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ParserContext"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Markup.ParserContext.#ctor(System.Xml.XmlParserContext)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.ParserContext"></see> class by using the specified <see cref="T:System.Xml.xmlParserContext"></see>.</summary>
			<param name="xmlParserContext">The context to base the new <see cref="T:System.Windows.Markup.ParserContext"></see> on.</param>
			<exception cref="T:System.ArgumentNullException">xmlParserContext is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.ParserContext.op_Implicit(System.Windows.Markup.ParserContext)~System.Xml.XmlParserContext">
			<summary>Converts an <see cref="T:System.Windows.Markup.ParserContext"></see> to an <see cref="T:System.Xml.xmlParserContext"></see>.</summary>
			<returns>The parser context.</returns>
			<param name="parserContext">The context to convert to an <see cref="T:System.Xml.xmlParserContext"></see>.</param>
			<exception cref="T:System.ArgumentNullException">parserContext is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.ParserContext.ToXmlParserContext(System.Windows.Markup.ParserContext)">
			<summary>Converts an <see cref="T:System.Windows.Markup.ParserContext"></see> to an <see cref="T:System.Xml.xmlParserContext"></see>.</summary>
			<returns>The parser context.</returns>
			<param name="parserContext">The context to convert to an <see cref="T:System.Xml.xmlParserContext"></see>.</param>
			<exception cref="T:System.ArgumentNullException">parserContext is null.</exception>
		</member>
		<member name="P:System.Windows.Markup.ParserContext.BaseUri">
			<summary>Gets or sets the base uniform resource identifier (URI) for this context.</summary>
			<returns>The base URI.</returns>
		</member>
		<member name="P:System.Windows.Markup.ParserContext.XamlTypeMapper">
			<summary>Gets or sets the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> to use with this <see cref="T:System.Windows.Markup.ParserContext"></see>.</summary>
			<returns>The type mapper.</returns>
		</member>
		<member name="P:System.Windows.Markup.ParserContext.XmlLang">
			<summary>Gets or sets the xml:lang Attribute for this context.</summary>
			<returns>The language.</returns>
		</member>
		<member name="P:System.Windows.Markup.ParserContext.XmlnsDictionary">
			<summary>Gets the XML namespace dictionary for this context.</summary>
			<returns>The XML namespace dictionary.</returns>
		</member>
		<member name="P:System.Windows.Markup.ParserContext.XmlSpace">
			<summary>Gets or sets the xml:space Attribute for this context.</summary>
			<returns>The XML space a.</returns>
		</member>
		<member name="T:System.Windows.Markup.ResourceReferenceExpressionConverter">
			<summary>Do not use. This type supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.#ctor">
			<summary>Do not use. This method supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Markup.ResourceReferenceExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Do not use. This method supports the WPF infrastructure and is not intended to be used directly from your code.</summary>
			<param name="context"> .</param>
		</member>
		<member name="T:System.Windows.Markup.RoutedEventConverter">
			<summary>Converts a <see cref="T:System.Windows.RoutedEvent"></see> object to and from other types.</summary>
		</member>
		<member name="M:System.Windows.Markup.RoutedEventConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.RoutedEventConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.RoutedEvent"></see>, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="sourceType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Markup.RoutedEventConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an instance of <see cref="T:System.Windows.RoutedEvent"></see> can be converted to the specified type, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Markup.RoutedEventConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Attempts to convert the specified object to a <see cref="T:System.Windows.RoutedEvent"></see>, using the specified context.</summary>
			<returns>The converted object.</returns>
			<param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="cultureInfo">Culture specific information.</param>
			<param name="source">The object to convert.</param>
			<exception cref="T:System.NotSupportedException">source cannot be converted.</exception>
		</member>
		<member name="M:System.Windows.Markup.RoutedEventConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Attempts to convert a <see cref="T:System.Windows.RoutedEvent"></see> to the specified type, using the specified context.</summary>
			<returns>The converted object.</returns>
			<param name="typeDescriptorContext">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type to convert the object to.</param>
			<param name="cultureInfo">Culture specific information.</param>
			<param name="value">The object to convert.</param>
			<exception cref="T:System.NotSupportedException">value cannot be converted.</exception>
		</member>
		<member name="T:System.Windows.Markup.StaticExtension">
			<summary>Implements a markup extension that returns static field and property references. </summary>
		</member>
		<member name="M:System.Windows.Markup.StaticExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.StaticExtension"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.StaticExtension.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.StaticExtension"></see> class using the provided member string.</summary>
			<param name="member">A string that identifies the member to make a reference to. This string uses the format Prefix:ClassName.FieldOrPropertyName. (Prefix is optional and refers to the XML namespace prefix in a XAML file.)</param>
			<exception cref="T:System.ArgumentNullException">The value passed for member is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object value to set on the property where you apply this extension. For <see cref="T:System.Windows.Markup.StaticExtension"></see>, this object value is the static value that is evaluated for the requested static member.</summary>
			<returns>The object value to set on the property where the extension is applied. </returns>
			<param name="serviceProvider">An object that can provide services for the markup extension. This service is expected to provide results for <see cref="T:System.Windows.Markup.IXamlTypeResolver"></see>.</param>
			<exception cref="T:System.ArgumentException">Some part of the member string did not parse properly.- or -serviceProvider did not provide a service for <see cref="T:System.Windows.Markup.IXamlTypeResolver"></see>.- or -member value did not resolve to a static member.</exception>
			<exception cref="T:System.InvalidOperationException">The member value for the extension is null. You must set this value before a call is made to <see cref="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)"></see>.</exception>
		</member>
		<member name="P:System.Windows.Markup.StaticExtension.Member">
			<summary>Gets or sets a string that identifies a static field or property.</summary>
			<returns>A string that uses the format Prefix:ClassName.FieldOrPropertyName. (Prefix is optional and refers to the XML namespace prefix in a XAML file.)</returns>
			<exception cref="T:System.ArgumentNullException">Attempted to set <see cref="P:System.Windows.Markup.StaticExtension.Member"></see>  to null.</exception>
		</member>
		<member name="T:System.Windows.Markup.TemplateKeyConverter">
			<summary>Converts a <see cref="T:System.Windows.TemplateKey"></see> object to and from other types.</summary>
		</member>
		<member name="M:System.Windows.Markup.TemplateKeyConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.TemplateKeyConverter"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.TemplateKey"></see>, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="sourceType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
			<summary>Determines whether an instance of <see cref="T:System.Windows.TemplateKey"></see> can be converted to the specified type, using the specified context.</summary>
			<returns>true if this converter can perform the operation; otherwise, false.</returns>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type being evaluated for conversion.</param>
		</member>
		<member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
			<summary>Attempts to convert the specified object to a <see cref="T:System.Windows.TemplateKey"></see>, using the specified context.</summary>
			<returns>The converted object.</returns>
			<param name="culture">Culture specific information.</param>
			<param name="source">The object to convert.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<exception cref="T:System.NotSupportedException">source cannot be converted.</exception>
		</member>
		<member name="M:System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
			<summary>Attempts to convert a <see cref="T:System.Windows.TemplateKey"></see> to the specified type, using the specified context.</summary>
			<returns>The converted object.</returns>
			<param name="culture">Culture specific information.</param>
			<param name="context">A format context that provides information about the environment from which this converter is being invoked.</param>
			<param name="destinationType">The type to convert the object to.</param>
			<param name="value">The object to convert.</param>
			<exception cref="T:System.NotSupportedException">value cannot be converted.</exception>
		</member>
		<member name="T:System.Windows.Markup.TypeExtension">
			<summary>Implements a markup extension that returns a <see cref="T:System.Type"></see> based on a string attribute input. </summary>
		</member>
		<member name="M:System.Windows.Markup.TypeExtension.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.TypeExtension"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.TypeExtension.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.TypeExtension"></see> class, initializing the <see cref="P:System.Windows.Markup.TypeExtension.TypeName"></see> value based on the provided typeName string.</summary>
			<param name="typeName">String identifying a type, in the format Prefix:Typename, where Prefix refers to the XML namespace prefix in a XAML file.</param>
			<exception cref="T:System.ArgumentNullException">Cannot set typeName to be null.</exception>
		</member>
		<member name="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.TypeExtension"></see> class, declaring the type directly.</summary>
			<param name="type">The type to be represented by this <see cref="T:System.Windows.Markup.TypeExtension"></see>.</param>
		</member>
		<member name="M:System.Windows.Markup.TypeExtension.ProvideValue(System.IServiceProvider)">
			<summary>Returns an object that should be set on the property where this extension is applied. For <see cref="T:System.Windows.Markup.TypeExtension"></see> , this is the <see cref="T:System.Type"></see> value as evaluated for the requested type name.</summary>
			<returns>The <see cref="T:System.Type"></see> object value to set on the property where the extension is applied. </returns>
			<param name="serviceProvider">Object that can provide services for the markup extension. This service is expected to provide results for <see cref="T:System.Windows.Markup.IXamlTypeResolver"></see>.</param>
			<exception cref="T:System.InvalidOperationException">member value for the extension is null. Must set this value during construction or prior to <see cref="M:System.Windows.Markup.StaticExtension.ProvideValue(System.IServiceProvider)"></see> use.</exception>
			<exception cref="T:System.ArgumentException">Some part of the typeName string did not parse properly.- OR -serviceProvider did not provide a service for <see cref="T:System.Windows.Markup.IXamlTypeResolver"></see>.- OR -typeName value did not resolve to a type.</exception>
		</member>
		<member name="P:System.Windows.Markup.TypeExtension.Type">
			<summary>Gets the type for this extension, if set via the <see cref="M:System.Windows.Markup.TypeExtension.#ctor(System.Type)"></see> constructor.</summary>
			<returns>The established type. This may be null.</returns>
		</member>
		<member name="P:System.Windows.Markup.TypeExtension.TypeName">
			<summary>Gets or sets the type name represented by this markup extension.</summary>
			<returns>String identifying a type, in the format Prefix:Typename, where Prefix refers to the XML namespace prefix in a XAML file.</returns>
			<exception cref="T:System.ArgumentNullException">Cannot set this to be null.</exception>
		</member>
		<member name="T:System.Windows.Markup.XamlDesignerSerializationManager">
			<summary>Provides services for serialization.  </summary>
		</member>
		<member name="M:System.Windows.Markup.XamlDesignerSerializationManager.#ctor(System.Xml.XmlWriter)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager"></see> class.</summary>
			<param name="xmlWriter">The writer used to initializes the new <see cref="T:System.Windows.Markup.XamlDesignerSerializationManager"></see>. </param>
		</member>
		<member name="P:System.Windows.Markup.XamlDesignerSerializationManager.XamlWriterMode">
			<summary>Gets or sets the XAML writer mode.</summary>
			<returns>The writer mode.</returns>
			<exception cref="T:System.ComponentModel.InvalidEnumArgumentException">the value <see cref="P:System.Windows.Markup.XamlDesignerSerializationManager.XamlWriterMode"></see> is being set to is not a valid of the <see cref="T:System.Windows.Markup.XamlWriterMode"></see> enumeration.</exception>
		</member>
		<member name="T:System.Windows.Markup.XamlInstanceCreator">
			<summary>Abstract class that provides a means to store parser records for later instantiation. </summary>
		</member>
		<member name="M:System.Windows.Markup.XamlInstanceCreator.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlInstanceCreator"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.XamlInstanceCreator.CreateObject">
			<summary>When overridden in a derived class, creates a new object to store parser records.</summary>
			<returns>The created object.</returns>
		</member>
		<member name="T:System.Windows.Markup.XamlParseException">
			<summary>Represents the exception class for parser-specific exceptions. </summary>
		</member>
		<member name="M:System.Windows.Markup.XamlParseException.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException"></see> class, by using the specified exception message.</summary>
			<param name="message">The exception message.</param>
		</member>
		<member name="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException"></see> class. </summary>
			<param name="context">The source and destination of a serialized stream.</param>
			<param name="info">Contains all the information that is required to serialize or deserialize the object.</param>
		</member>
		<member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException"></see> class, by using the specified exception message and inner exception. </summary>
			<param name="message">The exception message.</param>
			<param name="innerException">The exception that occurred.</param>
		</member>
		<member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException"></see> class, by using the specified exception message and the specified line number and position in the line.</summary>
			<param name="message">The exception message.</param>
			<param name="linePosition">The position in the line at which the exception occurred.</param>
			<param name="lineNumber">The line number where the exception occurred.</param>
		</member>
		<member name="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException"></see> class, by using the specified exception message, inner exception, line number, and position in the line.</summary>
			<param name="message">The exception message.</param>
			<param name="linePosition">The position in the line at which the exception occurred.</param>
			<param name="innerException">The exception that occurred.</param>
			<param name="lineNumber">The line number where the exception occurred.</param>
		</member>
		<member name="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>Gets the data that is required to serialize the specified object by populating the specified <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> object.</summary>
			<param name="context">The destination for this serialization.</param>
			<param name="info">The serialization info object to add the serialization data to.</param>
		</member>
		<member name="P:System.Windows.Markup.XamlParseException.BaseUri">
			<summary>Gets the base URI in effect at the point of the exception.</summary>
			<returns>The URI. </returns>
		</member>
		<member name="P:System.Windows.Markup.XamlParseException.KeyContext">
			<summary>Gets or sets the XAML key value of the item in a dictionary where the exception occurred. </summary>
			<returns>The XAML key value.</returns>
		</member>
		<member name="P:System.Windows.Markup.XamlParseException.LineNumber">
			<summary>Gets the line number where the exception occurred. </summary>
			<returns>The line number.</returns>
		</member>
		<member name="P:System.Windows.Markup.XamlParseException.LinePosition">
			<summary>Gets the position in the line where the exception occurred. </summary>
			<returns>The line position.</returns>
		</member>
		<member name="P:System.Windows.Markup.XamlParseException.NameContext">
			<summary>Gets or sets the XAML name of the object where the exception occurred.</summary>
			<returns>The XAML name.</returns>
		</member>
		<member name="P:System.Windows.Markup.XamlParseException.UidContext">
			<summary>Gets or sets XAML UID of the object where the exception occurred. </summary>
			<returns>The value of the UID.</returns>
		</member>
		<member name="T:System.Windows.Markup.XamlReader">
			<summary>Provides the means to parse XAML markup into an object. </summary>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlReader"></see> class.</summary>
		</member>
		<member name="E:System.Windows.Markup.XamlReader.LoadCompleted">
			<summary>Occurs when a synchronous or an asynchronous load operation completes. </summary>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.CancelAsync">
			<summary>Aborts the current asynchronous load operation, if there is one currently running.</summary>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream)">
			<summary>Reads the XAML markup in the specified <see cref="T:System.IO.Stream"></see> and returns an <see cref="T:System.Object"></see> that corresponds to the root of the specified XML.</summary>
			<returns>The root of the deserialized tree.</returns>
			<param name="stream">The XAML to load.</param>
			<exception cref="T:System.ArgumentNullException">stream is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.Load(System.Xml.XmlReader)">
			<summary>Reads the XAML markup in the specified <see cref="T:System.Xml.XmlReader"></see> and returns an <see cref="T:System.Object"></see> that corresponds to the root of the specified XML.</summary>
			<returns>The root of the deserialized tree.</returns>
			<param name="reader">The XAML to load.</param>
			<exception cref="T:System.ArgumentNullException">reader is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.Load(System.IO.Stream,System.Windows.Markup.ParserContext)">
			<summary>Reads the XAML markup in the specified <see cref="T:System.IO.Stream"></see> and returns an <see cref="T:System.Object"></see> that corresponds to the root of the specified XML.</summary>
			<returns>The root of the deserialized tree.</returns>
			<param name="stream">The XAML to load.</param>
			<param name="parserContext">Context information used by the parser.</param>
			<exception cref="T:System.ArgumentNullException">stream is null.-or-parserContext is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)">
			<summary>Reads the XAML markup in the specified <see cref="T:System.IO.Stream"></see> and returns the root of the corresponding object tree, asynchronously.</summary>
			<returns>The root of the deserialized tree.</returns>
			<param name="stream">The XAML to load.</param>
			<exception cref="T:System.InvalidOperationException">multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader"></see>.</exception>
			<exception cref="T:System.ArgumentNullException">stream is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.Xml.XmlReader)">
			<summary>Reads the XAML markup in the specified <see cref="T:System.Xml.XmlReader"></see> and returns the root of the corresponding object tree, asynchronously. </summary>
			<returns>The root of the deserialized tree.</returns>
			<param name="reader">The XAML to load.</param>
			<exception cref="T:System.ArgumentNullException">reader is null.</exception>
			<exception cref="T:System.InvalidOperationException">multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader"></see>.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream,System.Windows.Markup.ParserContext)">
			<summary>Reads the XAML markup in the specified <see cref="T:System.IO.Stream"></see> and returns the root of the corresponding object tree, asynchronously. </summary>
			<returns>The root of the deserialized tree.</returns>
			<param name="stream">The XAML to load.</param>
			<param name="parserContext">Context information used by the parser.</param>
			<exception cref="T:System.InvalidOperationException">multiple load operations are performed concurrently with the same <see cref="T:System.Windows.Markup.XamlReader"></see>.</exception>
			<exception cref="T:System.ArgumentNullException">stream is null.</exception>
		</member>
		<member name="T:System.Windows.Markup.XamlTypeMapper">
			<summary>Maps an XML name to the appropriate Type.</summary>
		</member>
		<member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[])">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> class by using the specified assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> should us when it resolves XAML tags.</summary>
			<param name="assemblyNames">The list of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> should us when resolving XAML.</param>
			<exception cref="T:System.ArgumentNullException">assemblyNames is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlTypeMapper.#ctor(System.String[],System.Windows.Markup.NamespaceMapEntry[])">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> class by using the specified assembly names and namespace maps.</summary>
			<param name="assemblyNames">The list of assembly names the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> should us when resolving XAML.</param>
			<param name="namespaceMaps">The namespace maps the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> should us when resolving XAML.</param>
			<exception cref="T:System.ArgumentNullException">assemblyNames is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlTypeMapper.AddMappingProcessingInstruction(System.String,System.String,System.String)">
			<summary>Deines a mapping between an XML namespace to a CLR namespace.</summary>
			<param name="xmlNamespace">The XML namespace URI.</param>
			<param name="clrNamespace">The CLR namespace which contains the types.</param>
			<param name="assemblyName">The assembly that contains the CLR namespace.</param>
			<exception cref="T:System.ArgumentNullException">xmlNamespace is null -or- clrNamespace is null -or- assemblyName is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlTypeMapper.AllowInternalType(System.Type)">
			<summary>Specifies that a sub-classed <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> which is called under full trust to participate in deciding if an internal type should be accessed.</summary>
			<returns>true if the internal type can be accessed; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Markup.XamlTypeMapper.GetType(System.String,System.String)">
			<summary>Gets the CLR type that a XAML tag is mapped to by using the specified XML namespace URI and local name.</summary>
			<returns>The type for the object or null if no type is found.</returns>
			<param name="xmlNamespace">The XML namespace URI of the XAML tag.</param>
			<param name="localName">The local name of the XAML tag.</param>
			<exception cref="T:System.ArgumentNullException">xmlNamespace is null -or- localName is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlTypeMapper.SetAssemblyPath(System.String,System.String)">
			<summary>Specifies the path to use when loading an assembly.</summary>
			<param name="assemblyPath">The file path of the assembly.</param>
			<param name="assemblyName">The short name of the assembly without an extension or path specified.</param>
			<exception cref="T:System.ArgumentNullException">assemblyName is null-or-assemblyPath is null.</exception>
			<exception cref="T:System.Windows.Markup.XamlParseException">assemblyName is <see cref="F:System.String.Empty"></see>-or-is assemblyPath<see cref="F:System.String.Empty"></see>.</exception>
		</member>
		<member name="P:System.Windows.Markup.XamlTypeMapper.DefaultMapper">
			<summary>Gets an instance of the <see cref="T:System.Windows.Markup.XamlTypeMapper"></see> to use if one has not been specified.</summary>
			<returns>The default type mapper.</returns>
		</member>
		<member name="T:System.Windows.Markup.XamlWriter">
			<summary>Provides a single static <see cref="Overload:System.Windows.Markup.XamlWriter.Save"></see> method (multiple signatures) that can be used for limited Extensible Application Markup Language (XAML) serialization of provided runtime objects into XAML. This class cannot be inherited, and only has static methods.</summary>
		</member>
		<member name="M:System.Windows.Markup.XamlWriter.Save(System.Object)">
			<summary>Returns a Extensible Application Markup Language (XAML) string that serializes the provided object and its properties.</summary>
			<returns>
													Extensible Application Markup Language (XAML) string that can be written to a stream or file. The logical tree of all elements that fall under the provided obj element will be serialized.</returns>
			<param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
			<exception cref="T:System.Security.SecurityException">the application is not running in full trust.</exception>
			<exception cref="T:System.ArgumentNullException">obj is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.Stream)">
			<summary>Saves Extensible Application Markup Language (XAML) information into a provided stream to serialize the provided object and its properties.</summary>
			<param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
			<param name="stream">Destination stream for the serialized XAML information.</param>
			<exception cref="T:System.Security.SecurityException">the application is not running in full trust.</exception>
			<exception cref="T:System.ArgumentNullException">obj is null -or- stream is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.IO.TextWriter)">
			<summary>Saves Extensible Application Markup Language (XAML) information as the source for a provided text writer object. The output of the text writer can then be used to serialize the provided object and its properties.</summary>
			<param name="writer">TextWriter instance to use to write the serialized XAML information.</param>
			<param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
			<exception cref="T:System.ArgumentNullException">obj is null -or- writer is null.</exception>
			<exception cref="T:System.Security.SecurityException">the application is not running in full trust.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Saves Extensible Application Markup Language (XAML) information into a custom serializer. The output of the serializer can then be used to serialize the provided object and its properties.</summary>
			<param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
			<param name="manager">A custom serialization implementation.</param>
			<exception cref="T:System.ArgumentNullException">obj is null -or- manager is null.</exception>
			<exception cref="T:System.Security.SecurityException">the application is not running in full trust.</exception>
		</member>
		<member name="M:System.Windows.Markup.XamlWriter.Save(System.Object,System.Xml.XmlWriter)">
			<summary>Saves Extensible Application Markup Language (XAML) information as the source for a provided XML  writer object. The output of the XML  writer can then be used to serialize the provided object and its properties.</summary>
			<param name="obj">The element to be serialized. Typically, this is the root element of a page or application.</param>
			<param name="xmlWriter">Writer to use to write the serialized XAML information.</param>
			<exception cref="T:System.ArgumentNullException">obj is null -or- manager is null.</exception>
			<exception cref="T:System.Security.SecurityException">the application is not running in full trust.</exception>
		</member>
		<member name="T:System.Windows.Markup.XamlWriterMode">
			<summary>Specifies the XAML writer mode for values that are of type <see cref="F:System.Windows.Markup.XamlWriterMode.Expression"></see>.</summary>
		</member>
		<member name="F:System.Windows.Markup.XamlWriterMode.Expression">
			<summary>The <see cref="T:System.Windows.Expression"></see> is serialized.</summary>
		</member>
		<member name="F:System.Windows.Markup.XamlWriterMode.Value">
			<summary>The evaluated value of the <see cref="T:System.Windows.Expression"></see> will be serialized.</summary>
		</member>
		<member name="T:System.Windows.Markup.XamlWriterState">
			<summary>This type supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="F:System.Windows.Markup.XamlWriterState.Finished">
			<summary>The <see cref="T:System.Windows.Markup.XamlWriter"></see> has completed.</summary>
		</member>
		<member name="F:System.Windows.Markup.XamlWriterState.Starting">
			<summary>The <see cref="T:System.Windows.Markup.XamlWriter"></see> has started.</summary>
		</member>
		<member name="T:System.Windows.Markup.XmlAttributeProperties">
			<summary>Encapsulates the XML specific attributes of a <see cref="T:System.Windows.DependencyObject"></see>. </summary>
		</member>
		<member name="F:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMapsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps"></see> attached property.  </summary>
		</member>
		<member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinitionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition"></see> attached property.  </summary>
		</member>
		<member name="F:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionaryProperty">
			<summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary"></see> attached property.  </summary>
		</member>
		<member name="F:System.Windows.Markup.XmlAttributeProperties.XmlSpaceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace"></see> attached property.  </summary>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlNamespaceMaps(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps"></see> property for the specified object.</returns>
			<param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps"></see> property from.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDefinition(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition"></see> property for the specified object.</returns>
			<param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition"></see> property from.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlnsDictionary(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary"></see> property for the specified object.</returns>
			<param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary"></see> property from.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.GetXmlSpace(System.Windows.DependencyObject)">
			<summary>Gets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<returns>The value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace"></see> property for the specified object.</returns>
			<param name="dependencyObject">The object to obtain the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace"></see> property from.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlNamespaceMaps(System.Windows.DependencyObject,System.String)">
			<summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps"></see> property.</param>
			<param name="value">The XmlNamespaceMaps.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDefinition(System.Windows.DependencyObject,System.String)">
			<summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition"></see> property.</param>
			<param name="value">The XML namespace definition.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlnsDictionary(System.Windows.DependencyObject,System.Windows.Markup.XmlnsDictionary)">
			<summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary"></see> property.</param>
			<param name="value">The XmlnsDictionary.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlAttributeProperties.SetXmlSpace(System.Windows.DependencyObject,System.String)">
			<summary>Sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace"></see> property of the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<param name="dependencyObject">The object on which to set the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace"></see> property.</param>
			<param name="value">The XmlSpace.</param>
			<exception cref="T:System.ArgumentNullException">dependencyObject is null.</exception>
		</member>
		<member name="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps">
			<summary>Gets or sets the value of the <see cref="P:System.Windows.Markup.XmlAttributeProperties.XmlNamespaceMaps"></see>.</summary>
			<returns>The XmlNamespaceMaps.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDefinition">
			<summary>Gets or sets the value of the XmlnsDefinition.</summary>
			<returns>The XmlnsDefinition.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlAttributeProperties.XmlnsDictionary">
			<summary>Gets or sets the value of the XmlnsDictionary.</summary>
			<returns>The XmlnsDictionary.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlAttributeProperties.XmlSpace">
			<summary>Gets or sets the value of the xml:space property.</summary>
			<returns>The XmlSpace.</returns>
		</member>
		<member name="T:System.Windows.Markup.XmlnsDictionary">
			<summary>Represents a dictionary that contains XML namespace mappings. </summary>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.#ctor(System.Windows.Markup.XmlnsDictionary)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> class by using the specified dictionary as a base.</summary>
			<param name="xmlnsDictionary">The dictionary on which to base the new <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>.</param>
			<exception cref="T:System.ArgumentNullException">xmlnsDictionary is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.Object,System.Object)">
			<summary>Adds a namespace to this <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>.</summary>
			<param name="xmlNamespace">The namespace the prefix maps to. This should be a string.</param>
			<param name="prefix">The XML prefix of this namespace. This should be a string.</param>
			<exception cref="T:System.ArgumentNullException">prefix is null or xmlNamespace is null.</exception>
			<exception cref="T:System.ArgumentException">prefix is a string or xmlNamespace is a string. </exception>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.Add(System.String,System.String)">
			<summary>Adds a namespace to this <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>.</summary>
			<param name="xmlNamespace">The namespace the prefix maps to.</param>
			<param name="prefix">The XML prefix of this namespace.</param>
			<exception cref="T:System.ArgumentNullException">prefix is null or xmlNamespace is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.Clear">
			<summary>Removes all entries from this <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.Contains(System.Object)">
			<summary>Returns a value that determines whether the specified key is in this <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
			<returns>true if the key is in the dictionary; otherwise, false.</returns>
			<param name="key">The prefix to search for.</param>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Array,System.Int32)">
			<summary>Copies the entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> to the specified array. </summary>
			<param name="array">The array to copy the table data into.</param>
			<param name="index">The zero-based index in the destination array where copying starts.</param>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
			<summary>Copies the entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> to the specified <see cref="T:System.Collections.DictionaryEntry"></see> array. </summary>
			<param name="array">The array to copy the table data into.</param>
			<param name="index">The zero-based index in the destination array where copying starts.</param>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.DefaultNamespace">
			<summary>Looks up the namespace that corresponds to an empty prefix. </summary>
			<returns>The namespace that corresponds to the empty prefix if one exists; otherwise, null.</returns>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.GetDictionaryEnumerator">
			<summary>Returns a dictionary enumerator that iterates through this <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>.</summary>
			<returns>The dictionary enumerator for this dictionary.</returns>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.GetEnumerator">
			<summary>Returns an enumerator that iterates through this <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>.</summary>
			<returns>The enumerator for this dictionary.</returns>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.LookupNamespace(System.String)">
			<summary>Returns the namespace that corresponds to the specified XML namespace prefix. </summary>
			<returns>The namespace that corresponds to the specified prefix if it exists; otherwise, null.</returns>
			<param name="prefix">The XML namespace prefix to look up.</param>
			<exception cref="T:System.ArgumentNullException">prefix is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.LookupPrefix(System.String)">
			<summary>Returns the XML prefix that corresponds to the specified namespace uniform resource identifier (URI). </summary>
			<returns>Returns <see cref="F:System.String.Empty"></see> if the specified namespace corresponds to the default namespace, or the XML prefix that corresponds to the given namespace; otherwise, null.</returns>
			<param name="xmlNamespace">The namespace URI to look up.</param>
			<exception cref="T:System.ArgumentNullException">xmlNamespace is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.PopScope">
			<summary>Pops the scope of the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.PushScope">
			<summary>Pushes the scope of the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.Object)">
			<summary>Removes the specified XML prefix from the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
			<param name="prefix">The prefix to remove.</param>
		</member>
		<member name="M:System.Windows.Markup.XmlnsDictionary.Remove(System.String)">
			<summary>Removes the specified XML prefix from the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
			<param name="prefix">The prefix to remove.</param>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.Count">
			<summary>Gets the number of entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
			<returns>The number of entries in the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.IsFixedSize">
			<summary>Gets a value that indicates whether the size of the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> is fixed. </summary>
			<returns>true if the size is fixed; otherwise, false. </returns>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.IsReadOnly">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> is read-only. </summary>
			<returns>true if the dictionary is read-only; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.IsSynchronized">
			<summary>Gets a value that indicates whether access to this <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> is thread safe. </summary>
			<returns>true if access to this dictionary is thread-safe; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.Object)">
			<summary>Gets or sets the namespace associated with the specified XML prefix.</summary>
			<param name="prefix">The prefix from which to get or set the associated namespace.</param>
			<exception cref="T:System.ArgumentNullException">prefix is not a string.</exception>
			<exception cref="T:System.ArgumentNullException">The namespace to associate with prefix is null.</exception>
			<exception cref="T:System.ArgumentException">The namespace to associate with prefix is not a string.</exception>
			<exception cref="T:System.ArgumentException">prefix is null.</exception>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.Item(System.String)">
			<summary>Gets or sets the namespace associated with the specified XML prefix.</summary>
			<param name="prefix">The prefix from which to get or set the associated namespace.</param>
			<exception cref="T:System.ArgumentNullException">The namespace to associate with prefix is null.</exception>
			<exception cref="T:System.ArgumentException">prefix is null.</exception>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.Keys">
			<summary>Gets a collection of all the keys in the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
			<returns>The collection of all the keys in the dictionary.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.Sealed">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see> is sealed. </summary>
			<returns>true if the dictionary is sealed; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.SyncRoot">
			<summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
			<returns>An object that can be used to synchronize access to the dictionary.</returns>
		</member>
		<member name="P:System.Windows.Markup.XmlnsDictionary.Values">
			<summary>Gets a collection of all the values in the <see cref="T:System.Windows.Markup.XmlnsDictionary"></see>. </summary>
			<returns>A collection of all the values in the dictionary.</returns>
		</member>
		<member name="N:System.Windows.Markup.Localizer">
			<summary>Defines classes that assist in the localization of binary XAML (BAML) sources.</summary>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver">
			<summary>Resolves localizable settings for classes and properties in binary XAML (BAML). </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetElementLocalizability(System.String,System.String)">
			<summary> Returns a value that indicates whether a specified type of element can be localized and, if so, whether it can be formatted inline. </summary>
			<returns>An object that contains the localizability information for the specified assembly and element.</returns>
			<param name="assembly">The full name of the assembly that contains binary XAML (BAML) to be localized.</param>
			<param name="className">The full class name of the element that you want to retrieve localizability information for.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.GetPropertyLocalizability(System.String,System.String,System.String)">
			<summary> Returns a value that indicates whether a specified property of a specified type of element can be localized. </summary>
			<returns>An object that specifies whether and how the property can be localized.</returns>
			<param name="assembly">The full name of the assembly that contains binary XAML (BAML) to be localized.</param>
			<param name="property">The name of the property that you want to retrieve localizability information for.</param>
			<param name="className">The full class name of the element that you want to retrieve localizability information for.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveAssemblyFromClass(System.String)">
			<summary> Returns the full name of the assembly that contains the specified class.</summary>
			<returns>The full name of the assembly that contains the class.</returns>
			<param name="className">The full class name.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizabilityResolver.ResolveFormattingTagToClass(System.String)">
			<summary> Returns the full class name of an Extensible Application Markup Language (XAML) tag that hasn't been encountered in binary XAML (BAML).</summary>
			<returns>The full class name associated with the tag.</returns>
			<param name="formattingTag">The name of the tag.</param>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizableResource">
			<summary> Represents a localizable resource in a binary XAML (BAML) stream. </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.#ctor(System.String,System.String,System.Windows.LocalizationCategory,System.Boolean,System.Boolean)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource"></see> class, with the specified localizable value, localization comments, resource category, localization lock status, and visibility of the resource.</summary>
			<param name="category">The string category of the resource.</param>
			<param name="readable">Identifies this resource as visible for translation.</param>
			<param name="modifiable">Localization lock, as specified by the developer.</param>
			<param name="content">The localizable value.</param>
			<param name="comments">Comments used for localizing.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.Equals(System.Object)">
			<summary>Determines whether a specified <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource"></see> object is equal to this object.</summary>
			<returns>true if other is equal to this object; otherwise, false.</returns>
			<param name="other">The <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource"></see> object test for equality.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResource.GetHashCode">
			<summary>Returns a 32-bit signed integer hash code representing this instance. </summary>
			<returns>A 32-bit signed integer.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Category">
			<summary> Gets or sets the localization category of a resource. </summary>
			<returns>The localization category.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Comments">
			<summary> Gets or sets the localization comments associated with a resource. </summary>
			<returns>The localization comments.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Content">
			<summary> Gets or sets the localizable content. . </summary>
			<returns>The localizable content.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Modifiable">
			<summary> Gets or sets a value that indicates whether the localizable resource is modifiable. </summary>
			<returns>true if the resource is modifiable; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResource.Readable">
			<summary> Gets or sets whether the resource is visible for translation. </summary>
			<returns>true if the resource is visible for translation; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey">
			<summary>Represents a key for a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResource"></see> that is used to identify localizable resources.</summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.#ctor(System.String,System.String,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey"></see> class with the supplied unique ID, class name, and property name.</summary>
			<param name="className">The class name of a localizable resource in binary XAML (BAML).</param>
			<param name="uid">The unique ID of an element that has a localizable resource.</param>
			<param name="propertyName">The property name of a localizable resource in BAML.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
			<summary>Compares two instances of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey"></see> for equality.</summary>
			<returns>true if the two instances are equal; otherwise, false.</returns>
			<param name="other">The other instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey"></see> to compare for equality.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Equals(System.Object)">
			<summary>Compares an object to an instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey"></see> for equality.</summary>
			<returns>true if the two instances are equal; otherwise, false.</returns>
			<param name="other">The other instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizableResourceKey"></see> to compare for equality.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.GetHashCode">
			<summary>Returns a 32-bit signed integer hash code representing this instance.</summary>
			<returns>A 32-bit signed integer.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.AssemblyName">
			<summary>Gets the name of the assembly that defines the type of the localizable resource.</summary>
			<returns>The name of the assembly.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.ClassName">
			<summary>Gets the class name associated with the localizable resource.</summary>
			<returns>The class name of the localizable resource.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.PropertyName">
			<summary>Gets the property name associated with the localizable resource.</summary>
			<returns>The property name of the localizable resource.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid">
			<summary>Gets the unique ID of the element that contains the localizable resource.</summary>
			<returns>The unique ID of the element that contains the localizable resource.</returns>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary">
			<summary> Contains all the localizable resources in a binary XAML (BAML) record. </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.#ctor">
			<summary> Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Add(System.Windows.Markup.Localizer.BamlLocalizableResourceKey,System.Windows.Markup.Localizer.BamlLocalizableResource)">
			<summary>Adds a localizable resource with the specified key. </summary>
			<param name="value">An object that contains the resource.</param>
			<param name="key">A key for the resource.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Contains(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
			<summary>Determines whether a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object contains a resource with a specified key.</summary>
			<returns>true if the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object contains a resource with the specified key; otherwise, false.</returns>
			<param name="key">The resource's key.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)">
			<summary> Copies the contents of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object to a one-dimensional array of <see cref="T:System.Collections.DictionaryEntry"></see> objects, starting at a specified index. </summary>
			<param name="array">An array of objects to hold the data.</param>
			<param name="arrayIndex">The starting index value.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.GetEnumerator">
			<summary>Gets the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object's enumerator object. </summary>
			<returns>A <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator"></see> that can iterate the contents of the dictionary. </returns>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Remove(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
			<summary>Removes a specified localizable resource from the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object.</summary>
			<param name="key">The key for the resource to be removed.</param>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Count">
			<summary> Gets the number of localizable resources in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object. </summary>
			<returns>The number of localizable resources.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsFixedSize">
			<summary> Gets a value that indicates whether the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object has a fixed size. </summary>
			<returns>true if the object has a fixed size; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.IsReadOnly">
			<summary> Gets a value that indicates whether the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object is read-only. </summary>
			<returns>true if the object is read-only; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Item(System.Windows.Markup.Localizer.BamlLocalizableResourceKey)">
			<summary>Gets or sets a localizable resource specified by its key.</summary>
			<param name="key">The key value of the resource.</param>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Keys">
			<summary> Gets a collection that contains all the keys in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object. </summary>
			<returns>A collection that contains all the keys in the object.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.RootElementKey">
			<summary> Gets the key of the root element, if it is localizable. </summary>
			<returns>The key of the root element, if it is localizable. Otherwise, the value is set to null.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionary.Values">
			<summary> Gets a collection that contains all the values in the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object. </summary>
			<returns>A collection that contains all the values in the object.</returns>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator">
			<summary> Defines an enumerator that can iterate the content of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see> object. </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.MoveNext">
			<summary>Moves to the next item in the collection. </summary>
			<returns>true if the enumerator successfully advances to the next element. If there are no remaining elements, this method returns false.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Current">
			<summary>Gets the current object in the collection. </summary>
			<returns>The current object.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Entry">
			<summary> Gets the current element's DictionaryEntry object. </summary>
			<returns>An object containing the key and value of the current element.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Key">
			<summary> Gets the key of the current element. </summary>
			<returns>The key of the current element.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizationDictionaryEnumerator.Value">
			<summary> Gets the value of the current element. </summary>
			<returns>The value of the current element.</returns>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizer">
			<summary>Extracts resources from a binary XAML (BAML) file and generates a localized version of a BAML source.</summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer"></see> class with the specified binary XAML (BAML) source stream. </summary>
			<param name="source">A file stream that contains the binary XAML (BAML) input to be localized.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when source is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer"></see> class with the specified localizability resolver and binary XAML (BAML) source stream. </summary>
			<param name="source">A file stream that contains the binary XAML (BAML) input to be localized.</param>
			<param name="resolver">An instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver"></see>.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when source is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizer.#ctor(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizabilityResolver,System.IO.TextReader)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer"></see> class with the specified localizability resolver, binary XAML (BAML) source stream, and <see cref="T:System.IO.TextReader"></see>.</summary>
			<param name="source">A file stream that contains the binary XAML (BAML) input to be localized.</param>
			<param name="resolver">An instance of <see cref="T:System.Windows.Markup.Localizer.BamlLocalizabilityResolver"></see>.</param>
			<param name="comments">Reads the localized XML comments associated with this BAML input.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when source is null.</exception>
		</member>
		<member name="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify">
			<summary>Occurs when the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer"></see> encounters abnormal conditions.</summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizer.ExtractResources">
			<summary>Extracts all localizable resources from a binary XAML (BAML) stream. </summary>
			<returns>A copy of the localizable resources from a BAML stream, in the form of a <see cref="T:System.Windows.Markup.Localizer.BamlLocalizationDictionary"></see>.</returns>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizer.OnErrorNotify(System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify"></see> event.</summary>
			<param name="e">Required event arguments.</param>
		</member>
		<member name="M:System.Windows.Markup.Localizer.BamlLocalizer.UpdateBaml(System.IO.Stream,System.Windows.Markup.Localizer.BamlLocalizationDictionary)">
			<summary> Applies resource updates to the binary XAML (BAML) source and writes the updated version to a specified stream in order to create a localized version of the source BAML. </summary>
			<param name="updates">The resource updates to be applied to the source BAML.</param>
			<param name="target">The stream that will receive the updated BAML.</param>
			<exception cref="T:System.ArgumentNullException">Occurs when either target or updates is null.</exception>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizerError">
			<summary>Specifies error conditions that may be encountered by the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer"></see>.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateElement">
			<summary>The localized binary XAML (BAML) contains more than one reference to the same element.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.DuplicateUid">
			<summary>More than one element has the same <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid"></see> value.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.IncompleteElementPlaceholder">
			<summary>The element's substitution contains incomplete child placeholders.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidCommentingXml">
			<summary>Xml comments do not have the correct format.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationAttributes">
			<summary>The localization commenting text contains invalid attributes.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidLocalizationComments">
			<summary>The localization commenting text contains invalid comments.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.InvalidUid">
			<summary>The <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid"></see> does not correspond to any element in the BAML.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.MismatchedElements">
			<summary>Indicates a mismatch between substitution and source. The substitution must contain all the element placeholders in the source.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.SubstitutionAsPlaintext">
			<summary>The substitution of an element's content cannot be parsed as XML, therefore any formatting tags in the substitution are not recognized. The substitution is instead applied as plain text.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UidMissingOnChildElement">
			<summary>A child element does not have a <see cref="P:System.Windows.Markup.Localizer.BamlLocalizableResourceKey.Uid"></see>. As a result, it cannot be represented as a placeholder in the parent's content string.</summary>
		</member>
		<member name="F:System.Windows.Markup.Localizer.BamlLocalizerError.UnknownFormattingTag">
			<summary>A formatting tag in the substitution is not recognized.</summary>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs">
			<summary>Required arguments for the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify"></see> event.</summary>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Error">
			<summary>Gets the specific error condition encountered by the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer"></see>.</summary>
			<returns>The error condition encountered the <see cref="T:System.Windows.Markup.Localizer.BamlLocalizer"></see>.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventArgs.Key">
			<summary>Gets the key associated with the resource that generated the error condition.</summary>
			<returns>The key associated with the resource that generated the error condition.</returns>
		</member>
		<member name="T:System.Windows.Markup.Localizer.BamlLocalizerErrorNotifyEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Markup.Localizer.BamlLocalizer.ErrorNotify"></see> event.</summary>
		</member>
		<member name="T:System.Windows.Markup.Localizer.ElementLocalizability">
			<summary>Represents localizability settings for an element in binary XAML (BAML). </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Markup.Localizer.ElementLocalizability.#ctor(System.String,System.Windows.LocalizabilityAttribute)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.Localizer.ElementLocalizability"></see> class with a specified formatting tag and localizability attribute. </summary>
			<param name="formattingTag">A formatting tag name. Assign a non-empty value to this parameter to indicate inline formatting.</param>
			<param name="attribute">The associated element's localizability attribute.</param>
		</member>
		<member name="P:System.Windows.Markup.Localizer.ElementLocalizability.Attribute">
			<summary> Gets or sets the associated element's localizability attribute. </summary>
			<returns>The associated element's localizability attribute.</returns>
		</member>
		<member name="P:System.Windows.Markup.Localizer.ElementLocalizability.FormattingTag">
			<summary> Gets or sets the associated element's formatting tag. </summary>
			<returns>The formatting tag.</returns>
		</member>
		<member name="T:System.Windows.Markup.Primitives.MarkupWriter">
			<summary>Provides methods to write an object to XAML format.</summary>
		</member>
		<member name="M:System.Windows.Markup.Primitives.MarkupWriter.Dispose">
			<summary>Releases the resources used by the <see cref="T:System.Windows.Markup.Primitives.MarkupWriter"></see>.</summary>
		</member>
		<member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object)">
			<summary>Creates an instance of a <see cref="T:System.Windows.Markup.Primitives.MarkupObject"></see> from the specified object.</summary>
			<returns>A markup object that enables navigating through the tree of objects.</returns>
			<param name="instance">An object that will be the root of the serialized tree.</param>
			<exception cref="T:System.ArgumentNullException">instance is null.</exception>
		</member>
		<member name="M:System.Windows.Markup.Primitives.MarkupWriter.GetMarkupObjectFor(System.Object,System.Windows.Markup.XamlDesignerSerializationManager)">
			<summary>Creates an instance of a <see cref="T:System.Windows.Markup.Primitives.MarkupObject"></see> from the specified object and the specified serialization manager.</summary>
			<returns>A markup object that enables navigating through the tree of objects.</returns>
			<param name="instance">An object that will be the root of the serialized tree.</param>
			<param name="manager">The serialization manger.</param>
			<exception cref="T:System.ArgumentNullException">manager is null.</exception>
			<exception cref="T:System.ArgumentNullException">instance is null.</exception>
		</member>
		<member name="N:System.Windows.Media">
			<summary>Defines objects that enable integration of rich media, including drawings, text, and audio/video content within Windows Presentation Foundation (WPF) applications.</summary>
		</member>
		<member name="T:System.Windows.Media.AdornerHitTestResult">
			<summary>Represents data returned from calling the <see cref="M:System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point)"></see> method.</summary>
		</member>
		<member name="P:System.Windows.Media.AdornerHitTestResult.Adorner">
			<summary> Gets the visual that was hit. </summary>
			<returns>The visual that was hit.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.BeginStoryboard">
			<summary>A trigger action that begins a <see cref="T:System.Windows.Media.Animation.Storyboard"></see> and distributes its animations to their targeted objects and properties.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.BeginStoryboard.#ctor">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Media.Animation.BeginStoryboard.StoryboardProperty">
			<summary>Identifies the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.BeginStoryboard.HandoffBehavior">
			<summary>Gets or sets the proper hand-off behavior to start an animation clock in this storyboard </summary>
			<returns>One of the <see cref="T:System.Windows.Media.Animation.HandoffBehavior"></see> enumeration values. The default value is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace"></see>.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.BeginStoryboard.Name">
			<summary>Gets or sets the name of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> object. By naming the <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> object, the <see cref="T:System.Windows.Media.Animation.Storyboard"></see> can be controlled after it is started.</summary>
			<returns>The name of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see>. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.BeginStoryboard.Storyboard">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.Storyboard"></see> that this <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> starts. </summary>
			<returns>The <see cref="T:System.Windows.Media.Animation.Storyboard"></see> that the <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> starts. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.ControllableStoryboardAction">
			<summary>Manipulates a <see cref="T:System.Windows.Media.Animation.Storyboard"></see> that has been applied by a <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> action.</summary>
		</member>
		<member name="P:System.Windows.Media.Animation.ControllableStoryboardAction.BeginStoryboardName">
			<summary>Gets or sets the <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name"></see> of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> that began the <see cref="T:System.Windows.Media.Animation.Storyboard"></see> you want to interactively control. </summary>
			<returns>The <see cref="P:System.Windows.Media.Animation.BeginStoryboard.Name"></see> of the <see cref="T:System.Windows.Media.Animation.BeginStoryboard"></see> that began the <see cref="T:System.Windows.Media.Animation.Storyboard"></see> you want to interactively control. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame">
			<summary>Animates from the <see cref="T:System.Windows.Thickness"></see> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> using discrete interpolation.  </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame"></see> class with the specified ending value. </summary>
			<param name="value">The ending value (also known as "target value") for the key frame.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame"></see> class with the specified ending value and key time.</summary>
			<param name="value">The ending value (also known as "target value") for the key frame.</param>
			<param name="keyTime">The key time for the key frame. The key time determines when the target value is reached, which is also when the key frame ends.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.CreateInstanceCore">
			<summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame"></see>.</summary>
			<returns>A new <see cref="T:System.Windows.Media.Animation.DiscreteThicknessKeyFrame"></see>.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.DiscreteThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
			<summary>Interpolates, between the previous key frame value and the value of the current key frame using discrete interpolation. </summary>
			<returns>The output value of this key frame given the specified base value and progress.</returns>
			<param name="baseValue">The value to animate from.</param>
			<param name="keyFrameProgress">A value from 0.0 through 1.0 that specifies the percentage of time that has elapsed for this key frame.</param>
		</member>
		<member name="T:System.Windows.Media.Animation.LinearThicknessKeyFrame">
			<summary>Animates from the <see cref="T:System.Windows.Thickness"></see> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> using linear interpolation.  </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame"></see> class with the specified ending value. </summary>
			<param name="value">Ending value (also known as "target value") for the key frame.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame"></see> class with the specified ending value and key time.</summary>
			<param name="value">Ending value (also known as "target value") for the key frame.</param>
			<param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.CreateInstanceCore">
			<summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame"></see>.</summary>
			<returns>A new <see cref="T:System.Windows.Media.Animation.LinearThicknessKeyFrame"></see>.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.LinearThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
			<summary>Interpolates, in a linear fashion, between the previous key frame value and the value of the current key frame, using the supplied progress increment. </summary>
			<returns>The output value of this key frame given the specified base value and progress.</returns>
			<param name="baseValue">The value to animate from.</param>
			<param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
		</member>
		<member name="T:System.Windows.Media.Animation.PauseStoryboard">
			<summary>A trigger action that pauses a <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.PauseStoryboard.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.PauseStoryboard"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Media.Animation.RemoveStoryboard">
			<summary>A trigger action that removes a <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.RemoveStoryboard.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.RemoveStoryboard"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Media.Animation.ResumeStoryboard">
			<summary>Supports a trigger action that resumes a paused <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ResumeStoryboard.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ResumeStoryboard"></see> class. </summary>
		</member>
		<member name="T:System.Windows.Media.Animation.SeekStoryboard">
			<summary>A trigger action that provides functionality for seeking (skipping) to a specified time within the active period of a <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.SeekStoryboard.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SeekStoryboard"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.SeekStoryboard.ShouldSerializeOffset">
			<summary>Returns a value that indicates whether the <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset"></see> property of this <see cref="T:System.Windows.Media.Animation.SeekStoryboard"></see> should be serialized.</summary>
			<returns>true if the <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset"></see> property of this <see cref="T:System.Windows.Media.Animation.SeekStoryboard"></see> should be serialized; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.SeekStoryboard.Offset">
			<summary>Gets or sets the amount by which the storyboard should move forward or backward from the seek origin <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin"></see>. .</summary>
			<returns>A positive or negative value that specifies the amount by which the storyboard should move forward or backward from the seek origin <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Origin"></see>. The default value is 0. </returns>
		</member>
		<member name="P:System.Windows.Media.Animation.SeekStoryboard.Origin">
			<summary>Gets or sets the position from which this seek operation's <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset"></see> is applied. </summary>
			<returns>The position from which this seek operation's <see cref="P:System.Windows.Media.Animation.SeekStoryboard.Offset"></see> is applied. The default value is <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime"></see>.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio">
			<summary>A trigger action that changes the speed of a <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.SetStoryboardSpeedRatio.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SetStoryboardSpeedRatio"></see> class.</summary>
		</member>
		<member name="P:System.Windows.Media.Animation.SetStoryboardSpeedRatio.SpeedRatio">
			<summary>Gets or sets a new <see cref="T:System.Windows.Media.Animation.Storyboard"></see> animation speed as a ratio of the old animation speed.</summary>
			<returns>The speed ratio for the <see cref="T:System.Windows.Media.Animation.Storyboard"></see>. The default value is 1.0. </returns>
		</member>
		<member name="T:System.Windows.Media.Animation.SkipStoryboardToFill">
			<summary>A trigger action that advances a <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to the end of its fill period. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.SkipStoryboardToFill.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SkipStoryboardToFill"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Media.Animation.SplineThicknessKeyFrame">
			<summary>Animates from the <see cref="T:System.Windows.Thickness"></see> value of the previous key frame to its own <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> using splined interpolation.  </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame"></see> class with the specified ending value.  </summary>
			<param name="value">Ending value (also known as "target value") for the key frame.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame"></see> class with the specified ending value and key time. </summary>
			<param name="value">Ending value (also known as "target value") for the key frame.</param>
			<param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame"></see> class with the specified ending value, key time, and <see cref="T:System.Windows.Media.Animation.KeySpline"></see>. </summary>
			<param name="keySpline"><see cref="T:System.Windows.Media.Animation.KeySpline"></see> for the key frame. The <see cref="T:System.Windows.Media.Animation.KeySpline"></see> represents a Bezier curve which defines animation progress of the key frame.</param>
			<param name="value">Ending value (also known as "target value") for the key frame.</param>
			<param name="keyTime">Key time for the key frame. The key time determines when the target value is reached which is also when the key frame ends.</param>
		</member>
		<member name="F:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySplineProperty">
			<summary>Identifies the <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.CreateInstanceCore">
			<summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame"></see>.</summary>
			<returns>A new <see cref="T:System.Windows.Media.Animation.SplineThicknessKeyFrame"></see>.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.SplineThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
			<summary>Uses splined interpolation to transition between the previous key frame value and the value of the current key frame.</summary>
			<returns>The output value of this key frame given the specified base value and progress.</returns>
			<param name="baseValue">The value to animate from.</param>
			<param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
		</member>
		<member name="P:System.Windows.Media.Animation.SplineThicknessKeyFrame.KeySpline">
			<summary>Gets or sets the two control points that define animation progress for this key frame.   </summary>
			<returns>The two control points that specify the cubic  Bezier curve which defines the progress of the key frame.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.StopStoryboard">
			<summary>A trigger action that stops a <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.StopStoryboard.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.StopStoryboard"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Media.Animation.Storyboard">
			<summary>A container timeline that provides object and property targeting information for its child animations. </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty">
			<summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> attached property.  </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty">
			<summary>Identifies the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty"></see> attached property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them.</summary>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject. </param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them.</summary>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them.</summary>
			<param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior"></see>.</summary>
			<param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them.</summary>
			<param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a  <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets within the specified template and initiates them.</summary>
			<param name="frameworkTemplate">The template to animate. </param>
			<param name="containingObject">The object to which the specified frameworkTemplate has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject. </param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior"></see>.</summary>
			<param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them, using the specified <see cref="T:System.Windows.Media.Animation.HandoffBehavior"></see>. </summary>
			<param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
			<param name="isControllable">Declares whether the animation is controllable (can be paused) once started.</param>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets within the specified template and initiates them.</summary>
			<param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
			<param name="frameworkTemplate">The template to animate.</param>
			<param name="containingObject">The object to which the specified frameworkTemplate has been applied.  Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets within the specified template and initiates them.</summary>
			<param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
			<param name="frameworkTemplate">The template to animate.</param>
			<param name="containingObject">The object to which the specified frameworkTemplate has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets and initiates them.</summary>
			<param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
			<param name="isControllable">Declares whether the animation is controllable (can be paused) once started.</param>
			<param name="containingObject">An object contained within the same name scope as the targets of this storyboard's animations. Animations without a specified <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)">
			<summary>Applies the animations associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to their targets within the specified template and initiates them.</summary>
			<param name="handoffBehavior">The behavior the new animation should use to interact with any current animations.</param>
			<param name="isControllable">true if the storyboard should be interactively controllable; otherwise, false.</param>
			<param name="frameworkTemplate">The template to animate.</param>
			<param name="containingObject">The object to which the specified frameworkTemplate has been applied. Animations without a <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> will be applied to containingObject.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Clone">
			<summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
			<returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property was true.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.Storyboard"></see> class.  </summary>
			<returns>A new <see cref="T:System.Windows.Media.Animation.Storyboard"></see> instance.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)">
			<summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed"></see> of the clock that was created for this storyboard. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)">
			<summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed"></see> of the clock that was created for this storyboard.</summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)">
			<summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>This clock's current iteration within its current active period, or null if this clock is stopped.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)">
			<summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>This clock's current iteration within its current active period, or null if this clock is stopped.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)">
			<summary>Gets the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>null if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"></see>, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline"></see> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration"></see> of <see cref="P:System.Windows.Duration.Forever"></see>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)">
			<summary>Gets the <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>null if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"></see>, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline"></see> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration"></see> of <see cref="P:System.Windows.Duration.Forever"></see>; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration. A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)">
			<summary>Gets the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active"></see>, <see cref="F:System.Windows.Media.Animation.ClockState.Filling"></see>, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"></see>.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)">
			<summary>Gets the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>The current state of the clock created for this storyboard: <see cref="F:System.Windows.Media.Animation.ClockState.Active"></see>, <see cref="F:System.Windows.Media.Animation.ClockState.Filling"></see>, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"></see>.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)">
			<summary>Gets the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>null if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"></see>; otherwise, the current time of the storyboard's clock.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)">
			<summary>Gets the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"></see> of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see>.</summary>
			<returns>null if this storyboard's clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped"></see>; otherwise, the current time of the storyboard's clock.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> is paused. </summary>
			<returns>true if the <see cref="T:System.Windows.Media.Animation.Clock"></see> created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> is paused; otherwise, false.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)">
			<summary>Gets a value that indicates whether the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> is paused.</summary>
			<returns>true if the <see cref="T:System.Windows.Media.Animation.Clock"></see> created for this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> is paused; otherwise, false.</returns>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)">
			<summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline"></see>. </summary>
			<returns>The name of the dependency object targeted by element.</returns>
			<param name="element">The timeline from which to retrieve the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName"></see>. </param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)">
			<summary>Retrieves the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty"></see> value of the specified <see cref="T:System.Windows.Media.Animation.Timeline"></see>. </summary>
			<returns>The property targeted by element.</returns>
			<param name="element">The dependency object from which to get the <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty"></see>.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)">
			<summary>Pauses the animation clock, or runtime-state, of the specified FrameworkContentElement associated with this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> instance. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)">
			<summary>Pauses the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this storyboard. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)">
			<summary>Removes the clocks that were generated for this storyboard. Animations that belong to this storyboard will stop affecting the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior"></see> setting.</summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)">
			<summary>Removes the clocks that were generated for this storyboard. Animations that belong to this storyboard will stop affecting the properties they once animated, regardless of their <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior"></see> setting. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)">
			<summary>Resumes the clock that was created for this storyboard. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)">
			<summary>Resumes the clock that was created for this storyboard. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
			<summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard"></see> will perform the requested seek when the next clock tick occurs.</summary>
			<param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified origin.</param>
			<param name="origin">The position from which offset is applied.</param>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
			<summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to the specified position. The <see cref="T:System.Windows.Media.Animation.Storyboard"></see> will perform the requested seek when the next clock tick occurs. </summary>
			<param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified origin.</param>
			<param name="origin">The position from which offset is applied.</param>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
			<summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to a new position immediately (synchronously).</summary>
			<param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified origin.</param>
			<param name="origin">The position from which offset is applied.</param>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)">
			<summary>Seeks this <see cref="T:System.Windows.Media.Animation.Storyboard"></see> to a new position immediately (synchronously).</summary>
			<param name="offset">A positive or negative value that describes the amount by which the timeline should move forward or backward from the specified origin.</param>
			<param name="origin">The position from which offset is applied.</param>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)">
			<summary>Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this storyboard.</summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
			<param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"></see> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"></see> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"></see> of 0.5 gives the storyboard an effective speed of 1.5.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)">
			<summary>Sets the interactive speed ratio of the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this storyboard. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
			<param name="speedRatio">A finite value greater than zero that is the new interactive speed ratio of the storyboard. This value is multiplied against the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"></see> value to determine the storyboard's effective speed. This value does not overwrite the storyboard's <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"></see> property. For example, calling this method and specifying an interactive speed ratio of 3 on a storyboard with a <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio"></see> of 0.5 gives the storyboard an effective speed of 1.5. </param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)">
			<summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline"></see> target the dependency object with the specified name. </summary>
			<param name="name">The name of the dependency object to target.</param>
			<param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline"></see> that should target the specified dependency object.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)">
			<summary>Makes the specified <see cref="T:System.Windows.Media.Animation.Timeline"></see> target the specified dependency property.</summary>
			<param name="element">The <see cref="T:System.Windows.Media.Animation.Timeline"></see> with which to associate the specified dependency property. </param>
			<param name="path">A path that describe the dependency property to be animated.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)">
			<summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock"></see> to the end of its active period.</summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)">
			<summary>Advances the current time of this storyboard's <see cref="T:System.Windows.Media.Animation.Clock"></see> to the end of its active period. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)">
			<summary>Halts the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this storyboard. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)">
			<summary>Halts the <see cref="T:System.Windows.Media.Animation.Clock"></see> that was created for this storyboard. </summary>
			<param name="containingObject">The object specified when the <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)"></see> method was called. This object contains the <see cref="T:System.Windows.Media.Animation.Clock"></see> objects that were generated for this storyboard and its children.</param>
		</member>
		<member name="P:System.Windows.Media.Animation.Storyboard.TargetName">
			<summary> Gets or sets the name of the object to animate. The object must be a <see cref="T:System.Windows.FrameworkElement"></see>, <see cref="T:System.Windows.FrameworkContentElement"></see>, or <see cref="T:System.Windows.Freezable"></see>.</summary>
			<returns>The name of the <see cref="T:System.Windows.FrameworkElement"></see>, <see cref="T:System.Windows.FrameworkContentElement"></see>, or <see cref="T:System.Windows.Freezable"></see> to animate.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.Storyboard.TargetProperty">
			<summary> Gets or sets the property that should be animated. </summary>
			<returns>The property to animate.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.ThicknessAnimation">
			<summary> Animates the value of a  Thickness property between two target values using      linear interpolation over a specified Duration. </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor">
			<summary> Initializes a new instance of the ThicknessAnimation class. </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)">
			<summary> Initializes a new instance of the ThicknessAnimation class that animates to the specified value over the specified duration. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
			<param name="toValue">The destination value of the animation. </param>
			<param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
			<summary> Initializes a new instance of the ThicknessAnimation class that animates to the specified value over the specified duration and has the specified fill behavior. The starting value for the animation is the base value of the property being animated or the output from another animation. </summary>
			<param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
			<param name="toValue">The destination value of the animation. </param>
			<param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)">
			<summary> Initializes a new instance of the ThicknessAnimation class that animates from the specified starting value to the specified destination value over the specified duration. </summary>
			<param name="toValue">The destination value of the animation. </param>
			<param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
			<param name="fromValue">The starting value of the animation.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)">
			<summary> Initializes a new instance of the ThicknessAnimation class that animates from the specified starting value to the specified destination value over the specified duration and has the specified fill behavior. </summary>
			<param name="fillBehavior">Specifies how the animation behaves when it is not active.</param>
			<param name="toValue">The destination value of the animation. </param>
			<param name="duration">The length of time the animation takes to play from start to finish, once. See the Duration property for more information.</param>
			<param name="fromValue">The starting value of the animation.</param>
		</member>
		<member name="F:System.Windows.Media.Animation.ThicknessAnimation.ByProperty">
			<summary> Identifies the By dependency property. </summary>
			<returns>The identifier for the By dependency property.</returns>
		</member>
		<member name="F:System.Windows.Media.Animation.ThicknessAnimation.FromProperty">
			<summary> Identifies the From dependency property. </summary>
			<returns>The identifier for the From dependency property.</returns>
		</member>
		<member name="F:System.Windows.Media.Animation.ThicknessAnimation.ToProperty">
			<summary> Identifies the To dependency property. </summary>
			<returns>The identifier for the To dependency property.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.Clone">
			<summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimation"></see>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
			<returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property was true.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore">
			<summary>Creates a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation"></see>.          </summary>
			<returns>The new instance.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
			<summary>Calculates a value that represents the current value of the property being animated, as determined by the <see cref="T:System.Windows.Media.Animation.ThicknessAnimation"></see>. </summary>
			<returns>The calculated value of the property, as determined by the current animation.</returns>
			<param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
			<param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
			<param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock"></see> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"></see> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"></see> used by the animation.</param>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimation.By">
			<summary> Gets or sets the total amount by which the animation changes its starting value. </summary>
			<returns>The total amount by which the animation changes its starting value.     The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimation.From">
			<summary>  Gets or sets the animation's starting value.</summary>
			<returns>The starting value of the animation. The default value is null.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsAdditive">
			<summary>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value. This is a dependency property. </summary>
			<returns>true if the target property's current value should be added to this animation's starting value; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimation.IsCumulative">
			<summary> Gets or sets a value that specifies whether the animation's value accumulates when it repeats. </summary>
			<returns>true if the animation accumulates its values when its RepeatBehavior property causes it to repeat its simple duration. otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimation.To">
			<summary> Gets or sets the animation's ending value. </summary>
			<returns>The ending value of the animation. The default value is null.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.ThicknessAnimationBase">
			<summary>Abstract class that, when implemented, animates a <see cref="T:System.Windows.Thickness"></see> value. </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.Clone">
			<summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationBase"></see>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
			<returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property was true.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
			<summary>Gets the current value of the animation.</summary>
			<returns>The current value of the animation.</returns>
			<param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
			<param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
			<param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock"></see> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"></see> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"></see> value to be used by the animation to generate its output value.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
			<summary>Gets the current value of the animation.</summary>
			<returns>The current value of this animation.</returns>
			<param name="defaultOriginValue">The origin value provided to the animation if the animation does not have its own start value. </param>
			<param name="defaultDestinationValue">The destination value provided to the animation if the animation does not have its own destination value.</param>
			<param name="animationClock">The <see cref="T:System.Windows.Media.Animation.AnimationClock"></see> which can generate the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"></see> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"></see> value to be used by the animation to generate its output value.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
			<summary>Calculates a value that represents the current value of the property being animated, as determined by the host animation. </summary>
			<returns>The current value of this animation.</returns>
			<param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value. </param>
			<param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
			<param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock"></see> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"></see> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"></see> used by the host animation.</param>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimationBase.TargetPropertyType">
			<summary>Gets the type of value this animation generates.</summary>
			<returns>The type of value produced by this animation.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames">
			<summary> Animates the value of a <see cref="T:System.Windows.Thickness"></see> property along a set of <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames"></see>.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddChild(System.Object)">
			<summary>Adds a child <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>. </summary>
			<param name="child">The object to be added as the child of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>. </param>
			<exception cref="T:System.ArgumentException">The parameter child is not a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see>.</exception>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.AddText(System.String)">
			<summary>Adds a text string as a child of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>.</summary>
			<param name="childText">The text added to the <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>.</param>
			<exception cref="T:System.InvalidOperationException">A <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> does not accept text as a child, so this method will raise this exception unless a derived class has overridden this behavior which allows text to be added.</exception>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.Clone">
			<summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
			<returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property was true.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCore(System.Windows.Freezable)">
			<summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
			<param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> to clone.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValue">
			<summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are. </summary>
			<returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property was true.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CloneCurrentValueCore(System.Windows.Freezable)">
			<summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
			<param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> to clone.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.CreateInstanceCore">
			<summary>Creates a new instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>. </summary>
			<returns>A new instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.FreezeCore(System.Boolean)">
			<summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> object unmodifiable or determines whether it can be made unmodifiable..</summary>
			<returns>If isChecking is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If isChecking is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
			<param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetAsFrozenCore(System.Windows.Freezable)">
			<summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> object. </summary>
			<param name="source">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> object to clone.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
			<summary>Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
			<param name="source">The <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> to copy and freeze.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)">
			<summary> Calculates a value that represents the current value of the property being animated, as determined by this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>.</summary>
			<returns>The calculated value of the property, as determined by the current instance.</returns>
			<param name="defaultOriginValue">The suggested origin value, used if the animation does not have its own explicitly set start value.</param>
			<param name="defaultDestinationValue">The suggested destination value, used if the animation does not have its own explicitly set end value.</param>
			<param name="animationClock">An <see cref="T:System.Windows.Media.Animation.AnimationClock"></see> that generates the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime"></see> or <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress"></see> used by the host animation.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
			<summary>Provide a custom natural <see cref="T:System.Windows.Duration"></see> when the <see cref="T:System.Windows.Duration"></see> property is set to <see cref="P:System.Windows.Duration.Automatic"></see>. </summary>
			<returns>If the last key frame of this animation is a <see cref="T:System.Windows.Media.Animation.KeyTime"></see>, then this value is used as the <see cref="P:System.Windows.Media.Animation.Clock.NaturalDuration"></see>; otherwise it will be one second.</returns>
			<param name="clock">The <see cref="T:System.Windows.Media.Animation.Clock"></see> whose natural duration is desired.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.OnChanged">
			<summary>Called when the current <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> object is modified.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.ShouldSerializeKeyFrames">
			<summary>Returns true if the value of the <see cref="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames"></see> property of this instance of <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see> should be value-serialized.</summary>
			<returns>true if the property value should be serialized; otherwise, false.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System.Windows.Markup.IAddChild.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.System.Windows.Markup.IAddChild.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsAdditive">
			<summary>Gets a value that specifies whether the animation's output value is added to the base value of the property being animated.  </summary>
			<returns>true if the animation adds its output value to the base value of the property being animated instead of replacing it; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.IsCumulative">
			<summary>Gets or sets a value that specifies whether the animation's value accumulates when it repeats.</summary>
			<returns>true if the animation accumulates its values when its <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior"></see> property causes it to repeat its simple duration; otherwise, false. The default value is false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames.KeyFrames">
			<summary> Gets or sets the collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> objects that define the animation. </summary>
			<returns>The collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> objects that define the animation. The default value is <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty"></see>.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.ThicknessKeyFrame">
			<summary>Abstract class that, when implemented, defines an animation segment with its own target value and interpolation method for a <see cref="T:System.Windows.Media.Animation.ThicknessAnimationUsingKeyFrames"></see>. </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> class that has the specified target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see>.  </summary>
			<param name="value">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> instance.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.#ctor(System.Windows.Thickness,System.Windows.Media.Animation.KeyTime)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> class that has the specified target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> and <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime"></see>.  </summary>
			<param name="value">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> instance.</param>
			<param name="keyTime">The <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime"></see> of the new <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> instance.</param>
		</member>
		<member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTimeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Media.Animation.ThicknessKeyFrame.ValueProperty">
			<summary>Identifies the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValue(System.Windows.Thickness,System.Double)">
			<summary>Returns the interpolated value of a specific key frame at the progress increment provided. </summary>
			<returns>The output value of this key frame given the specified base value and progress.</returns>
			<param name="baseValue">The value to animate from.</param>
			<param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">Occurs if keyFrameProgress is not between 0.0 and 1.0, inclusive.</exception>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrame.InterpolateValueCore(System.Windows.Thickness,System.Double)">
			<summary>Calculates the value of a key frame at the progress increment provided. </summary>
			<returns>The output value of this key frame given the specified base value and progress.</returns>
			<param name="baseValue">The value to animate from; typically the value of the previous key frame.</param>
			<param name="keyFrameProgress">A value between 0.0 and 1.0, inclusive, that specifies the percentage of time that has elapsed for this key frame.</param>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime">
			<summary> Gets or sets the time at which the key frame's target <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> should be reached. </summary>
			<returns>The time at which the key frame's current value should be equal to its <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value"></see> property. The default value is <see cref="P:System.Windows.Media.Animation.KeyTime.Uniform"></see>.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrame.Value">
			<summary> Gets or sets the key frame's target value. </summary>
			<returns>The key frame's target value, which is the value of this key frame at its specified <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrame.KeyTime"></see>. The default value is 0.</returns>
		</member>
		<member name="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection">
			<summary>Represents a collection of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> objects. </summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Add(System.Windows.Media.Animation.ThicknessKeyFrame)">
			<summary>Adds a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to the end of the collection. </summary>
			<returns>The index at which the keyFrame was added.</returns>
			<param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to add to the end of the collection.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Clone">
			<summary>Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
			<returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property will be false even if the source's <see cref="P:System.Windows.Freezable.IsFrozen"></see> property was true.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCore(System.Windows.Freezable)">
			<summary>Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
			<param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> to clone.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)">
			<summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
			<param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> to clone.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Contains(System.Windows.Media.Animation.ThicknessKeyFrame)">
			<summary>Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see>. </summary>
			<returns>true if the collection contains keyFrame; otherwise, false.</returns>
			<param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to locate in the collection.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CopyTo(System.Windows.Media.Animation.ThicknessKeyFrame[],System.Int32)">
			<summary>Copies all of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> objects in a collection to a specified array. </summary>
			<param name="array">Identifies the array to which content is copied.</param>
			<param name="index">Index position in the array to which the contents of the collection are copied.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.CreateInstanceCore">
			<summary>Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>.</summary>
			<returns>A frozen instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.FreezeCore(System.Boolean)">
			<summary>Makes this instance of <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> unmodifiable or determines whether it can be made unmodifiable.</summary>
			<returns>If isChecking is true, this method returns true if this instance can be made read-only, or false if it cannot be made read-only. If isChecking is false, this method returns true if this instance is now read-only, or false if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</returns>
			<param name="isChecking">true to check if this instance can be frozen; false to freeze this instance. </param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)">
			<summary>Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> object. </summary>
			<param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> object to clone.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
			<summary>Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> using current property values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
			<param name="sourceFreezable">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see> to clone.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.GetEnumerator">
			<summary> Returns an enumerator that can iterate through the collection. </summary>
			<returns>An IEnumerator that can iterate through the collection.</returns>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IndexOf(System.Windows.Media.Animation.ThicknessKeyFrame)">
			<summary> Searches for the specified <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> and returns the zero-based index of the first occurrence within the entire collection.</summary>
			<returns>The zero-based index of the first occurrence of keyFrame within the entire collection, if found; otherwise, -1.</returns>
			<param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to locate in the collection.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ThicknessKeyFrame)">
			<summary>Inserts a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> into a specific location within the collection. </summary>
			<param name="keyFrame">The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> object to insert in the collection.</param>
			<param name="index">The index position at which the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> is inserted.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Remove(System.Windows.Media.Animation.ThicknessKeyFrame)">
			<summary>Removes a <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> object from the collection. </summary>
			<param name="keyFrame">Identifies the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to remove from the collection.</param>
		</member>
		<member name="M:System.Windows.Media.Animation.ThicknessKeyFrameCollection.RemoveAt(System.Int32)">
			<summary>Removes the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> at the specified index position from the collection. </summary>
			<param name="index">Index position of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to be removed.</param>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count">
			<summary>Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>.</summary>
			<returns>The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>. </returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Empty">
			<summary> Gets an empty <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>.  </summary>
			<returns>An empty <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrameCollection"></see>.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsFixedSize">
			<summary>Gets a value that indicates if the collection is frozen.</summary>
			<returns>true if the collection is frozen; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsReadOnly">
			<summary> Gets a value that indicates if the collection is read-only.</summary>
			<returns>true if the collection is read-only; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.IsSynchronized">
			<summary>Gets a value that indicates whether access to the collection is synchronized (thread-safe). </summary>
			<returns>true if access to the collection is synchronized (thread-safe); otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Item(System.Int32)">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> at the specified index position.  </summary>
			<returns>The <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> at the specified index.</returns>
			<param name="index">The zero-based index of the <see cref="T:System.Windows.Media.Animation.ThicknessKeyFrame"></see> to get or set.</param>
			<exception cref="T:System.ArgumentOutOfRangeException">index is less than zero.-or-index is equal to or greater than <see cref="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.Count"></see>.</exception>
			<exception cref="T:System.InvalidOperationException">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen"></see> property is true).</exception>
		</member>
		<member name="P:System.Windows.Media.Animation.ThicknessKeyFrameCollection.SyncRoot">
			<summary> Gets an object that can be used to synchronize access to the collection. </summary>
			<returns>An object that can be used to synchronize access to the collection.</returns>
		</member>
		<member name="T:System.Windows.Navigation.CustomContentState">
			<summary><see cref="T:System.Windows.Navigation.CustomContentState"></see> enables the ability to navigate through different states of a single piece of source content without reloading the source content for each subsequent navigation.</summary>
		</member>
		<member name="M:System.Windows.Navigation.CustomContentState.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.CustomContentState"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)">
			<summary>Called to reapply state to a piece of content when navigation occurs.</summary>
			<param name="navigationService">The <see cref="T:System.Windows.Navigation.NavigationService"></see> owned by the navigator responsible for the content to which this <see cref="T:System.Windows.Navigation.CustomContentState"></see> is being applied.</param>
			<param name="mode">A <see cref="T:System.Windows.Navigation.NavigationMode"></see> that specifies how the content to which the <see cref="T:System.Windows.Navigation.CustomContentState"></see> is being applied was navigated to.</param>
		</member>
		<member name="P:System.Windows.Navigation.CustomContentState.JournalEntryName">
			<summary>The name for the content that is stored in navigation history. The value of <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName"></see> is displayed from <see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>, and Windows Internet Explorer 7 navigation UI.</summary>
			<returns>The <see cref="T:System.String"></see> name of the content that is stored in navigation history.</returns>
		</member>
		<member name="T:System.Windows.Navigation.FragmentNavigationEventArgs">
			<summary>Provides data for the FragmentNavigation event.</summary>
		</member>
		<member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Fragment">
			<summary>Gets the uniform resource identifier (URI) fragment.</summary>
			<returns>The URI fragment. If you set the property to an empty string, the top of the content will be navigated to by default.</returns>
		</member>
		<member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Handled">
			<summary>Gets or sets a value that indicates whether the fragment navigation has been handled. </summary>
			<returns>true if the navigation has been handled; otherwise, false.</returns>
		</member>
		<member name="P:System.Windows.Navigation.FragmentNavigationEventArgs.Navigator">
			<summary>The navigator that raised the <see cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation"></see> event.</summary>
			<returns>A <see cref="T:System.Object"></see> that refers to the navigator (Internet Explorer, <see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>.) that is navigating to the content fragment.</returns>
		</member>
		<member name="T:System.Windows.Navigation.FragmentNavigationEventHandler">
			<summary>Represents the method that handles the FragmentNavigation event.</summary>
		</member>
		<member name="T:System.Windows.Navigation.IProvideCustomContentState">
			<summary>Implemented by a class that needs to add custom state to the navigation history entry for content before the content is navigated away from.</summary>
		</member>
		<member name="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState">
			<summary>Returns an instance of a custom state class that is to be associated with content in navigation history.</summary>
			<returns>An instance of a custom <see cref="T:System.Windows.Navigation.CustomContentState"></see> class that is to be associated with content in navigation history.</returns>
		</member>
		<member name="T:System.Windows.Navigation.JournalEntry">
			<summary>Represents an entry in either back or forward navigation history.</summary>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntry.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<param name="context">The streaming context.</param>
			<param name="info">The serialization information.</param>
		</member>
		<member name="F:System.Windows.Navigation.JournalEntry.KeepAliveProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive"></see> attached property.</returns>
		</member>
		<member name="F:System.Windows.Navigation.JournalEntry.NameProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntry.Name"></see> attached property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.JournalEntry.Name"></see> attached property.</returns>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntry.GetKeepAlive(System.Windows.DependencyObject)">
			<summary>Returns the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive"></see> attached property of the journal entry for the specified element. </summary>
			<returns>The value of the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive"></see> attached property of the journal entry for the specified element. </returns>
			<param name="dependencyObject">The element from which to get the attached property value.</param>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntry.GetName(System.Windows.DependencyObject)">
			<summary>Gets the <see cref="P:System.Windows.Navigation.JournalEntry.Name"></see> attached property of the journal entry for the specified element. </summary>
			<returns>The <see cref="P:System.Windows.Navigation.JournalEntry.Name"></see> attached property of the journal entry for the specified element. </returns>
			<param name="dependencyObject">The element from which to get the attached property value.</param>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntry.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
			<summary>This type or member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
			<param name="context">The streaming context.</param>
			<param name="info">The data that is required to serialize the target object.</param>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntry.SetKeepAlive(System.Windows.DependencyObject,System.Boolean)">
			<summary>Sets the <see cref="P:System.Windows.Navigation.JournalEntry.KeepAlive"></see> attached property of the specified element.</summary>
			<param name="dependencyObject">The element on which to set the attached property value.</param>
			<param name="keepAlive">true to keep the journal entry in memory; otherwise, false.</param>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntry.SetName(System.Windows.DependencyObject,System.String)">
			<summary>Sets the <see cref="P:System.Windows.Navigation.JournalEntry.Name"></see> attached property of the specified element.</summary>
			<param name="dependencyObject">The element on which to set the attached property value.</param>
			<param name="name">The name to be assigned to the attached property.</param>
		</member>
		<member name="P:System.Windows.Navigation.JournalEntry.CustomContentState">
			<summary>Gets or sets the <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that is associated with this journal entry.</summary>
			<returns>The <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that is associated with this journal entry. If one is not associated, null is returned.</returns>
		</member>
		<member name="P:System.Windows.Navigation.JournalEntry.Name">
			<summary>Gets or sets the name of the journal entry. This is an attached property.</summary>
			<returns>The name of the journal entry.</returns>
		</member>
		<member name="P:System.Windows.Navigation.JournalEntry.Source">
			<summary>Gets or sets the <see cref="T:System.Uri"></see> of the content that was navigated to.</summary>
			<returns>The <see cref="T:System.Uri"></see> of the content that was navigated to; otherwise, null.</returns>
		</member>
		<member name="P:System.Windows.Navigation.JournalEntry.KeepAlive">
			<summary>Gets or sets whether the content of a journal entry is either retained or recreated when navigated to in navigation history.</summary>
			<returns>true if the content is retained in navigation history; otherwise, false.</returns>
		</member>
		<member name="T:System.Windows.Navigation.JournalEntryListConverter">
			<summary>This type or member supports the Microsoft .NET infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntryListConverter.#ctor">
			<summary>This type or member supports the Microsoft .NET infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="T:System.Windows.Navigation.JournalEntryPosition">
			<summary>Specifies the position in navigation history of a piece of content with respect to current content. <see cref="T:System.Windows.Navigation.JournalEntryPosition"></see> is used by <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter"></see>.</summary>
		</member>
		<member name="F:System.Windows.Navigation.JournalEntryPosition.Back">
			<summary>Content is in back navigation history relative to current content.</summary>
		</member>
		<member name="F:System.Windows.Navigation.JournalEntryPosition.Current">
			<summary>Content is the current content.</summary>
		</member>
		<member name="F:System.Windows.Navigation.JournalEntryPosition.Forward">
			<summary>Content is in forward navigation history with respect to current content.</summary>
		</member>
		<member name="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter">
			<summary><see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter"></see> merges navigation back history and navigation forward history (as exposed by <see cref="T:System.Windows.Controls.Frame"></see> or <see cref="T:System.Windows.Navigation.NavigationWindow"></see>) into a single, Windows Internet Explorer 7-style navigation menu.</summary>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.JournalEntryUnifiedViewConverter"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
			<summary>Merges two navigation history stacks.</summary>
			<returns>An <see cref="T:System.Collections.IEnumerable"></see> that can be used to enumerate the merged list of navigation history stacks if neither passed navigation stack is null. null, otherwise.</returns>
			<param name="culture">This parameter is not used.</param>
			<param name="targetType">This parameter is not used.</param>
			<param name="parameter">This parameter is not used.</param>
			<param name="values">An array of two navigation stacks. For <see cref="T:System.Windows.Controls.Frame"></see>, the navigation stacks are available from the following properties:<see cref="P:System.Windows.Controls.Frame.BackStack"></see><see cref="P:System.Windows.Controls.Frame.ForwardStack"></see>For <see cref="T:System.Windows.Navigation.NavigationWindow"></see>, the navigation stacks are available from the following properties:<see cref="P:System.Windows.Navigation.NavigationWindow.BackStack"></see><see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack"></see></param>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
			<summary>Not implemented.</summary>
			<param name="culture">This parameter is not used.</param>
			<param name="parameter">This parameter is not used.</param>
			<param name="targetTypes">This parameter is not used.</param>
			<param name="value">This parameter is not used.</param>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.GetJournalEntryPosition(System.Windows.DependencyObject)">
			<summary>Gets the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition"></see> attached property for the specified element.</summary>
			<returns>The value of the <see cref="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition"></see> attached property of the journal entry for the specified element. </returns>
			<param name="element">The element from which to get the attached property value.</param>
		</member>
		<member name="M:System.Windows.Navigation.JournalEntryUnifiedViewConverter.SetJournalEntryPosition(System.Windows.DependencyObject,System.Windows.Navigation.JournalEntryPosition)">
			<summary>Sets the <see cref="F:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPositionProperty"></see> attached property of the specified element.</summary>
			<param name="position">Position of the <see cref="T:System.Windows.Navigation.JournalEntryPosition"></see> object.</param>
			<param name="element">The element on which to set the attached property value.</param>
		</member>
		<member name="P:System.Windows.Navigation.JournalEntryUnifiedViewConverter.JournalEntryPosition">
			<summary>Gets or sets a value that specifies whether an entry is in back navigation history, forward navigation history, or is the current content of a navigator.</summary>
			<returns>A <see cref="T:System.Windows.Navigation.JournalEntryPosition"></see> value that specifies whether an entry is in back navigation history, forward navigation history, or is the current content of a navigator.</returns>
		</member>
		<member name="T:System.Windows.Navigation.JournalOwnership">
			<summary>Specifies whether a <see cref="T:System.Windows.Controls.Frame"></see> uses its own journal. <see cref="T:System.Windows.Navigation.JournalOwnership"></see> is used by the <see cref="P:System.Windows.Controls.Frame.JournalOwnership"></see> property.</summary>
		</member>
		<member name="F:System.Windows.Navigation.JournalOwnership.Automatic">
			<summary>Whether or not this <see cref="T:System.Windows.Controls.Frame"></see> will create and use its own journal depends on its parent.</summary>
		</member>
		<member name="F:System.Windows.Navigation.JournalOwnership.OwnsJournal">
			<summary>The <see cref="T:System.Windows.Controls.Frame"></see> maintains its own journal.</summary>
		</member>
		<member name="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal">
			<summary>The <see cref="T:System.Windows.Controls.Frame"></see> uses the journal of the next available navigation host up the content tree, if available. Otherwise, navigation history is not maintained for the <see cref="T:System.Windows.Controls.Frame"></see>.</summary>
		</member>
		<member name="T:System.Windows.Navigation.LoadCompletedEventHandler">
			<summary>Represents the method that handles the LoadCompleted event.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigatedEventHandler">
			<summary>Represents the method that handles the Navigated events.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigatingCancelEventArgs">
			<summary>Provides data for the Navigating event.</summary>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Content">
			<summary>Gets a reference to the content object that is being navigated to.</summary>
			<returns>A <see cref="T:System.Object"></see> reference to the content object that is being navigated to; otherwise, null.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave">
			<summary>Gets and sets the <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that is associated with the back navigation history entry for the page being navigated from.</summary>
			<returns>The <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that is associated with the back navigation history entry for the page being navigated from.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData">
			<summary>Gets the optional data <see cref="T:System.Object"></see> that was passed when navigation commenced.</summary>
			<returns>The optional data <see cref="T:System.Object"></see> that was passed when navigation commenced.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.IsNavigationInitiator">
			<summary>Indicates whether the navigator (<see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>) that is specified by <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator"></see> is servicing this navigation, or whether a parent navigator is doing so.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is true if the navigator that is specified by <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator"></see> is servicing this navigation. Otherwise, false is returned, such as during a nested <see cref="T:System.Windows.Controls.Frame"></see> navigation.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode">
			<summary>Gets a <see cref="T:System.Windows.Navigation.NavigationMode"></see> value that indicates the type of navigation that is taking place.</summary>
			<returns>A <see cref="T:System.Windows.Navigation.NavigationMode"></see> value that indicates the type of navigation that is taking place.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Navigator">
			<summary>The navigator that raised this event.</summary>
			<returns>An <see cref="T:System.Object"></see> that is the navigator that raised this event</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.TargetContentState">
			<summary>Gets the <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that is to be applied to the content being navigated to.</summary>
			<returns>The <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that is to be applied to the content being navigated to.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri">
			<summary>Gets the uniform resource identifier (URI) for the content being navigated to.</summary>
			<returns>The <see cref="T:System.Uri"></see> for the content being navigated to. If navigating to an object, <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.Uri"></see> is null.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigatingCancelEventArgs.WebRequest">
			<summary>Gets the <see cref="T:System.Net.WebRequest"></see> object that is used to request the specified content.</summary>
			<returns>Gets the <see cref="T:System.Net.WebRequest"></see> object that is used to request the specified content. If navigating to an object, <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.WebRequest"></see> is null.</returns>
		</member>
		<member name="T:System.Windows.Navigation.NavigatingCancelEventHandler">
			<summary>Represents the method that handles the Navigating events.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigationEventArgs">
			<summary> Event arguments for non-cancelable navigation events, including LoadCompleted, Navigated, and NavigationStopped.  </summary>
		</member>
		<member name="P:System.Windows.Navigation.NavigationEventArgs.Content">
			<summary> Gets a reference to the root node of the target page's content. </summary>
			<returns>The root element of the target page's content.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationEventArgs.ExtraData">
			<summary> Gets an optional user-defined data object. </summary>
			<returns>The data object.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationEventArgs.Uri">
			<summary> Gets the target page's uniform resource identifier (URI). </summary>
			<returns>A Uri object that contain's the target page's URI.</returns>
		</member>
		<member name="T:System.Windows.Navigation.NavigationFailedEventArgs">
			<summary>Provides data for the NavigationFailed event.</summary>
		</member>
		<member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Exception">
			<summary>Gets the <see cref="T:System.Exception"></see> that was raised as the result of a failed navigation.</summary>
			<returns>The <see cref="T:System.Exception"></see> that was raised as the result of a failed navigation.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationFailedEventArgs.ExtraData">
			<summary>Gets the optional data <see cref="T:System.Object"></see> that was passed when navigation commenced.</summary>
			<returns>The optional data <see cref="T:System.Object"></see> that was passed when navigation commenced.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Handled">
			<summary>Gets or sets whether the failed navigation exception has been handled.</summary>
			<returns>true if the exception is handled; otherwise, false (default).</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Navigator">
			<summary>The navigator that raised this event.</summary>
			<returns>An <see cref="T:System.Object"></see> that is the navigator that raised this event</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationFailedEventArgs.Uri">
			<summary>Gets the uniform resource identifier (URI) for the content that could not be navigated to.</summary>
			<returns>The <see cref="T:System.Uri"></see> for the content that could not be navigated to.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest">
			<summary>Gets the web request that was used to request the specified content.</summary>
			<returns>Gets the <see cref="T:System.Net.WebRequest"></see> object that was used to request the specified content. If navigating to an object, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebRequest"></see> is null.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse">
			<summary>Gets the web response that was returned after attempting to download the requested the specified content.</summary>
			<returns>The <see cref="T:System.Net.WebResponse"></see> that was returned after attempting to download the requested the specified content. If the navigation failed, <see cref="P:System.Windows.Navigation.NavigationFailedEventArgs.WebResponse"></see> is null.</returns>
		</member>
		<member name="T:System.Windows.Navigation.NavigationFailedEventHandler">
			<summary>Represents the method that handles the NavigationFailed events.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigationMode">
			<summary>Specifies the type of navigation that is taking place <see cref="T:System.Windows.Navigation.NavigationMode"></see> is used by the <see cref="P:System.Windows.Navigation.NavigatingCancelEventArgs.NavigationMode"></see> property.</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationMode.Back">
			<summary>Navigating back to the most recent content in back navigation history. This occurs when the GoBack method is called.</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationMode.Forward">
			<summary>Navigating to the most recent content on forward navigation history. This occurs when the GoForward method is called.</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationMode.New">
			<summary>Navigating to new content. This occurs when the Navigate method is called, or when Source property is set.</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationMode.Refresh">
			<summary>Reloading the current content. This occurs when the Refresh method is called.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigationProgressEventArgs">
			<summary> Contains the arguments for the <see cref="E:System.Windows.Application.NavigationProgress"></see> and <see cref="E:System.Windows.Navigation.NavigationWindow.NavigationProgress"></see> events. </summary>
		</member>
		<member name="P:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead">
			<summary> Gets the number of bytes that have been read. </summary>
			<returns>The number of bytes that have been read.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes">
			<summary> Gets the maximum number of bytes. </summary>
			<returns>The maximum number of bytes.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationProgressEventArgs.Uri">
			<summary> Gets the uniform resource identifier (URI) of the target page. </summary>
			<returns>A Uri object that contains the target page's URI.</returns>
		</member>
		<member name="T:System.Windows.Navigation.NavigationProgressEventHandler">
			<summary>Represents the method that handles the NavigationProgress events.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigationService">
			<summary>Contains methods, properties, and events to support navigation. This class cannot be inherited.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationService.FragmentNavigation">
			<summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationService.LoadCompleted">
			<summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationService.Navigated">
			<summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Navigation.NavigationService.Content"></see> property, although it may not have completed loading.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationService.Navigating">
			<summary>Occurs when a new navigation is requested.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationService.NavigationFailed">
			<summary>Occurs when an error is raised while navigating to the requested content.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationService.NavigationProgress">
			<summary>Occurs periodically during a download to provide navigation progress information.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationService.NavigationStopped">
			<summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationService.StopLoading"></see> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)">
			<summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState"></see> object.</summary>
			<param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that represents application-defined state that is associated with a specific piece of content.</param>
			<exception cref="T:System.InvalidOperationException">state is null, and a <see cref="T:System.Windows.Navigation.CustomContentState"></see> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState"></see>.</exception>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)">
			<summary>Gets the <see cref="T:System.Windows.Navigation.NavigationService"></see> object for the navigator (<see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>) whose content contains the specified <see cref="T:System.Windows.DependencyObject"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Navigation.NavigationService"></see> object for the navigator (<see cref="T:System.Windows.Navigation.NavigationWindow"></see>, <see cref="T:System.Windows.Controls.Frame"></see>) whose content contains the specified <see cref="T:System.Windows.DependencyObject"></see>; otherwise, null is returned when the dependencyObject:Is a <see cref="T:System.Windows.Navigation.NavigationWindow"></see> or a Is a <see cref="T:System.Windows.Controls.Frame"></see> that is hosted by another navigator, and whose <see cref="P:System.Windows.Controls.Frame.JournalOwnership"></see> property is set to <see cref="F:System.Windows.Navigation.JournalOwnership.UsesParentJournal"></see>.Is not part of content that is hosted by a navigator.</returns>
			<param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject"></see> in content that is hosted by a navigator.</param>
			<exception cref="T:System.ArgumentNullException">The dependencyObject parameter is null.</exception>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.GoBack">
			<summary>Navigates to the most recent entry in back navigation history, if there is one.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationService.GoBack"></see> is called when there are no entries in back navigation history.</exception>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.GoForward">
			<summary>Navigate to the most recent entry in forward navigation history, if there is one.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationService.GoForward"></see> is called when there are no entries in forward navigation history.</exception>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)">
			<summary>Navigate asynchronously to content that is contained by an object.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="root">An <see cref="T:System.Object"></see> that contains the content to navigate to.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)">
			<summary>Navigate asynchronously to content that is specified by a uniform resource identifier (URI).</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="source">A <see cref="T:System.Uri"></see> object initialized with the URI for the desired content.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)">
			<summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="navigationState">A <see cref="T:System.Object"></see> that contains data to be used for processing during navigation.</param>
			<param name="root">An <see cref="T:System.Object"></see> that contains the content to navigate to.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)">
			<summary>Navigate asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="source">A <see cref="T:System.Uri"></see> object initialized with the URI for the desired content.</param>
			<param name="navigationState">A <see cref="T:System.Object"></see> that contains data to be used for processing during navigation.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)">
			<summary>Navigate asynchronously to source content located at a uniform resource identifier (URI), pass an object containing navigation state for processing during navigation, and sandbox the content.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="sandboxExternalContent">Download content into a partial trust security sandbox (with the default Internet zone set of permissions, if true. The default value is false.</param>
			<param name="navigationState">A <see cref="T:System.Object"></see> that contains data to be used for processing during navigation.</param>
			<param name="root">A <see cref="T:System.Uri"></see> object initialized with the URI for the desired content.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.Refresh">
			<summary>Reloads the current content.</summary>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.RemoveBackEntry">
			<summary>Removes the most recent journal entry from back history.</summary>
			<returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry"></see> in back navigation history, if there is one.</returns>
		</member>
		<member name="M:System.Windows.Navigation.NavigationService.StopLoading">
			<summary>Stops further downloading of content for the current navigation request.</summary>
		</member>
		<member name="P:System.Windows.Navigation.NavigationService.CanGoBack">
			<summary>Gets whether there is at least one entry in back navigation history.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that is true if there is at least one entry in back navigation history, or false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationService.CanGoForward">
			<summary>Gets whether there is at least one entry in forward navigation history.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that is true if there is at least one entry in forward navigation history, or false otherwise.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationService.Content">
			<summary>Gets or sets a reference to the object that contains the current content.</summary>
			<returns>A <see cref="T:System.Object"></see> that is a reference to the object that contains the current content.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationService.CurrentSource">
			<summary>Gets the uniform resource identifier (URI) of the content that was last navigated to.</summary>
			<returns>A <see cref="T:System.Uri"></see> for the content that was last navigated to, if navigated to by using a URI; otherwise, null.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationService.Source">
			<summary>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to.</summary>
			<returns>A <see cref="T:System.Uri"></see> that contains the URI for the current content, or the content that is currently being navigated to.</returns>
		</member>
		<member name="T:System.Windows.Navigation.NavigationStoppedEventHandler">
			<summary>Represents the method that handles the NavigationStopped events.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigationUIVisibility">
			<summary>Specifies whether a <see cref="T:System.Windows.Controls.Frame"></see> displays its navigation chrome. <see cref="T:System.Windows.Navigation.NavigationUIVisibility"></see> is used by the <see cref="P:System.Windows.Controls.Frame.NavigationUIVisibility"></see> property.</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationUIVisibility.Automatic">
			<summary>The navigation chrome is visible when a <see cref="T:System.Windows.Controls.Frame"></see> uses its own journal (see <see cref="P:System.Windows.Controls.Frame.JournalOwnership"></see>).</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationUIVisibility.Hidden">
			<summary>The navigation chrome is not visible.</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationUIVisibility.Visible">
			<summary>The navigation chrome is visible.</summary>
		</member>
		<member name="T:System.Windows.Navigation.NavigationWindow">
			<summary>Represents a window that supports content navigation.</summary>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.NavigationWindow"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationWindow.FragmentNavigation">
			<summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source XAML content has been loaded, if the desired fragment is in different content.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationWindow.LoadCompleted">
			<summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationWindow.Navigated">
			<summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property, although it may not have completed loading.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationWindow.Navigating">
			<summary>Occurs when a new navigation is requested.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationWindow.NavigationFailed">
			<summary>Occurs when an error is raised while navigating to the requested content.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationWindow.NavigationProgress">
			<summary>Occurs periodically during a download to provide navigation progress information.</summary>
		</member>
		<member name="E:System.Windows.Navigation.NavigationWindow.NavigationStopped">
			<summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationWindow.StopLoading"></see> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
		</member>
		<member name="F:System.Windows.Navigation.NavigationWindow.BackStackProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Navigation.NavigationWindow.CanGoBackProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Navigation.NavigationWindow.CanGoForwardProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Navigation.NavigationWindow.ForwardStackProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Navigation.NavigationWindow.SandboxExternalContentProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Navigation.NavigationWindow.ShowsNavigationUIProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Navigation.NavigationWindow.SourceProperty">
			<summary>Identifies the <see cref="P:System.Windows.Navigation.NavigationWindow.Source"></see> dependency property.</summary>
			<returns>The identifier for the <see cref="P:System.Windows.Navigation.NavigationWindow.Source"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.AddBackEntry(System.Windows.Navigation.CustomContentState)">
			<summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState"></see> object.</summary>
			<param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState"></see> object that represents application-defined state that is associated with a specific piece of content.</param>
			<exception cref="T:System.InvalidOperationException">state is null, and a <see cref="T:System.Windows.Navigation.CustomContentState"></see> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState"></see>.</exception>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.AddChild(System.Object)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.AddText(System.String)">
			<summary>This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.</summary>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.GoBack">
			<summary>Navigates to the most recent item in back navigation history.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationWindow.GoBack"></see> is called when there are no entries in back navigation history.</exception>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.GoForward">
			<summary>Navigates to the most recent item in forward navigation history.</summary>
			<exception cref="T:System.InvalidOperationException"><see cref="M:System.Windows.Navigation.NavigationWindow.GoForward"></see> is called when there are no entries in forward navigation history.</exception>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object)">
			<summary>Navigate asynchronously to content that is contained by an object.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="content">An <see cref="T:System.Object"></see> that contains the content to navigate to.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri)">
			<summary>Navigate asynchronously to content that is specified by a uniform resource identifier (URI).</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="source">A <see cref="T:System.Uri"></see> object initialized with the URI for the desired content.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Object,System.Object)">
			<summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="extraData">A <see cref="T:System.Object"></see> that contains data to be used for processing during navigation.</param>
			<param name="content">An <see cref="T:System.Object"></see> that contains the content to navigate to.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.Navigate(System.Uri,System.Object)">
			<summary>Navigate asynchronously to source content located at a uniform resource identifier (URI), and pass an object that contains data to be used for processing during navigation.</summary>
			<returns>A <see cref="T:System.Boolean"></see> value that is set to true if a navigation is not canceled; otherwise, false.</returns>
			<param name="source">A <see cref="T:System.Uri"></see> object initialized with the URI for the desired content.</param>
			<param name="extraData">A <see cref="T:System.Object"></see> that contains data to be used for processing during navigation.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.OnApplyTemplate">
			<summary>Called when the template generation for the visual tree is created.</summary>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.OnClosed(System.EventArgs)">
			<summary>Raises the <see cref="E:System.Windows.Window.Closed"></see> event.</summary>
			<param name="args">An <see cref="T:System.EventArgs"></see> that contains the event data.</param>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.OnCreateAutomationPeer">
			<summary>Creates and returns a <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer"></see> object for this <see cref="T:System.Windows.Navigation.NavigationWindow"></see>.</summary>
			<returns>A <see cref="T:System.Windows.Automation.Peers.NavigationWindowAutomationPeer"></see> object for this <see cref="T:System.Windows.Navigation.NavigationWindow"></see>.</returns>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.Refresh">
			<summary>Reloads the current content.</summary>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.RemoveBackEntry">
			<summary>Removes the most recent journal entry from back history.</summary>
			<returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry"></see> in back navigation history, if there is one.</returns>
		</member>
		<member name="M:System.Windows.Navigation.NavigationWindow.ShouldSerializeContent">
			<summary>Indicates whether the <see cref="P:System.Windows.Controls.ContentControl.Content"></see> property should be persisted.</summary>
			<returns>true if the property value has changed from its default; otherwise false.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.BackStack">
			<summary>Gets an <see cref="T:System.Collections.IEnumerable"></see> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Navigation.NavigationWindow"></see>. This is a dependency property.</summary>
			<returns><see cref="T:System.Collections.IEnumerable"></see> if at least one entry has been added to back navigation history. If there are not entries, or the <see cref="T:System.Windows.Navigation.NavigationWindow"></see> does not own its own navigation history, <see cref="P:System.Windows.Navigation.NavigationWindow.BackStack"></see> isnull.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.CanGoBack">
			<summary>Gets whether there is at least one entry in back navigation history. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that is true if there is at least one entry in back navigation history. If there are no entries in back navigation history, or the <see cref="T:System.Windows.Navigation.NavigationWindow"></see> does not own its own navigation history, <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoBack"></see> is false.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.CanGoForward">
			<summary>Gets whether there is at least one entry in forward navigation history. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that is true if there is at least one entry in forward navigation history. If there are no entries in forward navigation history, or the <see cref="T:System.Windows.Navigation.NavigationWindow"></see> does not own its own navigation history, <see cref="P:System.Windows.Navigation.NavigationWindow.CanGoForward"></see> is false.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.CurrentSource">
			<summary>Gets the uniform resource identifier (URI) of the content that was last navigated to.</summary>
			<returns>A <see cref="T:System.Uri"></see> for the content that was last navigated to, if navigated to by using a URI; otherwise, null.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.ForwardStack">
			<summary>Gets an <see cref="T:System.Collections.IEnumerable"></see> that you use to enumerate the entries in back navigation history for a <see cref="T:System.Windows.Navigation.NavigationWindow"></see>. This is a dependency property.</summary>
			<returns><see cref="T:System.Collections.IEnumerable"></see> if at least one entry has been added to forward navigation history. If there are not entries, or the <see cref="T:System.Windows.Navigation.NavigationWindow"></see> does not own its own navigation history, <see cref="P:System.Windows.Navigation.NavigationWindow.ForwardStack"></see> isnull.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Navigation.NavigationWindow"></see> isolates external Extensible Application Markup Language (XAML) content within a partial trust security sandbox (with default Internet zone permission set). This is a dependency property.</summary>
			<returns>true if content is isolated within a partial trust security sandbox; otherwise, false. The default is false.</returns>
			<exception cref="T:System.Security.SecurityException"><see cref="P:System.Windows.Navigation.NavigationWindow.SandboxExternalContent"></see> is set when an application is executing in partial trust.</exception>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.ShowsNavigationUI">
			<summary>Gets or sets whether a <see cref="T:System.Windows.Navigation.NavigationWindow"></see> shows its navigation UI. This is a dependency property.</summary>
			<returns>true if the navigation UI is displayed; otherwise, false. The default is true.</returns>
		</member>
		<member name="P:System.Windows.Navigation.NavigationWindow.Source">
			<summary>Gets or sets the uniform resource identifier (URI) of the current content, or the URI of new content that is currently being navigated to. This is a dependency property.</summary>
			<returns>A <see cref="T:System.Uri"></see> that contains the URI for the current content, or the content that is currently being navigated to.</returns>
		</member>
		<member name="T:System.Windows.Navigation.PageFunction`1">
			<summary>A special type of page that allows you to treat navigation to a page in a similar fashion to calling a method. </summary>
		</member>
		<member name="M:System.Windows.Navigation.PageFunction`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.PageFunction`1"></see> class. </summary>
		</member>
		<member name="E:System.Windows.Navigation.PageFunction`1.Return">
			<summary>Occurs when a called <see cref="T:System.Windows.Navigation.PageFunction`1"></see> returns, and can only be handled by the calling page.</summary>
		</member>
		<member name="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})">
			<summary>A <see cref="T:System.Windows.Navigation.PageFunction`1"></see> calls <see cref="M:System.Windows.Navigation.PageFunction`1.OnReturn(System.Windows.Navigation.ReturnEventArgs{`0})"></see> to return to the caller, passing a return value via a <see cref="T:System.Windows.Navigation.ReturnEventArgs`1"></see> object</summary>
			<param name="e">A <see cref="T:System.Windows.Navigation.ReturnEventArgs`1"></see> object that contains the <see cref="T:System.Windows.Navigation.PageFunction`1"></see> return value (<see cref="P:System.Windows.Navigation.ReturnEventArgs`1.Result"></see>).</param>
		</member>
		<member name="T:System.Windows.Navigation.PageFunctionBase">
			<summary>An abstract base class that is the parent of all page function classes.</summary>
		</member>
		<member name="M:System.Windows.Navigation.PageFunctionBase.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.PageFunctionBase"></see> type.</summary>
		</member>
		<member name="P:System.Windows.Navigation.PageFunctionBase.RemoveFromJournal">
			<summary>Gets or sets a value that indicates whether the page function should not be added to navigation history.</summary>
			<returns>A <see cref="T:System.Boolean"></see> that indicates whether a page function should not be added to navigation history. The default value is false.</returns>
		</member>
		<member name="T:System.Windows.Navigation.RequestNavigateEventArgs">
			<summary>Provides data for the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate"></see> event. </summary>
		</member>
		<member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs"></see> class. This constructor is protected.</summary>
		</member>
		<member name="M:System.Windows.Navigation.RequestNavigateEventArgs.#ctor(System.Uri,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs"></see> class with a uniform resource identifier (URI) and target name.</summary>
			<param name="uri">The target URI.</param>
			<param name="target">The target name.</param>
		</member>
		<member name="M:System.Windows.Navigation.RequestNavigateEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
			<summary>Invokes a specified event handler from a specified sender. </summary>
			<param name="genericTarget">The object that is raising the event.</param>
			<param name="genericHandler">The name of the handler.</param>
		</member>
		<member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Target">
			<summary>The navigator that will host the content that is navigated to.</summary>
			<returns>The navigator (<see cref="T:System.Windows.Navigation.NavigationWindow"></see> or <see cref="T:System.Windows.Controls.Frame"></see>) that will host the content that is navigated to.</returns>
		</member>
		<member name="P:System.Windows.Navigation.RequestNavigateEventArgs.Uri">
			<summary>The uniform resource identifier (URI) for the content that is being navigated to.</summary>
			<returns>The URI for the content that is being navigated to.</returns>
		</member>
		<member name="T:System.Windows.Navigation.RequestNavigateEventHandler">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Documents.Hyperlink.RequestNavigate"></see> event of the <see cref="T:System.Windows.Documents.Hyperlink"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Navigation.ReturnEventArgs`1">
			<summary>Provides data for the <see cref="E:System.Windows.Navigation.PageFunction`1.Return"></see> event. </summary>
		</member>
		<member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.ReturnEventArgs`1"></see> class. </summary>
		</member>
		<member name="M:System.Windows.Navigation.ReturnEventArgs`1.#ctor(`0)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Navigation.ReturnEventArgs`1"></see> class with the return value.</summary>
			<param name="result">The value to be returned.</param>
		</member>
		<member name="P:System.Windows.Navigation.ReturnEventArgs`1.Result">
			<summary>Gets or sets the value that is returned by the page function.</summary>
			<returns>The value that is returned by the page function.</returns>
		</member>
		<member name="T:System.Windows.Navigation.ReturnEventHandler`1">
			<summary>Represents the method that handles the <see cref="E:System.Windows.Navigation.PageFunction`1.Return"></see> event of the <see cref="T:System.Windows.Navigation.PageFunction`1"></see> class.</summary>
		</member>
		<member name="T:System.Windows.Resources.ContentTypes">
			<summary>Supports Extensible Application Markup Language (XAML) as a content type and resource.</summary>
		</member>
		<member name="M:System.Windows.Resources.ContentTypes.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.ContentTypes"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Resources.ContentTypes.XamlContentType">
			<summary>Declares the Extensible Application Markup Language (XAML) content type.</summary>
			<returns>A string that is used to identify Extensible Application Markup Language (XAML) as a Multipurpose Internet Mail Extensions (MIME) type.</returns>
		</member>
		<member name="T:System.Windows.Resources.StreamResourceInfo">
			<summary>Stores information for a stream resource used in Windows Presentation Foundation (WPF), such as images.</summary>
		</member>
		<member name="M:System.Windows.Resources.StreamResourceInfo.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.StreamResourceInfo"></see> class.</summary>
		</member>
		<member name="M:System.Windows.Resources.StreamResourceInfo.#ctor(System.IO.Stream,System.String)">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Resources.StreamResourceInfo"></see> class based on a provided stream.</summary>
			<param name="contentType">The Multipurpose Internet Mail Extensions (MIME)  content type of the stream.</param>
			<param name="stream">The reference stream.</param>
		</member>
		<member name="P:System.Windows.Resources.StreamResourceInfo.ContentType">
			<summary> Gets or sets the content type of a stream. </summary>
			<returns>The Multipurpose Internet Mail Extensions (MIME) content type.</returns>
		</member>
		<member name="P:System.Windows.Resources.StreamResourceInfo.Stream">
			<summary> Gets or sets the actual stream of the resource. </summary>
			<returns>The stream for the resource.</returns>
		</member>
		<member name="N:System.Windows.Shapes">
			<summary>Provides access to a library of shapes that can be used in Extensible Application Markup Language (XAML) or procedural code.</summary>
		</member>
		<member name="T:System.Windows.Shapes.Ellipse">
			<summary>Draws an ellipse. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Windows.Shapes.Ellipse.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Ellipse"></see> class.</summary>
		</member>
		<member name="P:System.Windows.Shapes.Ellipse.GeometryTransform">
			<summary>Gets the value of any <see cref="P:System.Windows.Media.Transform.Identity"></see> transforms that are applied to the <see cref="T:System.Windows.Media.Geometry"></see> of an <see cref="T:System.Windows.Shapes.Ellipse"></see> before it is rendered.</summary>
			<returns>The value of any <see cref="P:System.Windows.Media.Transform.Identity"></see> transforms that are applied to the <see cref="T:System.Windows.Media.Geometry"></see> of an <see cref="T:System.Windows.Shapes.Ellipse"></see> before it is rendered.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Ellipse.RenderedGeometry">
			<summary>Gets the final rendered <see cref="T:System.Windows.Media.Geometry"></see> of an <see cref="T:System.Windows.Shapes.Ellipse"></see>.</summary>
			<returns>The final rendered <see cref="T:System.Windows.Media.Geometry"></see> of an <see cref="T:System.Windows.Shapes.Ellipse"></see>.</returns>
		</member>
		<member name="T:System.Windows.Shapes.Line">
			<summary>Draws a straight line between two points. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Shapes.Line.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Line"></see> class. </summary>
		</member>
		<member name="F:System.Windows.Shapes.Line.X1Property">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X1"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.X1"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Line.X2Property">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Line.X2"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.X2"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Line.Y1Property">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y1"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.Y1"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Line.Y2Property">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Line.Y2"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Line.Y2"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Line.X1">
			<summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line"></see> start point. </summary>
			<returns>The x-coordinate for the start point of the line. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Line.X2">
			<summary>Gets or sets the x-coordinate of the <see cref="T:System.Windows.Shapes.Line"></see> end point. </summary>
			<returns>The x-coordinate for the end point of the line. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Line.Y1">
			<summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line"></see> start point. </summary>
			<returns>The y-coordinate for the start point of the line. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Line.Y2">
			<summary>Gets or sets the y-coordinate of the <see cref="T:System.Windows.Shapes.Line"></see> end point. </summary>
			<returns>The y-coordinate for the end point of the line. The default is 0.</returns>
		</member>
		<member name="T:System.Windows.Shapes.Path">
			<summary>Draws a series of connected lines and curves. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Windows.Shapes.Path.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Path"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Shapes.Path.DataProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Path.Data"></see> dependency property. 
             </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Path.Data"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Path.Data">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Geometry"></see> that specifies the shape to be drawn. </summary>
			<returns>A description of the shape to be drawn. </returns>
		</member>
		<member name="T:System.Windows.Shapes.Polygon">
			<summary>Draws a polygon, which is a connected series of lines that form a closed shape. This class cannot be inherited.</summary>
		</member>
		<member name="M:System.Windows.Shapes.Polygon.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polygon"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Shapes.Polygon.FillRuleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.FillRule"></see> dependency property. 
             </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Polygon.FillRule"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Polygon.PointsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Polygon.Points"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Polygon.Points"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Polygon.FillRule">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.FillRule"></see> enumeration that specifies how the interior fill of the shape is determined. </summary>
			<returns>One of the <see cref="T:System.Windows.Media.FillRule"></see> enumeration values. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd"></see>.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Polygon.Points">
			<summary>Gets or sets a collection that contains the vertex points of the polygon. </summary>
			<returns>A collection of <see cref="T:System.Windows.Point"></see> structures that describe the vertex points of the polygon. The default is a null reference (Nothing in Visual Basic).</returns>
		</member>
		<member name="T:System.Windows.Shapes.Polyline">
			<summary>Draws a series of connected straight lines. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Windows.Shapes.Polyline.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Polyline"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Shapes.Polyline.FillRuleProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.FillRule"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Polyline.FillRule"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Polyline.PointsProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Polyline.Points"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Polyline.Points"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Polyline.FillRule">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.FillRule"></see> enumeration that specifies how the interior fill of the shape is determined. </summary>
			<returns>One of the <see cref="T:System.Windows.Media.FillRule"></see> enumeration values. The default is <see cref="F:System.Windows.Media.FillRule.EvenOdd"></see>.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Polyline.Points">
			<summary>Gets or sets a collection that contains the vertex points of the <see cref="T:System.Windows.Shapes.Polyline"></see>. </summary>
			<returns>A collection of <see cref="T:System.Windows.Point"></see> structures that describe the vertex points of the <see cref="T:System.Windows.Shapes.Polyline"></see>. The default is a null  reference (Nothing in Visual Basic).</returns>
		</member>
		<member name="T:System.Windows.Shapes.Rectangle">
			<summary>Draws a rectangle. This class cannot be inherited. </summary>
		</member>
		<member name="M:System.Windows.Shapes.Rectangle.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Rectangle"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Shapes.Rectangle.RadiusXProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusX"></see> dependency property. 
             </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Rectangle.RadiusX"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Rectangle.RadiusYProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Rectangle.RadiusY"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Rectangle.RadiusY"></see> dependency property.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Rectangle.GeometryTransform">
			<summary>Gets the <see cref="T:System.Windows.Media.Transform"></see> that is applied to this <see cref="T:System.Windows.Shapes.Rectangle"></see>. </summary>
			<returns>The transform that is applied to this <see cref="T:System.Windows.Shapes.Rectangle"></see>.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Rectangle.RadiusX">
			<summary>Gets or sets the x-axis radius of the ellipse that is used to round the corners of the rectangle. </summary>
			<returns>The x-axis radius of the ellipse that is used to round the corners of the rectangle.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Rectangle.RadiusY">
			<summary>Gets or sets the y-axis radius of the ellipse that is used to round the corners of the rectangle. </summary>
			<returns>The y-axis radius of the ellipse that is used to round the corners of the rectangle. The default is 0.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Rectangle.RenderedGeometry">
			<summary>Gets a <see cref="T:System.Windows.Media.Geometry"></see> object that represents the final rendered shape. </summary>
			<returns>The final rendered shape.</returns>
		</member>
		<member name="T:System.Windows.Shapes.Shape">
			<summary>Provides a base class for shape elements, such as <see cref="T:System.Windows.Shapes.Ellipse"></see>, <see cref="T:System.Windows.Shapes.Polygon"></see>, and <see cref="T:System.Windows.Shapes.Rectangle"></see>. This class is abstract. </summary>
		</member>
		<member name="M:System.Windows.Shapes.Shape.#ctor">
			<summary>Initializes a new instance of the <see cref="T:System.Windows.Shapes.Shape"></see> class.</summary>
		</member>
		<member name="F:System.Windows.Shapes.Shape.FillProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Fill"></see> dependency property. This field is read-only.  </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Fill"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StretchProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stretch"></see> dependency property. </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Stretch"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeDashArrayProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray"></see> dependency property.  </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashArray"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeDashCapProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashCap"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeDashOffsetProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeDashOffset"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeEndLineCapProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeEndLineCap"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeLineJoinProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeLineJoin"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeMiterLimitProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeMiterLimit"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.Stroke"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.Stroke"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeStartLineCapProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeStartLineCap"></see> dependency property.</returns>
		</member>
		<member name="F:System.Windows.Shapes.Shape.StrokeThicknessProperty">
			<summary>Identifies the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness"></see> dependency property. 
            </summary>
			<returns>The identifier for the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness"></see> dependency property.</returns>
		</member>
		<member name="M:System.Windows.Shapes.Shape.ArrangeOverride(System.Windows.Size)">
			<summary>Arranges a <see cref="T:System.Windows.Shapes.Shape"></see> by evaluating its <see cref="P:System.Windows.Shapes.Shape.RenderedGeometry"></see> and <see cref="P:System.Windows.Shapes.Shape.Stretch"></see> properties.</summary>
			<returns>The final size of the arranged <see cref="T:System.Windows.Shapes.Shape"></see> element.</returns>
			<param name="finalSize">The final evaluated size of the <see cref="T:System.Windows.Shapes.Shape"></see>.</param>
		</member>
		<member name="M:System.Windows.Shapes.Shape.MeasureOverride(System.Windows.Size)">
			<summary>Measures a <see cref="T:System.Windows.Shapes.Shape"></see> during the first layout pass prior to arranging it.</summary>
			<returns>The maximum <see cref="T:System.Windows.Size"></see> for the <see cref="T:System.Windows.Shapes.Shape"></see>.</returns>
			<param name="constraint">A maximum <see cref="T:System.Windows.Size"></see> to not exceed.</param>
		</member>
		<member name="M:System.Windows.Shapes.Shape.OnRender(System.Windows.Media.DrawingContext)">
			<summary>Provides a means to change the default appearance of a <see cref="T:System.Windows.Shapes.Shape"></see> element.</summary>
			<param name="drawingContext">A <see cref="T:System.Windows.Media.DrawingContext"></see> object that is drawn during the rendering pass of this <see cref="T:System.Windows.Shapes.Shape"></see>.</param>
		</member>
		<member name="P:System.Windows.Shapes.Shape.DefiningGeometry">
			<summary>Gets a value that represents the <see cref="T:System.Windows.Media.Geometry"></see> of the <see cref="T:System.Windows.Shapes.Shape"></see>.</summary>
			<returns>The <see cref="T:System.Windows.Media.Geometry"></see> of the <see cref="T:System.Windows.Shapes.Shape"></see>.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.Fill">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> that specifies how to paint the interior of the shape. </summary>
			<returns>A <see cref="T:System.Windows.Media.Brush"></see> that describes how the interior of the shape is painted. The default is null.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.GeometryTransform">
			<summary>Gets a value that represents a <see cref="T:System.Windows.Media.Transform"></see> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape"></see> prior to when it is drawn.</summary>
			<returns>A <see cref="T:System.Windows.Media.Transform"></see> that is applied to the geometry of a <see cref="T:System.Windows.Shapes.Shape"></see> prior to when it is drawn.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.RenderedGeometry">
			<summary>Gets a value that represents the final rendered <see cref="T:System.Windows.Media.Geometry"></see> of a <see cref="T:System.Windows.Shapes.Shape"></see>.</summary>
			<returns>The final rendered <see cref="T:System.Windows.Media.Geometry"></see> of a <see cref="T:System.Windows.Shapes.Shape"></see>.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.Stretch">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch"></see> enumeration value that describes how the shape fills its allocated space.</summary>
			<returns>One of the <see cref="T:System.Windows.Media.Stretch"></see> enumeration values.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.Stroke">
			<summary>Gets or sets the <see cref="T:System.Windows.Media.Brush"></see> that specifies how to paint the <see cref="T:System.Windows.Shapes.Shape"></see> outline. </summary>
			<returns>A <see cref="T:System.Windows.Media.Brush"></see> that specifies how the <see cref="T:System.Windows.Shapes.Shape"></see> outline is painted. The default is null.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeDashArray">
			<summary>Gets or sets a collection of <see cref="T:System.Double"></see> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
			<returns>A collection of <see cref="T:System.Double"></see> values that specify the pattern of dashes and gaps. </returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeDashCap">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap"></see> enumeration value that specifies how the ends of a dash are drawn. </summary>
			<returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap"></see>. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat"></see>. </returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeDashOffset">
			<summary>Gets or sets a <see cref="T:System.Double"></see> that specifies the distance within the dash pattern where a dash begins.</summary>
			<returns>A <see cref="T:System.Double"></see> that represents the distance within the dash pattern where a dash begins.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeEndLineCap">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap"></see> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape"></see> at the end of a line. </summary>
			<returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap"></see>. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat"></see>.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeLineJoin">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin"></see> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape"></see>.</summary>
			<returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineJoin"></see></returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeMiterLimit">
			<summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness"></see> of a <see cref="T:System.Windows.Shapes.Shape"></see> element. </summary>
			<returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness"></see> of a <see cref="T:System.Windows.Shapes.Shape"></see> element. This value is always a positive number that is greater than or equal to 1.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeStartLineCap">
			<summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap"></see> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape"></see> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke"></see>. </summary>
			<returns>One of the <see cref="T:System.Windows.Media.PenLineCap"></see> enumeration values. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat"></see>.</returns>
		</member>
		<member name="P:System.Windows.Shapes.Shape.StrokeThickness">
			<summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape"></see> outline. </summary>
			<returns>The width of the <see cref="T:System.Windows.Shapes.Shape"></see> outline.</returns>
		</member>
	</members>
</doc>